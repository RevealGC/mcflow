[
    {
        "id": "67991373.45438c",
        "type": "tab",
        "label": "Dynamic Rules From Parameters Files",
        "disabled": true,
        "info": ""
    },
    {
        "id": "2e37e573b3c922d6",
        "type": "tab",
        "label": "Notifications",
        "disabled": false,
        "info": "# Will Send notifications.\n\nEnd point is a post in localhost:80/notification\n\nIts payload is comprised of:\n\nmsg.payload = {\n    data: [],\n    message: \"Submitting a job\",\n    sentFrom: \"QFlow\",\n    sentTo: \"Qbes\"\n}\n\nexports.params = {\n    forceTls: false,\n    params: {\n        DEBUG:    {\n            type: 'bool',\n            source: ['body', 'headers', 'query'],\n            required: false,\n            default: (v) => {\n                if (typeof v !== 'undefined' && v != '') return JSON.parse(v);\n                return false;\n            }\n        },\n        api_token: {\n            type: 'string',\n            source: ['body', 'headers', 'query'],\n            required: false\n        },\n        id:{\n            type: 'int',\n            required: false,\n            source: ['body', 'headers', 'query'],\n        },\n        data: {\n            type: 'json',\n            source: ['body'],\n            required: true,\n            default: []\n        },\n        message: {\n            type:'string',\n            source: ['body'],\n            required: true,\n            default: ''\n        },\n        sentFrom: {\n            type:'string',\n            source: ['body', 'params', 'query'],\n            required: true,\n            default: 'Qbes'\n        },\n\n        sentTo: {\n            type:'string',\n            source: ['body', 'params', 'query'],\n            required: true,\n            default: 'QFlow'\n        },\n        parent_id:{ \n            type: 'int',\n            source: ['params', 'query', 'body', 'headers'],\n            required: false,\n            default: 0\n        }\n\n    },\n    authContext: {\n        super: false,\n        server: false\n    }\n}",
        "env": []
    },
    {
        "id": "d103860e993c1512",
        "type": "tab",
        "label": "Validate RID",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d886a3864a88d832",
        "type": "tab",
        "label": "Processing Parameters",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ae7e9f579855357c",
        "type": "tab",
        "label": "Spad",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "908af5a748b37aba",
        "type": "tab",
        "label": "Rules",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "624a1e6caab6a819",
        "type": "tab",
        "label": "BR_STAT evaluation",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e2750f4248389a2f",
        "type": "tab",
        "label": "Understanding AIES",
        "disabled": false,
        "info": "Reporting Unit\nEntity\nSurvey Details\nSurvey Details flags\nResponse Variables\n",
        "env": []
    },
    {
        "id": "c702b495.9cc2f8",
        "type": "tab",
        "label": "validate",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7d4690e10f209584",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4821a41b2fd327fb",
        "type": "tab",
        "label": "Form 2",
        "disabled": false,
        "info": ""
    },
    {
        "id": "813a171cf0470b24",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ebc615704b7e2ae8",
        "type": "tab",
        "label": "Balance Module",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "01f5b46ca228a07e",
        "type": "tab",
        "label": "Set NONNORM",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b658ecf4c9aae708",
        "type": "tab",
        "label": "Modules Data Table",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5e1c7c0d7569a4cb",
        "type": "tab",
        "label": "Generate Module",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "475c4bbdee672833",
        "type": "tab",
        "label": "Geography",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2245e192a734f1bb",
        "type": "tab",
        "label": "Best Admin Receipts",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6f369789c773517d",
        "type": "tab",
        "label": "Modules Flow",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a1c50a528dd6cf36",
        "type": "tab",
        "label": "Completeness Check",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a51d10c50d9dbbe0",
        "type": "tab",
        "label": "NONNORM",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0d9e5c860a9703c5",
        "type": "tab",
        "label": "Modules Subflows",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f63af22e81ed47a8",
        "type": "tab",
        "label": "Derived Items",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0952db06f674f8bc",
        "type": "tab",
        "label": "Logical Edits",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "91e923b1d58a25de",
        "type": "tab",
        "label": "Post Edit",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6e9fd4ed1a3126bb",
        "type": "tab",
        "label": "Modules Flow w/o Imputation",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d772b64609d590ad",
        "type": "tab",
        "label": "Main Estab",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7904b0afeb2b68c0",
        "type": "tab",
        "label": "Microservice (Jobs)",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "50e56d1290888d82",
        "type": "tab",
        "label": "Microservice (api)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5b93d75bf6b1464b",
        "type": "tab",
        "label": "Microservice (gauges&charts)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d7d109e0d89be1c6",
        "type": "tab",
        "label": "Kafka MS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "762437ab597e66e7",
        "type": "tab",
        "label": "Balance Test",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "0a014270e6816fdf",
        "type": "tab",
        "label": "Critical Error",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5e1a962405c84d2b",
        "type": "tab",
        "label": "Derive NAICS Code",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "dad88d9a3132fed6",
        "type": "tab",
        "label": "Run Modules",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "112a2e5b60c3f3a8",
        "type": "tab",
        "label": "Classification",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d416a739a235277c",
        "type": "tab",
        "label": "ElectricEnergyModule",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c54f3247808fdf7f",
        "type": "tab",
        "label": "Electric Energy Module Cont",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1c6c32346fee9416",
        "type": "tab",
        "label": "Electric Impute Module",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6399b853963e761e",
        "type": "tab",
        "label": "Flow 5",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c5ce2d38887016b2",
        "type": "subflow",
        "name": "Apply rules by level type",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 20,
                "y": 220,
                "wires": [
                    {
                        "id": "a288d737bb052e78"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1580,
                "y": 220,
                "wires": [
                    {
                        "id": "e2519c448954167b",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1580,
                "y": 320,
                "wires": [
                    {
                        "id": "1ef95ce134a911b9",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "0111e67f54e25c8c",
        "type": "subflow",
        "name": "1.1 Classification",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 160,
                "wires": [
                    {
                        "id": "bcea1437bb5bb1a3"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 500,
                "y": 140,
                "wires": [
                    {
                        "id": "bcea1437bb5bb1a3",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "831dceaabaf975f9",
        "type": "subflow",
        "name": "2.1 Geogrpahy",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "f710ad2a1b56dbec"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 620,
                "y": 160,
                "wires": [
                    {
                        "id": "f710ad2a1b56dbec",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "10e53f47b43ab89e",
        "type": "subflow",
        "name": "4.0 Subflow Completeness Check",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "0fc84963f887090f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 500,
                "y": 80,
                "wires": [
                    {
                        "id": "0fc84963f887090f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b99b7893add8c369",
        "type": "subflow",
        "name": "Subflow 1",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "bcba475dfd370f23"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 60,
                "wires": [
                    {
                        "id": "bcba475dfd370f23",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "27fccef587c0b218",
        "type": "subflow",
        "name": "Subflow 2",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "89b27031e68b3415"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 520,
                "y": 60,
                "wires": [
                    {
                        "id": "89b27031e68b3415",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "3fa869ffe40596e5",
        "type": "subflow",
        "name": "Subflow 3",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "6ed3a94bca74bb19"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 160,
                "y": 30,
                "wires": [
                    {
                        "id": "6ed3a94bca74bb19",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "98b684914b5fce08",
        "type": "subflow",
        "name": "Subflow 4",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "ac1127915ee1fd4b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 160,
                "y": 30,
                "wires": [
                    {
                        "id": "ac1127915ee1fd4b",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "2e55e3e8510e62d0",
        "type": "subflow",
        "name": "Subflow 5",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "f40a55ca93f943db"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 440,
                "y": 40,
                "wires": [
                    {
                        "id": "f40a55ca93f943db",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "2ad5fa373c21d0a3",
        "type": "subflow",
        "name": "Subflow 6",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "42dbbd9f093bf42e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 160,
                "y": 30,
                "wires": [
                    {
                        "id": "42dbbd9f093bf42e",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "67a3cd3b754e4fbd",
        "type": "subflow",
        "name": "Subflow 7",
        "info": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "0f9ffc3cef064808"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 160,
                "y": 30,
                "wires": [
                    {
                        "id": "0f9ffc3cef064808",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "045ba1012eb08b50",
        "type": "subflow",
        "name": "Subflow 8",
        "info": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "57bc9e5538773197"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "57bc9e5538773197",
                        "port": 0
                    }
                ]
            }
        ]
    },
    {
        "id": "82cc831b154f3133",
        "type": "subflow",
        "name": "SUB FLOW Dynamic Rules from Parameter Files",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 140,
                "wires": [
                    {
                        "id": "6681b08b.4a688"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1320,
                "y": 240,
                "wires": [
                    {
                        "id": "fff3d06b988e5233",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "8d5b6ce343b26ccf",
        "type": "subflow",
        "name": "Logger Of all Events",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 240,
                "y": 240,
                "wires": [
                    {
                        "id": "fea303947b28f5ab"
                    },
                    {
                        "id": "5208228e9775e479"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "c0092c0f75376452",
        "type": "subflow",
        "name": "Subflow 9",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "e4fb9739caef0397",
        "type": "subflow",
        "name": "Balance Module Subflow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 140,
                "y": 260,
                "wires": [
                    {
                        "id": "0ff8421a7b8e6db8"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "71d3d3dbaed43d3e",
        "type": "subflow",
        "name": "BR_STAT evaluation subflow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "7c51b389c1dc24ae"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "56c26ff961720232",
        "type": "subflow",
        "name": "Derive NAICS Subflow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "bf3c163ded6ea7ce"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "03552ca229e3a7a0",
        "type": "subflow",
        "name": "Subflow 10",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 100,
                "wires": [
                    {
                        "id": "fc793926435fab57"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 100,
                "wires": [
                    {
                        "id": "fc793926435fab57",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 200,
            "y": 40,
            "wires": [
                {
                    "id": "0d6b190eb1914ef7",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "120ad61b88a550e6",
        "type": "subflow",
        "name": "BR STAT EVAL subflow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 140,
                "wires": [
                    {
                        "id": "e985134240611ec7"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 140,
                "wires": [
                    {
                        "id": "e985134240611ec7",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 240,
            "y": 260,
            "wires": [
                {
                    "id": "e8c9be5ce6c6aaf8",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "a08711b1cedb891d",
        "type": "subflow",
        "name": "NONNORM subflow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 140,
                "wires": [
                    {
                        "id": "2334aa4fdd5b642f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 500,
                "y": 140,
                "wires": [
                    {
                        "id": "2334aa4fdd5b642f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 340,
            "y": 200,
            "wires": [
                {
                    "id": "eba64fd9f27069b0",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "a3136c877b98e237",
        "type": "subflow",
        "name": "Critical Error Subflow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 160,
                "wires": [
                    {
                        "id": "24009e768fd1fccd"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 160,
                "wires": [
                    {
                        "id": "24009e768fd1fccd",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 240,
            "y": 220,
            "wires": [
                {
                    "id": "c2693d845fa8c5fa",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "a3d425ba6d3b6a6a",
        "type": "subflow",
        "name": "Classification Subflow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 160,
                "wires": [
                    {
                        "id": "a9488a8d395e57ca"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 360,
                "y": 160,
                "wires": [
                    {
                        "id": "a9488a8d395e57ca",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 200,
            "y": 60,
            "wires": [
                {
                    "id": "85c4a58489514054",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "4ed21c9150f5597a",
        "type": "subflow",
        "name": "Geography Subflow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 180,
                "wires": [
                    {
                        "id": "2f9a589f15cd676e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 180,
                "wires": [
                    {
                        "id": "2f9a589f15cd676e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 220,
            "y": 40,
            "wires": [
                {
                    "id": "267f52fccba46d6f",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "a0bced2e224712c4",
        "type": "subflow",
        "name": "Calculate Best Admin Receipts Subflow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 200,
                "wires": [
                    {
                        "id": "06e76c577e867a28"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 380,
                "y": 200,
                "wires": [
                    {
                        "id": "06e76c577e867a28",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 220,
            "y": 20,
            "wires": [
                {
                    "id": "7079068ecbbe7a0c",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "1e75121bac78652a",
        "type": "subflow",
        "name": "Completeness Subflow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 180,
                "wires": [
                    {
                        "id": "c8cdb6c161debc28"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 360,
                "y": 180,
                "wires": [
                    {
                        "id": "c8cdb6c161debc28",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 215,
            "y": 30,
            "wires": [
                {
                    "id": "b471fc927cf789d7",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "f4b783dd9228239a",
        "type": "subflow",
        "name": "Subflow 11",
        "info": "",
        "in": [],
        "out": []
    },
    {
        "id": "acd9862f30af144d",
        "type": "subflow",
        "name": "PV Subflow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 180,
                "wires": [
                    {
                        "id": "934d95644c951dfc"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 180,
                "wires": [
                    {
                        "id": "934d95644c951dfc",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 200,
            "y": 40,
            "wires": [
                {
                    "id": "4c82868047e24054",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "ae0faa518ff234d5",
        "type": "subflow",
        "name": "Derived Items Subflow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 160,
                "wires": [
                    {
                        "id": "a213ffa0737c4159"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 360,
                "y": 160,
                "wires": [
                    {
                        "id": "a213ffa0737c4159",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 180,
            "y": 40,
            "wires": [
                {
                    "id": "65577406809b25a9",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "473d6735cc46fccd",
        "type": "subflow",
        "name": "Logical Edits Subflow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 180,
                "wires": [
                    {
                        "id": "1983b2e5645df49c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 360,
                "y": 180,
                "wires": [
                    {
                        "id": "1983b2e5645df49c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 180,
            "y": 60,
            "wires": [
                {
                    "id": "6ada43c172923c7a",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "fd9469a0efbb8a77",
        "type": "subflow",
        "name": "Balance Subflow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 220,
                "wires": [
                    {
                        "id": "b434c43de5c1d938"
                    },
                    {
                        "id": "3de7d4b88b6bc5dc"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1980,
                "y": 180,
                "wires": [
                    {
                        "id": "e2d5eecae0459e01",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1160,
            "y": 100,
            "wires": [
                {
                    "id": "92892d34775a5fc5",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "96f29b19e2260e65",
        "type": "subflow",
        "name": "Post Edit Subflow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 160,
                "wires": [
                    {
                        "id": "9b8ef39b6cf7149e"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 160,
                "wires": [
                    {
                        "id": "9b8ef39b6cf7149e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 220,
            "y": 40,
            "wires": [
                {
                    "id": "0ec224ff5d120eb7",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "bfe1ab19e0cbe2cf",
        "type": "subflow",
        "name": "Classification",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "2c13cd1702f219b4"
                    },
                    {
                        "id": "18ba959db21960e4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 700,
                "y": 180,
                "wires": [
                    {
                        "id": "32bcf1022944c0d1",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "fdb2d8067b333a05",
        "type": "subflow",
        "name": "Critical Error",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "a0073744f94a218c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 540,
                "y": 80,
                "wires": [
                    {
                        "id": "a0073744f94a218c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "196c62ada91c222d",
        "type": "subflow",
        "name": "Estab BR stat eval",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "526f4d9c42347dd0"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 440,
                "y": 160,
                "wires": [
                    {
                        "id": "526f4d9c42347dd0",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "0be109393cb5f28a",
        "type": "subflow",
        "name": "Lookup Cache Subflow",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 50,
                "y": 30,
                "wires": [
                    {
                        "id": "8c066284600dbc44"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 760,
                "y": 380,
                "wires": [
                    {
                        "id": "f5dbe24054de29ce",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "7dc18555ca029842",
        "type": "group",
        "z": "d103860e993c1512",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f3903be4e24d8dca",
            "97d2bd49cb3742bc",
            "999bbdaf976e7feb",
            "d529da54696a9982",
            "d1e0f39ddacfeb20",
            "d015bbe8f3761f7f"
        ],
        "x": 54,
        "y": -1
    },
    {
        "id": "5a28e866a67c90ec",
        "type": "group",
        "z": "d103860e993c1512",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "a52599d1e82370ad",
            "3773a11cc06cd9db",
            "f47d58da6a345fa9",
            "12d8ce370fc2153f",
            "6970f9e5cadfae30",
            "eee34fb243fcc025",
            "8764792a5250d529"
        ],
        "x": 14,
        "y": 279
    },
    {
        "id": "c0b83f35fdc02130",
        "type": "group",
        "z": "67991373.45438c",
        "name": "FACS FROM DB -Select Reporting IDs from DropDown",
        "style": {
            "label": true
        },
        "nodes": [
            "0cd9973f643e23da",
            "3b55370ad9fd31f5",
            "e76e13639b1f0475",
            "7ce52ec9ef003b44",
            "d394b61bcc4755e6"
        ],
        "x": 14,
        "y": 939,
        "w": 1532,
        "h": 82
    },
    {
        "id": "ef50b77b253a7883",
        "type": "group",
        "z": "67991373.45438c",
        "name": "Rules Types",
        "style": {
            "label": true
        },
        "nodes": [
            "fb483894819a453e",
            "5f12a638967ad520",
            "199e84df3d73b845",
            "79f4bff451119fb7",
            "645a9d4772fcd00f",
            "739c4193fa8fce2c",
            "d587f5de3f4014c8"
        ],
        "x": 14,
        "y": 239,
        "w": 1792,
        "h": 182
    },
    {
        "id": "62708d0bbe922798",
        "type": "group",
        "z": "67991373.45438c",
        "name": "FACTS: From File",
        "style": {
            "label": true
        },
        "nodes": [
            "97cb22c43553888b",
            "04f3b0fb456d2117",
            "100234cf93c195b8",
            "c047c871d9c0e70d",
            "c9c9ca415ab95910",
            "16550455147cd747",
            "211d46862546b6bf",
            "571a7beaed3ab093",
            "24856db77f81d8bb",
            "21a2308db46311bb",
            "58df41cd8e54a653"
        ],
        "x": 14,
        "y": 519,
        "w": 1432,
        "h": 322
    },
    {
        "id": "19463268a6c67561",
        "type": "group",
        "z": "67991373.45438c",
        "name": "Rules: From Parameter Files",
        "style": {
            "label": true
        },
        "nodes": [
            "9a7a7971.dbc4b8",
            "1e5beed02674863a",
            "b5c53653a76681bf",
            "06db3e224b379422"
        ],
        "x": 14,
        "y": 99,
        "w": 1432,
        "h": 82,
        "info": "# Rules from Parameter Files"
    },
    {
        "id": "302cb8040ecade52",
        "type": "group",
        "z": "dad88d9a3132fed6",
        "name": "Initialize File Name and Global set moduleFacts",
        "style": {
            "label": true
        },
        "nodes": [
            "12c94ce38056fc20",
            "a47c991027033263"
        ],
        "x": 34,
        "y": 19,
        "w": 432,
        "h": 82
    },
    {
        "id": "4099bf03141f3710",
        "type": "group",
        "z": "dad88d9a3132fed6",
        "name": "Upload a file /simple. Change look of the form in the {html node",
        "style": {
            "label": true
        },
        "nodes": [
            "7c30fb48.99cd2c",
            "3153fbd3.203a64",
            "737e44d2.373a64",
            "46e01eea.4a46a",
            "7d8e179a.283e4",
            "25859a94.7d9976",
            "e1643981.20d7c8",
            "d7e5df8b.97a4e8",
            "0464e4eb98976890",
            "81e3239593f9f1d1",
            "2319e5574f035f21",
            "2e210837e211c8be",
            "20ef4922bea8d7fd",
            "89e7e315b3a8c30b",
            "ba5d5bdad0bc957e",
            "8434c6c16c1fbaaf"
        ],
        "x": 14,
        "y": 619,
        "w": 972,
        "h": 702
    },
    {
        "id": "d1e0f39ddacfeb20",
        "type": "group",
        "z": "d103860e993c1512",
        "g": "7dc18555ca029842",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "e5ca7c9975e3a6b5"
        ],
        "x": 474,
        "y": 99
    },
    {
        "id": "748ca46ea16faad4",
        "type": "junction",
        "z": "67991373.45438c",
        "x": 2161.7333374023438,
        "y": 1642.7333374023438,
        "wires": [
            []
        ]
    },
    {
        "id": "ea3e0b5d6b96f47a",
        "type": "digitaloak-postgresql-connection-manager",
        "name": "PGAIES",
        "host": "aies-cloud-aurora-pg-dev-instance-1.cjflqg3bd6i9.us-gov-east-1.rds.amazonaws.com",
        "port": "5432",
        "database": "space_ite",
        "tls": "",
        "use_tls": false,
        "pool_max_clients": "10",
        "pool_client_max_idle": "10000",
        "client_query_timeout": "",
        "client_statement_timeout": "",
        "client_connection_timeout_millis": "",
        "is_client_enabled": "1"
    },
    {
        "id": "1f48566b.e8958a",
        "type": "ui_group",
        "d": true,
        "name": "2. Processed PreRules",
        "tab": "da612906.998368",
        "order": 9,
        "disp": true,
        "width": 24,
        "collapse": true,
        "className": ""
    },
    {
        "id": "fe5119d6c50995ed",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#6e6e6e",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#e3ffe8",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#6e6e6e",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#6e6e6e",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#949494",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#6e6e6e",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "QFlow",
            "hideToolbar": "true",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "none",
            "dateFormat": "MM/DD/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 6,
                "py": 6
            }
        }
    },
    {
        "id": "18e6e44c.b0561c",
        "type": "ui_group",
        "name": "Tables",
        "tab": "",
        "order": 8,
        "disp": true,
        "width": "6"
    },
    {
        "id": "24e6f02ee5d4fe37",
        "type": "ui_group",
        "name": "Workflows",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "13",
        "collapse": false,
        "className": ""
    },
    {
        "id": "aaf91b7e.c5ca7",
        "type": "ui_group",
        "name": "PreData",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d7c16b88.658fa8",
        "type": "ui_group",
        "name": "iframe",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "99274104.d1d6",
        "type": "ui_group",
        "name": "Weather",
        "tab": "",
        "order": 3,
        "disp": false,
        "width": "5",
        "collapse": false
    },
    {
        "id": "e7dc0c12a87bf783",
        "type": "ui_tab",
        "d": true,
        "name": "Rules",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b42243a688b5a996",
        "type": "ui_group",
        "name": "Enter Workflows",
        "tab": "e7dc0c12a87bf783",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "fe9b4de4.dcd72",
        "type": "ui_group",
        "name": "Name list",
        "tab": "e7dc0c12a87bf783",
        "order": 1,
        "disp": true,
        "width": "15",
        "collapse": false
    },
    {
        "id": "da612906.998368",
        "type": "ui_tab",
        "d": true,
        "name": "Parameters",
        "icon": "home",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "440f78388bf9306a",
        "type": "ui_group",
        "name": "Rules for Workflows",
        "tab": "e7dc0c12a87bf783",
        "order": 3,
        "disp": true,
        "width": 30,
        "collapse": false,
        "className": ""
    },
    {
        "id": "5c07c02344a2bd3d",
        "type": "ui_group",
        "d": true,
        "name": "1. Parameters File",
        "tab": "da612906.998368",
        "order": 8,
        "disp": true,
        "width": 24,
        "collapse": true,
        "className": ""
    },
    {
        "id": "1f86b2145e7e556a",
        "type": "ui_group",
        "name": "Facts",
        "tab": "da612906.998368",
        "order": 5,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "18a5a593fcd64912",
        "type": "ui_group",
        "name": "Dynamic Rules from Parameters File",
        "tab": "da612906.998368",
        "order": 11,
        "disp": true,
        "width": 24,
        "collapse": true,
        "className": ""
    },
    {
        "id": "134f09c88dd005fc",
        "type": "ui_group",
        "name": "Assert Facts",
        "tab": "da612906.998368",
        "order": 12,
        "disp": true,
        "width": "24",
        "collapse": true,
        "className": ""
    },
    {
        "id": "160e81fb.f1c86e",
        "type": "ui_group",
        "name": "File Browser",
        "tab": "b63d1f91.68095",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false
    },
    {
        "id": "b63d1f91.68095",
        "type": "ui_tab",
        "d": true,
        "name": "Files",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c33a1024a72aa169",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "8b3784e33ba42593",
        "type": "ui_group",
        "name": "JSON2tree",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4060ccd3b1b979fd",
        "type": "ui_group",
        "name": "Gauges",
        "tab": "da612906.998368",
        "order": 1,
        "disp": false,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d5b306fd70950040",
        "type": "ui_group",
        "name": "Rules",
        "tab": "da612906.998368",
        "order": 3,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "1d5401bf95a96f03",
        "type": "ui_group",
        "name": "JOBS",
        "tab": "da612906.998368",
        "order": 10,
        "disp": true,
        "width": "24",
        "collapse": true,
        "className": ""
    },
    {
        "id": "d68e7be3.88f088",
        "type": "ui_group",
        "name": "Forms Example",
        "tab": "67ff17e9.83751",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "54bca71e.4287f",
        "type": "ui_group",
        "name": "Form",
        "tab": "67ff17e9.83751",
        "order": 2,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "67ff17e9.83751",
        "type": "ui_tab",
        "d": true,
        "name": "Forms Example ",
        "icon": "home",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "785c383535b14b7d",
        "type": "ui_group",
        "z": "4821a41b2fd327fb",
        "name": "Dashboard Event Log",
        "tab": "67ff17e9.83751",
        "order": 3,
        "disp": true,
        "width": "8",
        "collapse": false
    },
    {
        "id": "fc893c6c.aaeff",
        "type": "ui_group",
        "name": "Leaderboard",
        "tab": "c79bed56.dc9bd",
        "order": 1,
        "disp": true,
        "width": "10",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c79bed56.dc9bd",
        "type": "ui_tab",
        "d": true,
        "name": "LeaderBoard",
        "icon": "dashboard",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "779fdd53a3120890",
        "type": "ui_group",
        "name": "Submit Job",
        "tab": "da612906.998368",
        "order": 7,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "6c5eaeae4cddb9b5",
        "type": "ui_group",
        "name": "Notifications",
        "tab": "da612906.998368",
        "order": 2,
        "disp": true,
        "width": "24",
        "collapse": true,
        "className": ""
    },
    {
        "id": "4c1a66c045af9fe9",
        "type": "ui_group",
        "name": "Dummy 11",
        "tab": "da612906.998368",
        "order": 6,
        "disp": false,
        "width": 24,
        "collapse": false,
        "className": ""
    },
    {
        "id": "90b2b640d0604f0c",
        "type": "ui_group",
        "name": "Dummy  12",
        "tab": "da612906.998368",
        "order": 4,
        "disp": true,
        "width": 24,
        "collapse": false,
        "className": ""
    },
    {
        "id": "5d2c762b30aa4565",
        "type": "ui_group",
        "name": "Group 13",
        "tab": "da612906.998368",
        "order": 13,
        "disp": true,
        "width": 6
    },
    {
        "id": "89738f37a85241c4",
        "type": "ui_group",
        "name": "Group 14",
        "tab": "da612906.998368",
        "order": 14,
        "disp": true,
        "width": 6
    },
    {
        "id": "6f46629ba1286c64",
        "type": "ui_tab",
        "d": true,
        "name": "Jobs",
        "icon": "fa-hand-o-right ",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "48c415689cc2322d",
        "type": "ui_group",
        "name": "Submit Jobs",
        "tab": "6f46629ba1286c64",
        "order": 1,
        "disp": true,
        "width": 23,
        "collapse": false,
        "className": ""
    },
    {
        "id": "feff05cd26e0da54",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "440f78388bf9306a",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "34fc56d907f44e90",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "440f78388bf9306a",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "f081928bfa9474f1",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "440f78388bf9306a",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "8d5c276b9010e981",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "440f78388bf9306a",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "5b0ed2ae974ff3e1",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "440f78388bf9306a",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "8333ef5178609617",
        "type": "ui_spacer",
        "z": "67991373.45438c",
        "name": "spacer",
        "group": "440f78388bf9306a",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "2a87ea2fcd055deb",
        "type": "ui_spacer",
        "z": "2e37e573b3c922d6",
        "name": "spacer",
        "group": "48c415689cc2322d",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "1a149df4230a25af",
        "type": "ui_spacer",
        "z": "dad88d9a3132fed6",
        "name": "spacer",
        "group": "b833e8c774d49527",
        "order": 3,
        "width": "12",
        "height": "1"
    },
    {
        "id": "a5b67787a0857995",
        "type": "ui_group",
        "name": "Test Modules",
        "tab": "bdf641dc7b5208f4",
        "order": 1,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "96ded9aa7c8ec809",
        "type": "ui_group",
        "name": "RunButton",
        "tab": "bdf641dc7b5208f4",
        "order": 2,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bdf641dc7b5208f4",
        "type": "ui_tab",
        "name": "Test Modules",
        "icon": "low_priority",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1d1a43b7179c848f",
        "type": "ui_group",
        "name": "Modules Data",
        "tab": "bdf641dc7b5208f4",
        "order": 4,
        "disp": false,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "22fec4fdabbf9dd8",
        "type": "ui_group",
        "name": "Test Workflow",
        "tab": "bdf641dc7b5208f4",
        "order": 3,
        "disp": true,
        "width": "18",
        "collapse": true,
        "className": ""
    },
    {
        "id": "67fb647abfca8480",
        "type": "ui_tab",
        "d": true,
        "name": "Generate Module",
        "icon": "create",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "a54754fb1b7c0694",
        "type": "ui_group",
        "name": "Generate Module",
        "tab": "67fb647abfca8480",
        "order": 1,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cda97de97a6ab5af",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "4060ccd3b1b979fd",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "4056c92d3a414fd7",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "4060ccd3b1b979fd",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "833d7d828f8328c3",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "4060ccd3b1b979fd",
        "order": 7,
        "width": 2,
        "height": 1
    },
    {
        "id": "b71fc71692bc6998",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "4060ccd3b1b979fd",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "86991d3793824c70",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "93c16abbd60e16e9",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "4d2c5d1e634706f6",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 5,
        "width": 1,
        "height": 1
    },
    {
        "id": "6c8945e62b438f68",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 6,
        "width": 7,
        "height": 1
    },
    {
        "id": "cd5d8f7c483cf0fc",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 7,
        "width": 7,
        "height": 1
    },
    {
        "id": "ecb503ea12a48f34",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 8,
        "width": 24,
        "height": 1
    },
    {
        "id": "cab7c0490b969b39",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 10,
        "width": 1,
        "height": 1
    },
    {
        "id": "1ef59fc55a23dbad",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 11,
        "width": 1,
        "height": 1
    },
    {
        "id": "99f0f80f5f6d3888",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 12,
        "width": 1,
        "height": 1
    },
    {
        "id": "ea3da41992b12683",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 13,
        "width": 1,
        "height": 1
    },
    {
        "id": "3a6a13848cf97e33",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "111523e01594e21a",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 15,
        "width": 1,
        "height": 1
    },
    {
        "id": "79e8b37bd2f09079",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "7058dd9de41c265d",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 17,
        "width": 1,
        "height": 1
    },
    {
        "id": "35ada157080b586f",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "1f48566b.e8958a",
        "order": 18,
        "width": 1,
        "height": 1
    },
    {
        "id": "21e596d96f158341",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "1d5401bf95a96f03",
        "order": 4,
        "width": 16,
        "height": 1
    },
    {
        "id": "55560d79181246b2",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "18a5a593fcd64912",
        "order": 3,
        "width": 19,
        "height": 1
    },
    {
        "id": "ef4f9868d6da5e21",
        "type": "ui_group",
        "name": "Group 3",
        "tab": "67fb647abfca8480",
        "order": 3,
        "disp": false,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1fd1ba27e7ae64a1",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "ef4f9868d6da5e21",
        "order": 1,
        "width": 16,
        "height": 1
    },
    {
        "id": "6146efe4fbffe50e",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "ef4f9868d6da5e21",
        "order": 3,
        "width": 16,
        "height": 1
    },
    {
        "id": "e73ad52bf519244c",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "ef4f9868d6da5e21",
        "order": 4,
        "width": 16,
        "height": 1
    },
    {
        "id": "ac5c58b8b6cfd606",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "ef4f9868d6da5e21",
        "order": 5,
        "width": 16,
        "height": 1
    },
    {
        "id": "53dfa9c43a688027",
        "type": "ui_spacer",
        "z": "5e1c7c0d7569a4cb",
        "name": "spacer",
        "group": "ef4f9868d6da5e21",
        "order": 6,
        "width": 16,
        "height": 1
    },
    {
        "id": "ff743e3024d7db10",
        "type": "ui_group",
        "name": "Group 3",
        "tab": "67fb647abfca8480",
        "order": 3,
        "disp": true,
        "width": 6
    },
    {
        "id": "da64493a5c1e0b09",
        "type": "ui_tab",
        "name": "Modules Flow",
        "icon": "dvr",
        "order": 12,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6414e38571345793",
        "type": "ui_group",
        "name": "Modules Flow",
        "tab": "da64493a5c1e0b09",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "eb430edea69b48da",
        "type": "ui_group",
        "name": "JOBS",
        "tab": "07c042ece455f3bd",
        "order": 4,
        "disp": true,
        "width": "24",
        "collapse": true,
        "className": ""
    },
    {
        "id": "07c042ece455f3bd",
        "type": "ui_tab",
        "d": true,
        "name": "Microservice",
        "icon": "show_chart",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "01239f0e2e5d8173",
        "type": "Kafka Broker",
        "name": "Connect to kafka",
        "hosts": [
            {
                "host": "kafka",
                "port": 9092
            }
        ],
        "hostsEnvVar": "",
        "connectTimeout": "10000",
        "requestTimeout": "30000",
        "autoConnect": "true",
        "idleConnection": "5",
        "reconnectOnIdle": "true",
        "maxAsyncRequests": "10",
        "checkInterval": "10",
        "selfSign": true,
        "usetls": false,
        "useCredentials": false
    },
    {
        "id": "44b7aa4c.212894",
        "type": "Kafka Broker",
        "name": "Kafta",
        "hosts": [
            {
                "host": "127.0.0.1",
                "port": 9092
            }
        ],
        "hostsEnvVar": "",
        "connectTimeout": "10000",
        "requestTimeout": "30000",
        "autoConnect": "true",
        "idleConnection": "5",
        "reconnectOnIdle": "true",
        "maxAsyncRequests": "10",
        "checkInterval": "10",
        "selfSign": true,
        "usetls": false,
        "useCredentials": false
    },
    {
        "id": "a734a95fe6c7b3dc",
        "type": "kafka-broker",
        "name": "broker",
        "hosts": "kafka:9092",
        "selfsign": false,
        "usetls": false,
        "cacert": "",
        "clientcert": "",
        "privatekey": "",
        "passphrase": ""
    },
    {
        "id": "48f7a1eaae28d5a3",
        "type": "ui_group",
        "name": "factsAndRules",
        "tab": "07c042ece455f3bd",
        "order": 1,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "996eec6072a83356",
        "type": "ui_group",
        "name": "gotQBES",
        "tab": "07c042ece455f3bd",
        "order": 2,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "114d7a8d369bd580",
        "type": "ui_group",
        "name": "gotFLOW",
        "tab": "07c042ece455f3bd",
        "order": 3,
        "disp": false,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e9f83f755d518ecd",
        "type": "ui_group",
        "name": "Clear",
        "tab": "07c042ece455f3bd",
        "order": 5,
        "disp": false,
        "width": "1",
        "collapse": false,
        "className": ""
    },
    {
        "id": "363a5e14b79b0d91",
        "type": "ui_spacer",
        "z": "5b93d75bf6b1464b",
        "name": "spacer",
        "group": "6aa5bf7487c31263",
        "order": 1,
        "width": 3,
        "height": 1
    },
    {
        "id": "47cdc2e371d44f95",
        "type": "ui_spacer",
        "z": "5b93d75bf6b1464b",
        "name": "spacer",
        "group": "6aa5bf7487c31263",
        "order": 2,
        "width": 3,
        "height": 1
    },
    {
        "id": "1ccc2ab592ae4ac3",
        "type": "ui_spacer",
        "z": "5b93d75bf6b1464b",
        "name": "spacer",
        "group": "6aa5bf7487c31263",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "e72f590098c84fb5",
        "type": "ui_spacer",
        "z": "5b93d75bf6b1464b",
        "name": "spacer",
        "group": "c33a1024a72aa169",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "d25654593e23b264",
        "type": "digitaloak-postgresql-connection-manager",
        "name": "postgres",
        "host": "aies-cloud-aurora-pg-dev-instance-1.cjflqg3bd6i9.us-gov-east-1.rds.amazonaws.com",
        "port": "5432",
        "database": "space_ite",
        "tls": "",
        "use_tls": false,
        "pool_max_clients": "10",
        "pool_client_max_idle": "10000",
        "client_query_timeout": "",
        "client_statement_timeout": "",
        "client_connection_timeout_millis": "",
        "is_client_enabled": "1"
    },
    {
        "id": "1662f824ae61bd7c",
        "type": "ui_tab",
        "d": true,
        "name": "Balance Test",
        "icon": "dashboard",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f1ba9b7b3ccb3021",
        "type": "ui_group",
        "name": "After QBES",
        "tab": "1662f824ae61bd7c",
        "order": 1,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "05ad88d05dd28ef3",
        "type": "ui_group",
        "name": "After Balance Module",
        "tab": "1662f824ae61bd7c",
        "order": 2,
        "disp": true,
        "width": 8,
        "collapse": false,
        "className": ""
    },
    {
        "id": "9a0d32273f30aad5",
        "type": "comment",
        "z": "c5ce2d38887016b2",
        "name": "Apply level type rules",
        "info": "",
        "x": 200,
        "y": 80,
        "wires": []
    },
    {
        "id": "7fabfc204b7200d7",
        "type": "switch",
        "z": "c5ce2d38887016b2",
        "name": "Sort By Level Type",
        "property": "payload.facts.level_type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "c",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "d",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "e",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 570,
        "y": 320,
        "wires": [
            [
                "2ea82a98af688f5a"
            ],
            [
                "f533c299c2a137bd"
            ],
            [
                "8a476e37206a1b82"
            ],
            [
                "8a476e37206a1b82"
            ]
        ]
    },
    {
        "id": "2ea82a98af688f5a",
        "type": "function",
        "z": "c5ce2d38887016b2",
        "name": "Execute Company level rules",
        "func": "msg.query = `select id, name, description, active, type, rvs,    parsed_rule->>'event' as event ,parsed_rule->>'conditions' as conditions,  (parsed_rule)::TEXT parsed_rule, data   from aies.rules_repository where type like '%' `\nmsg.topic = 'facts'\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 280,
        "wires": [
            [
                "769cdae6ee0fb68f"
            ]
        ]
    },
    {
        "id": "f533c299c2a137bd",
        "type": "function",
        "z": "c5ce2d38887016b2",
        "name": "Execute KAU/ESTAB RULES",
        "func": "msg.query = `select id, name, description, active, type, rvs,    parsed_rule->>'event' as event ,parsed_rule->>'conditions' as conditions,  (parsed_rule)::TEXT parsed_rule, data   from aies.rules_repository where type = 'KAU/ESTAB' `\nmsg.topic = 'facts'\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 320,
        "wires": [
            [
                "769cdae6ee0fb68f"
            ]
        ]
    },
    {
        "id": "8a476e37206a1b82",
        "type": "function",
        "z": "c5ce2d38887016b2",
        "name": "Execute Estab Level Rules",
        "func": "msg.query = `select id, name, description, active, type, rvs,    parsed_rule->>'event' as event ,parsed_rule->>'conditions' as conditions,  (parsed_rule)::TEXT parsed_rule, data   from aies.rules_repository where type = 'estab' `\nmsg.topic='facts'\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 360,
        "wires": [
            [
                "769cdae6ee0fb68f"
            ]
        ]
    },
    {
        "id": "769cdae6ee0fb68f",
        "type": "digitaloak-postgresql-query",
        "z": "c5ce2d38887016b2",
        "name": "PG-AIES: Get rules",
        "server": "ea3e0b5d6b96f47a",
        "inputs": 1,
        "outputs": 1,
        "x": 1130,
        "y": 320,
        "wires": [
            [
                "1ef95ce134a911b9"
            ]
        ]
    },
    {
        "id": "1ef95ce134a911b9",
        "type": "function",
        "z": "c5ce2d38887016b2",
        "name": "Get rules",
        "func": "msg.payload = msg.payload.rows\nmsg.topic = 'rules'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 320,
        "wires": [
            [
                "715ae02.ffcb82"
            ]
        ]
    },
    {
        "id": "e2519c448954167b",
        "type": "function",
        "z": "c5ce2d38887016b2",
        "name": "Qbes: Call Rule Editor",
        "func": "msg.factsArray = [msg.facts]\nmsg.payload = {factsArray: [msg.facts], facts: msg.facts, rules: msg.rules}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 220,
        "wires": [
            [
                "8c5e71d5a2a04ba2"
            ]
        ]
    },
    {
        "id": "715ae02.ffcb82",
        "type": "function",
        "z": "c5ce2d38887016b2",
        "name": "Merge Facts and Rules",
        "func": "context.data = context.data || new Object();\n\nswitch (msg.topic) {\n    case \"facts\":\n        context.data.facts = msg.payload.data[0].facts;\n        msg = null;\n        break;\n    case \"rules\":\n        context.data.rules = msg.payload;\n        msg = null;\n        break;\n    case \"task3\":\n        context.data.task3 = msg.payload;\n        msg = null;\n        break;\n        \n    default:\n        msg = null;\n    \tbreak;\n\n}\n\nif(context.data.rules != null && context.data.facts != null && context.data.task3 == null) {\n\tlet msg2 = new Object();\n    msg2 = context.data;\n    context.data=null;\n\treturn msg2;\n} else return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1170,
        "y": 220,
        "wires": [
            [
                "e2519c448954167b"
            ]
        ]
    },
    {
        "id": "a288d737bb052e78",
        "type": "function",
        "z": "c5ce2d38887016b2",
        "name": "Input Facts",
        "func": "// msg.payload.facts = msg.payload.data[0].facts\nmsg.topic = 'facts'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 220,
        "wires": [
            [
                "b98b1004c0382a3d"
            ]
        ]
    },
    {
        "id": "b98b1004c0382a3d",
        "type": "function",
        "z": "c5ce2d38887016b2",
        "name": "Split to get facts and rules",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 220,
        "wires": [
            [
                "715ae02.ffcb82",
                "7fabfc204b7200d7"
            ]
        ]
    },
    {
        "id": "8c5e71d5a2a04ba2",
        "type": "debug",
        "z": "c5ce2d38887016b2",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 120,
        "wires": []
    },
    {
        "id": "bcea1437bb5bb1a3",
        "type": "function",
        "z": "0111e67f54e25c8c",
        "name": "1.1.1 Classification",
        "func": "msg.actions.classificationCompleted = true\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 140,
        "wires": [
            [
                "2e40abf0ac9d09f7"
            ]
        ]
    },
    {
        "id": "2e40abf0ac9d09f7",
        "type": "debug",
        "z": "0111e67f54e25c8c",
        "name": "Classified Facts",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "facts",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 40,
        "wires": []
    },
    {
        "id": "f710ad2a1b56dbec",
        "type": "function",
        "z": "831dceaabaf975f9",
        "name": "Validate GEO",
        "func": "\nif(msg.facts.GEO) msg.facts.GEOLELVEL = 'valid'\nelse msg.facts.GEOLELVEL = 'invalid'\nmsg.actions.geogrpahyCompleted = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "0fc84963f887090f",
        "type": "function",
        "z": "10e53f47b43ab89e",
        "name": "4.0 Completeness Check",
        "func": "\nmsg.actions.completenessCheckCompleted = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "bcba475dfd370f23",
        "type": "function",
        "z": "b99b7893add8c369",
        "name": "5.0 Logical Check",
        "func": "msg.action = 'Logical Check'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "89b27031e68b3415",
        "type": "function",
        "z": "27fccef587c0b218",
        "name": "6.0 Ratio/Range Testing",
        "func": "msg.actions.ratioRangeTestingCompleted = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6ed3a94bca74bb19",
        "type": "function",
        "z": "3fa869ffe40596e5",
        "name": "7.0 Post Ratio/Range",
        "func": "msg.actions.postRatioRangeCompleted = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "ac1127915ee1fd4b",
        "type": "function",
        "z": "98b684914b5fce08",
        "name": "8.0 Unit Balance",
        "func": "msg.actions.unitBalanceCompleted = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "f40a55ca93f943db",
        "type": "function",
        "z": "2e55e3e8510e62d0",
        "name": "9.0 Company Additivity Check",
        "func": "msg.actions.companyAdditivityCheckCompleted = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "42dbbd9f093bf42e",
        "type": "function",
        "z": "2ad5fa373c21d0a3",
        "name": "10.0 Derived Items",
        "func": "msg.actions.derivedItemsCompleted = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "0f9ffc3cef064808",
        "type": "function",
        "z": "67a3cd3b754e4fbd",
        "name": "11.0 Post Edit Status Fields",
        "func": "msg.actions.postEditStatusFieldsCompleted = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "57bc9e5538773197",
        "type": "function",
        "z": "045ba1012eb08b50",
        "name": "3.0 All Units",
        "func": "msg.actions.allUnitsCompleted = true\nmsg.actions.determineStatusCompleted = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6681b08b.4a688",
        "type": "file in",
        "z": "82cc831b154f3133",
        "name": "Read File",
        "filename": "payload",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 200,
        "y": 140,
        "wires": [
            [
                "e843fa29.885718"
            ]
        ]
    },
    {
        "id": "e843fa29.885718",
        "type": "csv",
        "z": "82cc831b154f3133",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 350,
        "y": 140,
        "wires": [
            [
                "99680b80968eef8c",
                "a2cbb8c5837a6f57"
            ]
        ]
    },
    {
        "id": "99680b80968eef8c",
        "type": "function",
        "z": "82cc831b154f3133",
        "name": "Convert Parameter File to Pre-Processed Rules",
        "func": "let preRules = []\n\nmsg.payload.map((r, k) => {\n\n\n// Build conditionstring cs\nlet cs  = r['CONDITION'] || 'PAY_ANN > 0'\n\nlet shortCondition = r['Short Condition'] || ''\n\ncs = (shortCondition == '') ? cs : shortCondition + ' and ' + cs\n\n\n\n\n    let actionStringRHS = ''\n    let action =[] // [{ 'FAILURE': true }]\n    let actionString = (r['ACTIONSTRING']).trim()\n\n    // actionString = (actionString.endsWith(\";\")) ? actionString.slice(0, -1) + \"\" : \"\"\n    \n\n\n  \n\n    let arr = actionString.split(\";\");\n\n    for (let i = 0; i < arr.length; i++) {\n        const equation = arr[i];\n        const [key, val] = equation.split(/(?<=^[^\\=]+)\\=/) //split(\"=\");\n\n\n        let c_key = key.replace(/[^\\x20-\\x7E]/g, \"\").trim()\n        let c_value = val.replace(\" eq \", \"=\").trim()\n\n        if (key)\n            action.push({ [c_key]: c_value });\n    }\n    \n   \n// GET DETAIL TOTALS:\nlet SUM_DET = ''\nlet SUM_DET_ARRAY = []\n\n\n\n\nfor(let j = 0 ; j < 14; ++j){\n    \n    let detVar = r['DETAIL ' + j] ? r['DETAIL ' + j] : ''\n   if(detVar !=='') SUM_DET_ARRAY.push(detVar) \n}\n\n\nif(SUM_DET_ARRAY.length > 0){\n    action.push({ [\"TOTAL\"]: r['TOTAL'] }) \nSUM_DET = SUM_DET_ARRAY.join(' + ')\naction.push({\"SUM_DET\":SUM_DET })\n\n\n}\n    let sector = r['SECTOR/TRADE'] ? r['SECTOR/TRADE'] : \"All\"\n    let validationType = \"Sector \"+sector\n\n\n\n //&& r['ACTIONSTRING'] != '' ? r['ACTIONSTRING'] :  [{'FAILURE': true}]\n    preRules.push({ \n    key: k+2, \n    ruleId: k+2,\n    type: k+2,\n    priority: r['PRIORITY'] || 5,\n    conditionstring:  cs ,\n    message: r['DESCRIPTION'], \n    action,\n    actionString: JSON.stringify(action),\n    validationType,\n    sector\n    })\n\n})\n\nmsg.preRules = preRules\nmsg.params = preRules\nmsg.payload = {paramFile: preRules}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 200,
        "wires": [
            [
                "5ab2c885ede5e880",
                "fff3d06b988e5233",
                "da484b090d083d49"
            ]
        ]
    },
    {
        "id": "5ab2c885ede5e880",
        "type": "function",
        "z": "82cc831b154f3133",
        "name": "Load the pre-rules table",
        "func": "msg.payload = msg.params\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 180,
        "wires": [
            [
                "4440c71e.f88f18"
            ]
        ]
    },
    {
        "id": "fff3d06b988e5233",
        "type": "http request",
        "z": "82cc831b154f3133",
        "name": "API call to Analyse Parameters Rules File",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/rulesrepo/stringsToRules?DEBUG=true",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            }
        ],
        "x": 1040,
        "y": 420,
        "wires": [
            [
                "8302074bca046e52",
                "a53fbc532450d88c",
                "c370fdc0adea4b18",
                "634a65c934af51b3",
                "62671df4cfe27264",
                "6c832fce46c1bafb",
                "a6cace27ff79a8fb"
            ]
        ]
    },
    {
        "id": "5cfa292979246c14",
        "type": "ui_table",
        "z": "82cc831b154f3133",
        "group": "5c07c02344a2bd3d",
        "name": "1.0 CSV Import Parameters File",
        "order": 1,
        "width": 24,
        "height": 5,
        "columns": [
            {
                "field": "key",
                "title": "Row",
                "width": "80",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "SECTOR/TRADE",
                "title": "SECTOR/TRADE",
                "width": "80",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "NAICS",
                "title": "NAICS",
                "width": "40%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "Short Condition",
                "title": "Message",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "CONDITION",
                "title": "CONDITION",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "DESCRIPTION",
                "title": "DESCRIPTION",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "UNIT TYPE",
                "title": "UNIT TYPE",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "TOTAL",
                "title": "",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 990,
        "y": 80,
        "wires": []
    },
    {
        "id": "4440c71e.f88f18",
        "type": "ui_table",
        "z": "82cc831b154f3133",
        "group": "1f48566b.e8958a",
        "name": "2. Processed Pre-Rule",
        "order": 1,
        "width": 17,
        "height": 5,
        "columns": [
            {
                "field": "key",
                "title": "Row",
                "width": "80",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "conditionstring",
                "title": "Condition",
                "width": "40%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "message",
                "title": "Message",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "actionString",
                "title": "Action",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1300,
        "y": 180,
        "wires": []
    },
    {
        "id": "7deb55a4c358e093",
        "type": "ui_table",
        "z": "82cc831b154f3133",
        "group": "18a5a593fcd64912",
        "name": "3. Processed Rules",
        "order": 1,
        "width": 24,
        "height": 5,
        "columns": [
            {
                "field": "rule.event.ruleId",
                "title": "Row",
                "width": "80",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "conditionstring",
                "title": "Condition",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "actiontring",
                "title": "Action",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "output.success",
                "title": "Success",
                "width": "",
                "align": "left",
                "formatter": "tickCross",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "output.message",
                "title": "Error Message",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "output.value",
                "title": "Condition Value",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "JSON.stringify(output)",
                "title": "Output",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1710,
        "y": 500,
        "wires": []
    },
    {
        "id": "8302074bca046e52",
        "type": "change",
        "z": "82cc831b154f3133",
        "name": "Results from rules compilation",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.results",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 500,
        "wires": [
            [
                "7deb55a4c358e093"
            ]
        ]
    },
    {
        "id": "a53fbc532450d88c",
        "type": "change",
        "z": "82cc831b154f3133",
        "name": "Errors in condition from compilation",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.conditionError",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1440,
        "y": 560,
        "wires": [
            [
                "10cad444a2f23d2e"
            ]
        ]
    },
    {
        "id": "10cad444a2f23d2e",
        "type": "ui_table",
        "z": "82cc831b154f3133",
        "group": "18a5a593fcd64912",
        "name": "3.1. Condition Errors",
        "order": 4,
        "width": 24,
        "height": 3,
        "columns": [
            {
                "field": "ruleId",
                "title": "Row",
                "width": "80",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "message",
                "title": "Error Message",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "expression",
                "title": "Condition",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1720,
        "y": 560,
        "wires": []
    },
    {
        "id": "c370fdc0adea4b18",
        "type": "change",
        "z": "82cc831b154f3133",
        "name": "Facts Needed from compilation",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.factsNeededNameValue",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1430,
        "y": 620,
        "wires": [
            [
                "2451d69dcbe26c12"
            ]
        ]
    },
    {
        "id": "2451d69dcbe26c12",
        "type": "ui_table",
        "z": "82cc831b154f3133",
        "group": "18a5a593fcd64912",
        "name": "3.2. Facts Needed",
        "order": 5,
        "width": 24,
        "height": 2,
        "columns": [
            {
                "field": "name",
                "title": "Row",
                "width": "80",
                "align": "left",
                "formatter": "rownum",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "name",
                "title": "Name",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "value",
                "title": "Value",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1710,
        "y": 620,
        "wires": []
    },
    {
        "id": "a2cbb8c5837a6f57",
        "type": "function",
        "z": "82cc831b154f3133",
        "name": "Add Key to the csv rows",
        "func": "\n\nmsg.payload = msg.payload.map((p, k) => { return { ...p, ...{ key: k+2 } } })\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 80,
        "wires": [
            [
                "5cfa292979246c14"
            ]
        ]
    },
    {
        "id": "634a65c934af51b3",
        "type": "ui_gauge",
        "z": "82cc831b154f3133",
        "name": "Gauge for Errors",
        "group": "4060ccd3b1b979fd",
        "order": 2,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Errors",
        "label": "units",
        "format": "{{msg.payload.outputErrorCount}}",
        "min": 0,
        "max": "10",
        "colors": [
            "#a4110e",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1440,
        "y": 280,
        "wires": []
    },
    {
        "id": "62671df4cfe27264",
        "type": "ui_gauge",
        "z": "82cc831b154f3133",
        "name": "Gauge for Rules",
        "group": "4060ccd3b1b979fd",
        "order": 1,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Rules",
        "label": "rules",
        "format": "{{msg.payload.results.length}}",
        "min": 0,
        "max": "500",
        "colors": [
            "#3cb226",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1440,
        "y": 340,
        "wires": []
    },
    {
        "id": "6c832fce46c1bafb",
        "type": "ui_gauge",
        "z": "82cc831b154f3133",
        "name": "Gauge for Params",
        "group": "4060ccd3b1b979fd",
        "order": 3,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Params",
        "label": "units",
        "format": "{{msg.payload.factsNeededNameValue.length}}",
        "min": 0,
        "max": "1000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "className": "",
        "x": 1430,
        "y": 400,
        "wires": []
    },
    {
        "id": "aea84a7e33de6f9b",
        "type": "function",
        "z": "82cc831b154f3133",
        "name": "Utility Functions",
        "func": "\n    // function to convert string of equations to JSON array\n    function stringToJSON (str){\n    \n\n        // function cleanupString(str) { return str.replace(/[^\\x20-\\x7E]/g, \"\").trim(); }\n    \n    let arr = str.split(\";\");\n    let json = [];\n    for (let i = 0; i < arr.length; i++) {\n        const equation = arr[i];\n        const [key, val] = equation.split(/(?<=^[^\\=]+)\\=/) //split(\"=\");\n\n        if (key)\n            json.push({ [cleanupString(key)]: cleanupString(val.replace(\" eq \", \"=\")) });\n    }\n    return json;\n}\n\nfunction cleanupString(str){ return str.replace(/[^\\x20-\\x7E]/g, \"\").trim(); }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "c7bbcb8e289cfe40",
        "type": "catch",
        "z": "82cc831b154f3133",
        "name": "Catch read file errors",
        "scope": null,
        "uncaught": false,
        "x": 220,
        "y": 520,
        "wires": [
            [
                "e5ae3f0c5950f841"
            ]
        ]
    },
    {
        "id": "260189c8c6ed366b",
        "type": "ui_toast",
        "z": "82cc831b154f3133",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 690,
        "y": 520,
        "wires": []
    },
    {
        "id": "e5ae3f0c5950f841",
        "type": "function",
        "z": "82cc831b154f3133",
        "name": "function 9",
        "func": "msg.payload = msg.error.message\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 600,
        "wires": [
            [
                "260189c8c6ed366b",
                "ba709063e175e036"
            ]
        ]
    },
    {
        "id": "ba709063e175e036",
        "type": "debug",
        "z": "82cc831b154f3133",
        "name": "debug 27",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 620,
        "wires": []
    },
    {
        "id": "da484b090d083d49",
        "type": "debug",
        "z": "82cc831b154f3133",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 280,
        "wires": []
    },
    {
        "id": "a6cace27ff79a8fb",
        "type": "debug",
        "z": "82cc831b154f3133",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1780,
        "y": 320,
        "wires": []
    },
    {
        "id": "17cb8d5c1c2dfc81",
        "type": "ui_template",
        "z": "8d5b6ce343b26ccf",
        "d": true,
        "group": "1d5401bf95a96f03",
        "name": "JOB Event Log ",
        "order": 2,
        "width": 24,
        "height": 5,
        "format": "<ul>\n    <li ng-repeat=\"x in msg.payload\">\n  \n        <font color=\"green\">{{x.topic}}</font>\n        <ul>\n            <li>{{x.payload}}</li>\n        </ul>\n    </li>\n</ul>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 980,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "5208228e9775e479",
        "type": "function",
        "z": "8d5b6ce343b26ccf",
        "name": "Save Events",
        "func": "// NK will set the submitted flow to null\n\n// flow.set(\"submitted\", null)\n// initialise the counter to 0 if it doesn't exist already\nvar dashboardLog = context.get('dashboardLog')|| [];\n\ndashboardLog.push(msg);\nif (dashboardLog.length > 20){\n    // Delete oldest message if > 20\n    dashboardLog.shift();\n    dashboardLog.length = 20;\n} \n\n\n// store the value back\ncontext.set('dashboardLog',dashboardLog);\n\n// make it part of the outgoing msg object\nmsg = {};\nmsg.payload = [...dashboardLog];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 240,
        "wires": [
            [
                "20fe51011ee16859",
                "42849eb6f8ee9501"
            ]
        ]
    },
    {
        "id": "63eaa3d343dece84",
        "type": "ui_toast",
        "z": "8d5b6ce343b26ccf",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "QBES Output",
        "name": "",
        "x": 630,
        "y": 380,
        "wires": []
    },
    {
        "id": "fea303947b28f5ab",
        "type": "function",
        "z": "8d5b6ce343b26ccf",
        "name": "function 5",
        "func": "msg.payload = \"Job Completed at:\"+ new Date().toLocaleString()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 380,
        "wires": [
            [
                "63eaa3d343dece84"
            ]
        ]
    },
    {
        "id": "3bd3c0ad26af3e70",
        "type": "ui_button",
        "z": "8d5b6ce343b26ccf",
        "name": "",
        "group": "1d5401bf95a96f03",
        "order": 3,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "Reset Log",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-circle-o",
        "payload": "[]",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 390,
        "y": 180,
        "wires": [
            [
                "e5d60e2f52182631"
            ]
        ]
    },
    {
        "id": "e5d60e2f52182631",
        "type": "function",
        "z": "8d5b6ce343b26ccf",
        "name": "Clear context set dashboardLog to []",
        "func": "context.set('dashboardLog', []);\nmsg.payload = []\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 180,
        "wires": [
            [
                "17cb8d5c1c2dfc81",
                "20fe51011ee16859"
            ]
        ]
    },
    {
        "id": "20fe51011ee16859",
        "type": "ui_table",
        "z": "8d5b6ce343b26ccf",
        "group": "1d5401bf95a96f03",
        "name": "Output",
        "order": 1,
        "width": 24,
        "height": 7,
        "columns": [
            {
                "field": "rules.valid",
                "title": "#",
                "width": "",
                "align": "left",
                "formatter": "rownum",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "payload.wflid",
                "title": "WFID",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "payload.passed",
                "title": "Passed",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "payload.failed",
                "title": "Failed",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "payload.startTime",
                "title": "Start Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "payload.endTime",
                "title": "End Time",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 970,
        "y": 320,
        "wires": []
    },
    {
        "id": "42849eb6f8ee9501",
        "type": "debug",
        "z": "8d5b6ce343b26ccf",
        "name": "LOGGER OF ALL EVENTS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 420,
        "wires": []
    },
    {
        "id": "b577047a453e09e2",
        "type": "debug",
        "z": "e4fb9739caef0397",
        "name": "Go To: Company Additivity Check",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 120,
        "wires": []
    },
    {
        "id": "0ff8421a7b8e6db8",
        "type": "switch",
        "z": "e4fb9739caef0397",
        "name": "Failure Present?",
        "property": "payload.csv[0].failure",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 300,
        "y": 260,
        "wires": [
            [
                "f9f2616d4b2e77aa"
            ],
            [
                "63e93f8b86886fb5"
            ]
        ]
    },
    {
        "id": "f9f2616d4b2e77aa",
        "type": "function",
        "z": "e4fb9739caef0397",
        "name": "Failure is not present",
        "func": "msg.payload.csv[0].action = \"Go To: Company Additivity Check\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 120,
        "wires": [
            [
                "b577047a453e09e2"
            ]
        ]
    },
    {
        "id": "63e93f8b86886fb5",
        "type": "switch",
        "z": "e4fb9739caef0397",
        "name": "SUM(DET) = 0 || SUM(DET) > 0",
        "property": "payload.csv[0][\"SUM(DET)\"]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 440,
        "wires": [
            [
                "11f769517190762f"
            ],
            [
                "458aee89809aab2f"
            ]
        ]
    },
    {
        "id": "11f769517190762f",
        "type": "switch",
        "z": "e4fb9739caef0397",
        "name": "SUM(DET)=0 && [TOT = 0 || TOT >0]",
        "property": "payload.csv[0][\"TOT\"]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 360,
        "wires": [
            [
                "c4dd21c47b5c560d"
            ],
            [
                "95342923afe33dcc"
            ]
        ]
    },
    {
        "id": "458aee89809aab2f",
        "type": "switch",
        "z": "e4fb9739caef0397",
        "name": "SUM(DET)=0 && [TOT = 0 || TOT >0]",
        "property": "payload.csv[0][\"TOT\"]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 520,
        "wires": [
            [
                "e29e53837aa85b4a"
            ],
            [
                "e959e7fb6afb3eed"
            ]
        ]
    },
    {
        "id": "e29e53837aa85b4a",
        "type": "function",
        "z": "e4fb9739caef0397",
        "name": "SUM(DET)>0 and TOT=0",
        "func": "msg.payload.csv[0][\"TOTAL\"] = msg.payload.csv[0][\"SUM(DET)\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 500,
        "wires": [
            [
                "788b3a84934aa271"
            ]
        ]
    },
    {
        "id": "95342923afe33dcc",
        "type": "function",
        "z": "e4fb9739caef0397",
        "name": "SUM(DET)=0 and TOT>0",
        "func": "msg.payload.csv[0].action = \"Proate data based on X(DET) = TOT\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 380,
        "wires": [
            [
                "14dc631e2b06f6dc"
            ]
        ]
    },
    {
        "id": "c4dd21c47b5c560d",
        "type": "function",
        "z": "e4fb9739caef0397",
        "name": "SUM(DET)=0 and TOT=0",
        "func": "msg.payload.csv[0].action = \"Impute?\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 340,
        "wires": [
            [
                "66ae65c186690293"
            ]
        ]
    },
    {
        "id": "e959e7fb6afb3eed",
        "type": "function",
        "z": "e4fb9739caef0397",
        "name": "SUM(DET)>0 and TOT>0",
        "func": "msg.payload.csv[0][\"ESMD\"] = msg.payload.csv[0][\"SUM(DET)\"] / msg.payload.csv[0][\"TOT\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 620,
        "wires": [
            [
                "9c1aeb1ed7cbe919"
            ]
        ]
    },
    {
        "id": "66ae65c186690293",
        "type": "debug",
        "z": "e4fb9739caef0397",
        "name": "balance output 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 340,
        "wires": []
    },
    {
        "id": "14dc631e2b06f6dc",
        "type": "debug",
        "z": "e4fb9739caef0397",
        "name": "balance output 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 380,
        "wires": []
    },
    {
        "id": "788b3a84934aa271",
        "type": "debug",
        "z": "e4fb9739caef0397",
        "name": "balance output 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 500,
        "wires": []
    },
    {
        "id": "9c1aeb1ed7cbe919",
        "type": "switch",
        "z": "e4fb9739caef0397",
        "name": "msg.payload[\"ESMD\"]",
        "property": "payload.csv[0][\"ESMD\"]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "0.8",
                "vt": "num",
                "v2": "1.2",
                "v2t": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1420,
        "y": 620,
        "wires": [
            [
                "6fb927f1b01fb35e"
            ],
            [
                "14dc76c93de5c2f3"
            ]
        ]
    },
    {
        "id": "6fb927f1b01fb35e",
        "type": "function",
        "z": "e4fb9739caef0397",
        "name": "Set TOTAL = SUM(DET)",
        "func": "msg.payload.csv[0][\"TOTAL\"] = msg.payload.csv[0][\"SUM(DET)\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 580,
        "wires": [
            [
                "75e116bc1eada138"
            ]
        ]
    },
    {
        "id": "14dc76c93de5c2f3",
        "type": "switch",
        "z": "e4fb9739caef0397",
        "name": "INDP(ind and geo)>1?",
        "property": "payload.csv[0].INDP",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1660,
        "y": 680,
        "wires": [
            [
                "649aa1c8c8a908df"
            ],
            [
                "96963e24bf75debd"
            ]
        ]
    },
    {
        "id": "75e116bc1eada138",
        "type": "debug",
        "z": "e4fb9739caef0397",
        "name": "balance output 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1890,
        "y": 580,
        "wires": []
    },
    {
        "id": "b603e4fb34a7151e",
        "type": "debug",
        "z": "e4fb9739caef0397",
        "name": "balance output 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2110,
        "y": 660,
        "wires": []
    },
    {
        "id": "c1fc577fdc63918a",
        "type": "debug",
        "z": "e4fb9739caef0397",
        "name": "balance output 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2070,
        "y": 700,
        "wires": []
    },
    {
        "id": "649aa1c8c8a908df",
        "type": "function",
        "z": "e4fb9739caef0397",
        "name": "SET IMPUTATION FLAG",
        "func": "msg.payload.csv[0].action = \"SET IMPUTATION FLAG?\"\nmsg.payload.csv[0][\"Varx-IMBALANCE\"] = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1890,
        "y": 660,
        "wires": [
            [
                "b603e4fb34a7151e"
            ]
        ]
    },
    {
        "id": "96963e24bf75debd",
        "type": "function",
        "z": "e4fb9739caef0397",
        "name": "Rake (DET) = TOT",
        "func": "msg.payload.csv[0][\"Rake(DET)\"] = msg.payload.csv[0][\"TOT\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1870,
        "y": 700,
        "wires": [
            [
                "c1fc577fdc63918a"
            ]
        ]
    },
    {
        "id": "7c51b389c1dc24ae",
        "type": "function",
        "z": "71d3d3dbaed43d3e",
        "name": "function 12",
        "func": "if ((msg.payload.csv[0].RECORD_TYP === \"00\" || msg.payload.csv[0].RECORD_TYP === \"10\" || msg.payload.csv[0].RECORD_TYP === \"20\" || msg.payload.csv[0].RECORD_TYP === \"30\" || msg.payload.csv[0].RECORD_TYP === \"90\") && msg.payload.csv[0].BR_STAT === \"N\") {\n    msg.payload.csv[0].RECORD_TYP = \"BR_DELETE\";\n} else if (Number(msg.payload.csv[0].RECORD_TYP) >= 20 && Number(msg.payload.csv[0].RECORD_TYP) <= 90 ) {\n    msg.payload.csv[0].action = \"Call Critical Errors module\"\n}\n\nmsg.payload.csv[0].action = \"Go to Determine Critical Error module\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            [
                "3132528145049361"
            ]
        ]
    },
    {
        "id": "3132528145049361",
        "type": "debug",
        "z": "71d3d3dbaed43d3e",
        "name": "BR_STAT eval output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 80,
        "wires": []
    },
    {
        "id": "bf3c163ded6ea7ce",
        "type": "function",
        "z": "56c26ff961720232",
        "name": "function 13",
        "func": "if (msg.payload.csv[0].RECORD_TYP === \"20\" || msg.payload.csv[0].RECORD_TYP === \"90\") {\n    if(msg.payload.csv[0].PROCESS_DIV_CODE = \"1\") {\n        msg.payload.csv[0].action = \"Go to: Derive MFG NAICS from NAPCS\"\n    } else {\n        msg.payload.csv[0].action = \"Go to: Classification\"\n    }\n} else {\n    msg.payload.csv[0].action = \"Go to: Classification\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            [
                "5012f87f52410a9d"
            ]
        ]
    },
    {
        "id": "5012f87f52410a9d",
        "type": "debug",
        "z": "56c26ff961720232",
        "name": "Derive NAICS output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 80,
        "wires": []
    },
    {
        "id": "fc793926435fab57",
        "type": "function",
        "z": "03552ca229e3a7a0",
        "name": "function 20",
        "func": "node.status({ fill: \"green\", shape: \"dot\", text: \"processing\" });\n\n// msg.payload.csv[0].module = \"_\"\n\n// setTimeout(function () {\n    node.status({ fill: \"gray\", shape: \"ring\", text: \"complete\" });\n//     node.send(msg);\n// }, 1000);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "0d6b190eb1914ef7",
        "type": "status",
        "z": "03552ca229e3a7a0",
        "name": "",
        "scope": null,
        "x": 80,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "e985134240611ec7",
        "type": "function",
        "z": "120ad61b88a550e6",
        "name": "BR STAT EVAL function",
        "func": "node.status({ fill:\"green\", shape:\"dot\", text: \"processing\" });\n\nif ((msg.payload.RECORD_TYP === \"00\" || msg.payload.RECORD_TYP === \"10\" || msg.payload.RECORD_TYP === \"20\" || msg.payload.RECORD_TYP === \"30\" || msg.payload.RECORD_TYP === \"90\") && msg.payload.BR_STAT === \"N\") {\n    msg.payload.RECORD_TYP = \"BR_DELETE\";\n} else if (Number(msg.payload.RECORD_TYP) >= 20 && Number(msg.payload.RECORD_TYP) <= 90 ) {\n    msg.payload.action = \"Call Critical Errors module\"\n}\n\nmsg.payload.action = \"Go to Determine Critical Error module\"\n\nmsg.payload.module = \"BR Stat Evaluation\"\n\n// setTimeout(function () {\n    node.status({ fill: \"gray\", shape: \"ring\", text: \"complete\" });\n//     node.send(msg);\n// }, 1000);\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 140,
        "wires": [
            [
                "01f72c6cccd41b90"
            ]
        ]
    },
    {
        "id": "01f72c6cccd41b90",
        "type": "debug",
        "z": "120ad61b88a550e6",
        "name": "BR_STAT eval output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 80,
        "wires": []
    },
    {
        "id": "e8c9be5ce6c6aaf8",
        "type": "status",
        "z": "120ad61b88a550e6",
        "name": "",
        "scope": null,
        "x": 120,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "2334aa4fdd5b642f",
        "type": "function",
        "z": "a08711b1cedb891d",
        "name": "nonnorm function",
        "func": "node.status({fill:\"green\",shape:\"dot\",text:\"processing\"});\n\n// Assign sample values to variables\n//setinit variables (first appearance)\nvar ACTV_MIO_NUM = msg.payload.csv[0].ACTV_MIO_NUM\nvar ACTV_MIO_NUM_FLG = msg.payload.csv[0].ACTV_MIO_NUM_FLG\nvar OPSTATS = msg.payload.csv[0].OPSTATS\nvar OPSTATS_FLG = msg.payload.csv[0].OPSTATS_FLG\nvar COV_CHG_CODE = msg.payload.csv[0].COV_CHG_CODE\nvar ACTVMIO_R = msg.payload.csv[0].ACTVMIO_R\nvar COV_CHG_DATE = new Date(msg.payload.csv[0].COV_CHG_DATE)\nvar OPSTAT = msg.payload.csv[0].OPSTAT\nvar OPSTAT_FLAG = msg.payload.csv[0].OPSTAT_FLAG\n\n//nonorm router Variables (first appearance)\nvar RECORD_TYP = msg.payload.csv[0].RECORD_TYP\nvar BMF_FR941 = msg.payload.csv[0].BMF_FR941\nvar EPPAYANN = msg.payload.csv[0].EPPAYANN\nvar NONNORM_FLG = msg.payload.csv[0].NONNORM_FLG\nvar NONNORM = msg.payload.csv[0].NONNORM\nvar PAY_QTR1_VAL = msg.payload.csv[0].PAY_QTR1_VAL\nvar EMP_MAR12_NUM = msg.payload.csv[0].EMP_MAR12_NUM\nvar OPSTATS_F = msg.payload.csv[0].OPSTATS_F\n\n// Flow: set_OPSTATS_ACTIV_MIO_NUM (first appearance)\nvar TEMPMIO = msg.payload.csv[0].TEMPMIO\nvar ECPAYQ1 = msg.payload.csv[0].ECPAYQ1\nvar EPPAYANN = msg.payload.csv[0].EPPAYANN\nvar ACTV_MIO_VAL = msg.payload.csv[0].ACTV_MIO_VAL\nvar ACTV_MIO_VAL_FLG = msg.payload.csv[0].ACTV_MIO_VAL_FLG\nvar BMF_FR941 = msg.payload.csv[0].BMF_FR941\nvar ECPAYQ2 = msg.payload.csv[0].ECPAYQ2\nvar ECPAYQ3 = msg.payload.csv[0].ECPAYQ3\nvar ECPAYQ4 = msg.payload.csv[0].ECPAYQ4\nvar ECPAYQ4_F = msg.payload.csv[0].ECPAYQ4_F\n\n// Flow: set_NONNORM (first appearance)\nvar REFPER = msg.payload.csv[0].REFPER\nvar MADBPAYANN = msg.payload.csv[0].MADBPAYANN\nvar EMP_MAR12_NUM_F = msg.payload.csv[0].EMP_MAR12_NUM_F\nvar PAY_ANN_VAL = msg.payload.csv[0].PAY_ANN_VAL\n\n// Flow: set_BASIC_0 (first appearance)\nvar PAY_QTR1_VAL_R = msg.payload.csv[0].PAY_QTR1_VAL_R\nvar PAY_QTR1_VAL_FLG = msg.payload.csv[0].PAY_QTR1_VAL_FLG\nvar EMP_MAR12_NUM = msg.payload.csv[0].EMP_MAR12_NUM\nvar EMP_MAR12_NUM_FLG = msg.payload.csv[0].EMP_MAR12_NUM_FLG\n\n// Flow: SPECIAL_SEASON (first appearance)\nvar CY_PAY_QTR1_VAL = msg.payload.csv[0].CY_PAY_QTR1_VAL\nvar ECPAYQ1ZERO = msg.payload.csv[0].ECPAYQ1ZERO\nvar CY_EMP_MAR12_NUM = msg.payload.csv[0].CY_EMP_MAR12_NUM\nvar ECEMPQ1 = msg.payload.csv[0].ECEMPQ1\n\n// Function to process the payload\nfunction processPayload() {\n    var result = {}\n    function pathX() {\n        if (OPSTATS === '') {\n            return pathY();\n        } else {\n            return pathF();\n        }\n    }\n    // Main logic flow\n    if (ACTV_MIO_NUM < 0 || ACTV_MIO_NUM > 12) {\n        ACTV_MIO_NUM = 12;\n        ACTV_MIO_NUM_FLG = ACTV_MIO_NUM_FLG.substring(1, 2) + 'J' + ACTV_MIO_NUM_FLG.substring(2, 3);\n        result.payload = pathX();\n        result.ACTV_MIO_NUM = ACTV_MIO_NUM;\n        result.ACTV_MIO_NUM_FLG = ACTV_MIO_NUM_FLG;\n        result.OPSTATS = OPSTATS;\n        result.OPSTATS_FLG = OPSTATS_FLG;\n        result.COV_CHG_CODE = COV_CHG_CODE;\n        result.ACTVMIO_R = ACTVMIO_R;\n        result.COV_CHG_DATE = COV_CHG_DATE;\n        result.OPSTAT = OPSTAT;\n        result.OPSTAT_FLAG = OPSTAT_FLAG;\n        result.RECORD_TYP = RECORD_TYP;\n        result.BMF_FR941 = BMF_FR941;\n        result.EPPAYANN = EPPAYANN;\n        result.NONNORM_FLG = NONNORM_FLG;\n        result.NONNORM = NONNORM;\n        result.PAY_QTR1_VAL = PAY_QTR1_VAL;\n        result.EMP_MAR12_NUM = EMP_MAR12_NUM;\n        result.OPSTATS_F = OPSTATS_F\n        result.TEMPMIO = TEMPMIO ;\n        result.ECPAYQ1 = ECPAYQ1;\n        result.EPPAYANN = EPPAYANN;\n        result.ACTV_MIO_VAL = ACTV_MIO_VAL;\n        result.ACTV_MIO_VAL_FLG = ACTV_MIO_VAL_FLG;\n        result.BMF_FR941 = BMF_FR941;\n        result.ECPAYQ2 = ECPAYQ2;\n        result.ECPAYQ3 = ECPAYQ3;\n        result.ECPAYQ4 = ECPAYQ4;\n        result.ECPAYQ4_F = ECPAYQ4_F;\n        result.REFPER = REFPER;\n        result.MADBPAYANN = MADBPAYANN;\n        result.EMP_MAR12_NUM_F = EMP_MAR12_NUM_F;\n        result.PAY_ANN_VAL = PAY_ANN_VAL;\n        result.PAY_QTR1_VAL_R = PAY_QTR1_VAL_R;\n        result.PAY_QTR1_VAL_FLG = PAY_QTR1_VAL_FLG;\n        result.EMP_MAR12_NUM = EMP_MAR12_NUM;\n        result.EMP_MAR12_NUM_FLG = EMP_MAR12_NUM_FLG;\n        result.CY_PAY_QTR1_VAL = CY_PAY_QTR1_VAL;\n        result.ECPAYQ1ZERO = ECPAYQ1ZERO;\n        result.CY_EMP_MAR12_NUM = CY_EMP_MAR12_NUM;\n        result.ECEMPQ1 = ECEMPQ1;\n    } else {\n        result.payload = pathX();\n        result.ACTV_MIO_NUM = ACTV_MIO_NUM;\n        result.ACTV_MIO_NUM_FLG = ACTV_MIO_NUM_FLG;\n        result.OPSTATS = OPSTATS;\n        result.OPSTATS_FLG = OPSTATS_FLG;\n        result.COV_CHG_CODE = COV_CHG_CODE;\n        result.ACTVMIO_R = ACTVMIO_R;\n        result.COV_CHG_DATE = COV_CHG_DATE;\n        result.OPSTAT = OPSTAT;\n        result.OPSTAT_FLAG = OPSTAT_FLAG;\n        result.RECORD_TYP = RECORD_TYP;\n        result.BMF_FR941 = BMF_FR941;\n        result.EPPAYANN = EPPAYANN;\n        result.NONNORM_FLG = NONNORM_FLG;\n        result.NONNORM = NONNORM;\n        result.PAY_QTR1_VAL = PAY_QTR1_VAL;\n        result.EMP_MAR12_NUM = EMP_MAR12_NUM;\n        result.OPSTATS_F = OPSTATS_F\n        result.TEMPMIO = TEMPMIO;\n        result.ECPAYQ1 = ECPAYQ1;\n        result.EPPAYANN = EPPAYANN;\n        result.ACTV_MIO_VAL = ACTV_MIO_VAL;\n        result.ACTV_MIO_VAL_FLG = ACTV_MIO_VAL_FLG;\n        result.BMF_FR941 = BMF_FR941;\n        result.ECPAYQ2 = ECPAYQ2;\n        result.ECPAYQ3 = ECPAYQ3;\n        result.ECPAYQ4 = ECPAYQ4;\n        result.ECPAYQ4_F = ECPAYQ4_F;\n        result.REFPER = REFPER;\n        result.MADBPAYANN = MADBPAYANN;\n        result.EMP_MAR12_NUM_F = EMP_MAR12_NUM_F;\n        result.PAY_ANN_VAL = PAY_ANN_VAL;\n        result.PAY_QTR1_VAL_R = PAY_QTR1_VAL_R;\n        result.PAY_QTR1_VAL_FLG = PAY_QTR1_VAL_FLG;\n        result.EMP_MAR12_NUM = EMP_MAR12_NUM;\n        result.EMP_MAR12_NUM_FLG = EMP_MAR12_NUM_FLG;\n        result.CY_PAY_QTR1_VAL = CY_PAY_QTR1_VAL;\n        result.ECPAYQ1ZERO = ECPAYQ1ZERO;\n        result.CY_EMP_MAR12_NUM = CY_EMP_MAR12_NUM;\n        result.ECEMPQ1 = ECEMPQ1;\n    }\n    return result;\n}\nfunction pathF() {\n    if (OPSTATS_FLG.substring(0, 2) !== 'R ' && OPSTATS_FLG.substring(1, 2) !== 'C') {\n        return pathY();\n    } else {\n        return nonNormRouter();\n    }\n}\n\nfunction pathY() {\n    if ((COV_CHG_CODE === 111 || COV_CHG_CODE === 131 || (COV_CHG_CODE === 791 && ACTVMIO_R < 12)) && COV_CHG_DATE < new Date('2024-01-01')) {\n        return pathA();\n    } else if (OPSTAT_FLAG.substring(0, 1) === 'R') {\n        return pathZ();\n    } else {\n        return pathB();\n    }\n}\n\nfunction pathA() {\n    OPSTATS = 'N';\n    return pathD();\n}\n\nfunction pathZ() {\n    if (OPSTAT === 4) {\n        return pathA();\n    } else if (OPSTAT === 5) {\n        return pathE();\n    } else {\n        return pathB();\n    }\n}\n\nfunction pathE() {\n    if (ACTV_MIO_NUM === 12) {\n        return pathB();\n    } else {\n        return pathA();\n    }\n}\n\nfunction pathB() {\n    OPSTATS = 'Y';\n    return pathD();\n}\n\nfunction pathD() {\n    if (OPSTAT_FLAG.substring(0, 1) === 'R') {\n        OPSTATS_FLG = 'R' + OPSTATS_FLG.substring(1);\n        return nonNormRouter();\n    } else {\n        OPSTATS_FLG = OPSTATS_FLG.substring(0, 1) + 'J' + OPSTATS_FLG.substring(2);\n        return nonNormRouter();\n    }\n}\n\nfunction nonNormRouter() {\n    if (ACTV_MIO_NUM_FLG.substring(0, 1) === 'R') {\n        return pathG();\n    } else {\n        return pathH();\n    }\n}\n\n\nfunction pathG() {\n    if (RECORD_TYP === 90) {\n        return pathI();\n    } else {\n        return pathH();\n    }\n}\n\nfunction pathH() {\n    if (BMF_FR941 === 97 || BMF_FR941 === 98 || BMF_FR941 === 99) {\n        return pathA1();\n    } else {\n        return pathL();\n    }\n}\n\nfunction pathI() {\n    if (ACTV_MIO_NUM < 12 && EPPAYANN === 0) {\n        NONNORM = 'B';\n        NONNORM_FLG = NONNORM_FLG.substring(0, 1) + 'L';\n        return pathA1();\n    } else {\n        return pathA1();\n    }\n}\n\nfunction pathL() {\n    if (ACTV_MIO_NUM_FLG.substring(1, 2) !== 'C' && OPSTATS_F.substring(1, 2) !== 'C') {\n        return set_OPSTATS_ACTIV_MIO_NUM() + pathA1();\n    } else {\n        return pathA1();\n    }\n}\n\nfunction pathA1() {\n    if (NONNORM_FLG === '' || NONNORM_FLG.substring(1, 2) === 'J') {\n        return set_NONNORM();\n    } else {\n        return pathN();\n    }\n}\n\nfunction pathN() {\n    if (NONNORM === 'B') {\n        return set_BASIC_0();\n    } else {\n        return pathO();\n    }\n}\n\nfunction pathO() {\n    if (NONNORM === 'S' && ACTV_MIO_NUM < 10 && PAY_QTR1_VAL === 0 && EMP_MAR12_NUM === 0) {\n        return SPECIAL_SEASON();\n    } else {\n        return (\"Exit to AEIS main\");\n    }\n}\n\n// Flow: set_OPSTATS_ACTIV_MIO_NUM\nfunction set_OPSTATS_ACTIV_MIO_NUM() {\n    if (RECORD_TYP === 90) {\n        TEMPMIO = 0;\n        return pathP();\n    } else if (OPSTATS_FLG === 'R ' && ACTV_MIO_NUM_FLG === 'R ') {\n        return pathA2();\n    } else {\n        return pathQ();\n    }\n}\n\n\nfunction pathP() {\n    if (PAY_QTR1_VAL + ECPAYQ1 > 0) {\n        TEMPMIO += 3;\n        return pathD1();\n    } else if (EPPAYANN > 0) {\n        return pathD1();\n    } else {\n        NONNORM = 'B';\n        NONNORM_FLG = NONNORM_FLG.substring(0, 1) + 'L';\n        return pathD1();\n    }\n}\n\nfunction pathA2() {\n    return nonNormRouter();\n}\n\nfunction pathQ() {\n    if ([211, 221, 241, 311, 321, 341, 401, 511, 741].includes(COV_CHG_CODE)) {\n        return pathR();\n    } else if ([111, 131, 791].includes(COV_CHG_CODE)) {\n        return pathS();\n    } else {\n        return pathA2();\n    }\n}\n\nfunction pathD1() {\n    if (ECPAYQ2 > 0) {\n        TEMPMIO += 3;\n        return pathT();\n    } else {\n        return pathT();\n    }\n}\n\nfunction pathT() {\n    if (ECPAYQ3 > 0) {\n        TEMPMIO += 3;\n        return pathU();\n    } else {\n        return pathU();\n    }\n}\n\nfunction pathU() {\n    if (ECPAYQ4 > 0 || ECPAYQ4_F === '') {\n        TEMPMIO += 3;\n        return pathV();\n    } else if (OPSTATS_FLG === 'R ') {\n        return pathB1();\n    } else {\n        return pathC1();\n    }\n}\n\nfunction pathV() {\n    if ([3, 51, 0].includes(BMF_FR941)) {\n        return pathC1();\n    } else {\n        return pathB1();\n    }\n}\n\nfunction pathB1() {\n    ACTV_MIO_NUM = TEMPMIO;\n    ACTV_MIO_NUM_FLG = ACTV_MIO_NUM_FLG.substring(0, 1) + 'L ';\n    return pathA2();\n}\n\nfunction pathC1() {\n    OPSTATS = 'N';\n    OPSTATS_FLG = OPSTATS_FLG.substring(0, 1) + 'L ';\n    return pathB1();\n}\n\nfunction pathR() {\n    if (COV_CHG_DATE > new Date('2023-01-31') && COV_CHG_DATE < new Date('2024-01-01')) {\n        ACTV_MIO_VAL = 13 - new Date(COV_CHG_DATE).getMonth();\n        ACTV_MIO_VAL_FLG = ACTV_MIO_VAL_FLG.substring(0, 1) + 'L ';\n        return pathA2();\n    } else {\n        return pathA2();\n    }\n}\n\nfunction pathS() {\n    if (COV_CHG_DATE < new Date('2024-01-01')) {\n        ACTV_MIO_NUM = new Date(COV_CHG_DATE).getMonth() + 1;\n        ACTV_MIO_NUM_FLG = ACTV_MIO_NUM_FLG.substring(0, 1) + 'L ';\n        OPSTATS = 'N';\n        OPSTATS_FLG = OPSTATS_FLG.substring(0, 1) + 'L ';\n        return pathA2();\n    } else {\n        return pathA2();\n    }\n}\n\n\n// Flow: set_NONNORM\nfunction set_NONNORM() {\n    NONNORM = '';\n    if (OPSTATS === 'Y') {\n        return pathW();\n    } else {\n        NONNORM = 'D';\n        NONNORM_FLG = NONNORM_FLG.substring(0, 1) + 'J';\n        return pathA2();\n    }\n}\n\n\nfunction pathW() {\n    if (REFPER > 2023) {\n        return path1();\n    } else if (RECORD_TYP === 20 && ACTV_MIO_NUM < 12 && (ACTV_MIO_NUM_FLG.substring(1, 2) === 'L' || (MADBPAYANN === 0 && REFPER === 2022))) {\n        return pathB2();\n    } else {\n        return path2();\n    }\n}\n\nfunction path1() {\n    if (RECORD_TYP === 20 && ACTV_MIO_NUM < 12 && (ACTV_MIO_NUM_FLG.substring(1, 2) === 'L' || (PAY_ANN_VAL === 0 && REFPER === REFPER - 1))) {\n        return pathB2();\n    } else {\n        return path2();\n    }\n}\n\nfunction pathB2() {\n    NONNORM = 'B';\n    NONNORM_FLG = NONNORM_FLG.substring(0, 1) + 'J';\n    return pathA2();\n}\n\nfunction path2() {\n    if (ACTV_MIO_NUM < 12) {\n        NONNORM = 'S';\n        NONNORM_FLG = NONNORM_FLG.substring(0, 1) + 'J';\n        return pathA2();\n    } else {\n        return pathA2();\n    }\n}\n\n\n// Flow: set_BASIC_0\nfunction set_BASIC_0() {\n    if (ACTV_MIO_NUM < 10) {\n        path3();\n    } else if (PAY_QTR1_VAL_R === 0 && PAY_QTR1_VAL_FLG.substring(0, 1) === 'R' && !['C', 'G'].includes(PAY_QTR1_VAL_FLG.substring(1, 2))) {\n        PAY_QTR1_VAL = 0;\n        PAY_QTR1_VAL_FLG = PAY_QTR1_VAL_FLG.substring(0, 1) + 'Z ';\n        EMP_MAR12_NUM = 0;\n        EMP_MAR12_NUM_FLG = EMP_MAR12_NUM_FLG.substring(0, 1) + 'Z ';\n        return pathA2();\n    } else {\n        return pathA2();\n    }\n}\n\n\nfunction path3() {\n    if (PAY_QTR1_VAL_FLG.substring(1, 2) === 'G') {\n        return pathB3();\n    } else {\n        PAY_QTR1_VAL = 0;\n        PAY_QTR1_VAL_FLG = PAY_QTR1_VAL_FLG.substring(0, 1) + 'Z ';\n        return pathB3();\n    }\n}\n\nfunction pathB3() {\n    if (EMP_MAR12_NUM_F.substring(1, 2) === 'G') {\n        return pathA2();\n    } else {\n        EMP_MAR12_NUM = 0;\n        EMP_MAR12_NUM_FLG = EMP_MAR12_NUM_FLG.substring(0, 1) + 'Z ';\n        return pathA2();\n    }\n}\n\n\n// Flow: SPECIAL_SEASON\nfunction SPECIAL_SEASON() {\n    if (PAY_QTR1_VAL_FLG.substring(0, 2) !== 'R ' && !['C', 'G', 'L', 'N', 'Z'].includes(PAY_QTR1_VAL_FLG.substring(1, 2))) {\n        return path4();\n    } else {\n        return pathA2();\n    }\n}\n\nfunction path4() {\n    if (RECORD_TYP === 90) {\n        return path5();\n    } else if (CY_PAY_QTR1_VAL === 0) {\n        ECPAYQ1ZERO = 'TRUE';\n        return path6();\n    } else {\n        return pathA2();\n    }\n}\n\nfunction path5() {\n    if (ECPAYQ1 === 0) {\n        ECPAYQ1ZERO = 'TRUE';\n        return path6();\n    } else {\n        return pathA2();\n    }\n}\n\nfunction path6() {\n    if (EMP_MAR12_NUM_FLG.substring(0, 2) !== 'R ' && !['C', 'G', 'L', 'N', 'Z'].includes(EMP_MAR12_NUM_FLG.substring(1, 2)) && ECPAYQ1ZERO === 'TRUE') {\n        return path7();\n    } else {\n        return pathA2();\n    }\n}\n\nfunction path7() {\n    if (RECORD_TYP === 90) {\n        return path8();\n    } else if (CY_EMP_MAR12_NUM === 0) {\n        EMP_MAR12_NUM_FLG = EMP_MAR12_NUM_FLG.substring(0, 1) + 'Z ';\n        PAY_QTR1_VAL_FLG = PAY_QTR1_VAL_FLG.substring(0, 1) + 'Z ';\n        return pathA2();\n    } else {\n        return pathA2();\n    }\n}\n\nfunction path8() {\n    if (ECEMPQ1 === 0) {\n        EMP_MAR12_NUM_FLG = EMP_MAR12_NUM_FLG.substring(0, 1) + 'Z ';\n        PAY_QTR1_VAL_FLG = PAY_QTR1_VAL_FLG.substring(0, 1) + 'Z ';\n        return pathA2();\n    } else {\n        return pathA2();\n    }\n}\n\nlet jsonObject = processPayload();\nlet targetObject = msg.payload.csv[0]\n\nfor (let prop in jsonObject) {\n    if (jsonObject.hasOwnProperty(prop)) {\n        targetObject[prop] = jsonObject[prop];\n    }\n}\n\nmsg.payload.csv[0] = targetObject\n\nmsg.payload.csv[0].module = \"NonNorm\"\n\n\n// setTimeout(function () {\nnode.status({ fill: \"gray\", shape: \"ring\", text: \"complete\" });\n//     node.send(msg);\n// }, 1000);\n\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 140,
        "wires": [
            [
                "f2c1020b09e81d29"
            ]
        ]
    },
    {
        "id": "f2c1020b09e81d29",
        "type": "debug",
        "z": "a08711b1cedb891d",
        "name": "nonnorm debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 80,
        "wires": []
    },
    {
        "id": "eba64fd9f27069b0",
        "type": "status",
        "z": "a08711b1cedb891d",
        "name": "",
        "scope": [
            "2334aa4fdd5b642f"
        ],
        "x": 240,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "24009e768fd1fccd",
        "type": "function",
        "z": "a3136c877b98e237",
        "name": "critical error",
        "func": "node.status({ fill: \"green\", shape: \"dot\", text: \"processing\" });\n\nif ((['111', '131', '791'].includes(msg.payload.facts[0].COVCHGCD.toString())) && (new Date(msg.payload.facts[0].COVCHGDT) <= new Date(new Date().getFullYear() + '-01-01')) && (msg.payload.facts[0].Data == 0)) {\n    msg.payload.facts[0].TABSTAT = 'N';\n    msg.payload.facts[0].NONTABFL = 'D';\n    msg.payload.facts[0].STOP = true;\n} else if (['181', '201', '801', '091', '121', '171'].includes(msg.payload.facts[0].COVCHGCD.toString())) {\n    msg.payload.facts[0].TABSTAT = 'N';\n    msg.payload.facts[0].NONTABFL = 'D';\n    msg.payload.facts[0].STOP = true;\n} else if (msg.payload.facts[0].PDIV === 'S' && !msg.payload.facts[0].ANAIC.toString().startsWith('1151') && !msg.payload.facts[0].ANAIC.toString().startsWith('1151')) {\n    if (msg.payload.facts[0].PDIV === 'S' && ((msg.payload.facts[0].EDTROUTE > 0 && !msg.payload.facts[0].NAICOLD.toString().startsWith('1151')) || !msg.payload.facts[0].NAICOLD.toString().startsWith('1151') || (msg.payload.facts[0].EDTROUTE === 0 && !msg.payload.facts[0].NAICSDSG.toString().startsWith('1151') && !msg.payload.facts[0].NAICMAIL.toString().startsWith('1151')))) {\n        return;\n    } else {\n        msg.payload.facts[0].TABSTAT = 'N';\n        msg.payload.facts[0].NONTABFL = 'D';\n        msg.payload.facts[0].STOP = true;\n        msg.payload.facts[0].FLAG = 'OUT_OF_SCOPE_PDIV'\n    }\n} else if (['A', 'G', 'F'].includes(msg.payload.facts[0].PDIV)) {\n    msg.payload.facts[0].TABSTAT = 'N';\n    msg.payload.facts[0].NONTABFL = 'D';\n    msg.payload.facts[0].STOP = true;\n    msg.payload.facts[0].FLAG = 'OUT_OF_SCOPE_PDIV'\n} else if (msg.payload.facts[0].TRADCODE === 'M' && msg.payload.facts[0].COVCHGCD.toString() === '151') {\n    msg.payload.facts[0].TABSTAT = 'N';\n    msg.payload.facts[0].NONTABFL = 'R';\n    msg.payload.facts[0].STOP = true;\n    msg.payload.facts[0].FLAG = 'PROBABLE_ITT'\n}\n\nmsg.payload.facts[0].module = \"Critical Error\"\n\n// setTimeout(function () {\n    node.status({ fill: \"gray\", shape: \"ring\", text: \"complete\" });\n//     node.send(msg);\n// }, 1000);\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 160,
        "wires": [
            [
                "cd5242bb1783ba61"
            ]
        ]
    },
    {
        "id": "cd5242bb1783ba61",
        "type": "debug",
        "z": "a3136c877b98e237",
        "name": "debug critical error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 80,
        "wires": []
    },
    {
        "id": "c2693d845fa8c5fa",
        "type": "status",
        "z": "a3136c877b98e237",
        "name": "",
        "scope": null,
        "x": 80,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "b2a5330c1460830d",
        "type": "debug",
        "z": "a3d425ba6d3b6a6a",
        "name": "debug classification",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 80,
        "wires": []
    },
    {
        "id": "a9488a8d395e57ca",
        "type": "function",
        "z": "a3d425ba6d3b6a6a",
        "name": "classification function",
        "func": "node.status({ fill: \"green\", shape: \"dot\", text: \"processing\" });\n\nif ((msg.payload.csv[0].RECORD_TYP == 20 || msg.payload.csv[0].RECORD_TYP == 90) && msg.payload.csv[0].BR_STAT == \"Y\") {\n    if ((msg.payload.csv[0].NAICS_CODE_OLD).toString().substring(1, 4) == \"4821\" || (msg.payload.csv[0].NAICS_CODE_OLD).toString().substring(1, 7) == \"6221101\" || (msg.payload.csv[0].NAICS_CODE_OLD).toString().substring(1, 6) == \"113110\") {\n        if (!msg.payload.csv[0].NAICS_WRITIN_TEXT) {\n            msg.payload.csv[0].analysisRef = \"NAICS_WRITIN\"\n        }\n    } else {\n        msg.payload.csv[0].TABSTAT = \"N\"\n        msg.payload.csv[0].NONTABFL = \"R\"\n    }\n    msg.payload.csv[0].action = \"Go to Geography\"\n\n} else if (msg.payload.csv[0].RECORD_TYP == 30 && msg.payload.csv[0].BR_STAT == \"Y\") {\n    if (msg.payload.csv[0].KAU_NAICS == \"4821\" + \" \" || msg.payload.csv[0].KAU_NAICS == \"6221101\" || msg.payload.csv[0].KAU_NAICS + \" \" == \"113110\") {\n        msg.payload.csv[0].action = \"Go to Geography\"\n    } else {\n        msg.payload.csv[0].TABSTAT = \"N\"\n        msg.payload.csv[0].NONTABFL = \"R\"\n    }\n} else {\n    msg.payload.csv[0].error = \"Record should not have entered this module\"\n}\n\nmsg.payload.csv[0].module = \"Classification\"\n\n// setTimeout(function () {\nnode.status({ fill: \"gray\", shape: \"ring\", text: \"complete\" });\n//     node.send(msg);\n// }, 1000);\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 160,
        "wires": [
            [
                "b2a5330c1460830d"
            ]
        ]
    },
    {
        "id": "85c4a58489514054",
        "type": "status",
        "z": "a3d425ba6d3b6a6a",
        "name": "",
        "scope": null,
        "x": 80,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "fe11cb6a6a8eb0ed",
        "type": "debug",
        "z": "4ed21c9150f5597a",
        "name": "debug geography",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 80,
        "wires": []
    },
    {
        "id": "2f9a589f15cd676e",
        "type": "function",
        "z": "4ed21c9150f5597a",
        "name": "geography function",
        "func": "node.status({ fill: \"green\", shape: \"dot\", text: \"processing\" });\n\nconst validationChart = [{ \"STFIPS\": \"01\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"02\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"04\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"05\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"06\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"08\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"09\", \"GEOREG\": \"01\" }, { \"STFIPS\": \"10\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"11\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"12\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"13\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"15\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"16\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"17\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"18\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"19\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"20\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"21\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"22\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"23\", \"GEOREG\": \"01\" }, { \"STFIPS\": \"24\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"25\", \"GEOREG\": \"01\" }, { \"STFIPS\": \"26\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"27\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"28\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"29\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"30\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"31\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"32\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"33\", \"GEOREG\": \"01\" }, { \"STFIPS\": \"34\", \"GEOREG\": \"01\" }, { \"STFIPS\": \"35\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"36\", \"GEOREG\": \"01\" }, { \"STFIPS\": \"37\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"38\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"39\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"40\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"41\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"42\", \"GEOREG\": \"01\" }, { \"STFIPS\": \"44\", \"GEOREG\": \"01\" }, { \"STFIPS\": \"45\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"46\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"47\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"48\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"49\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"50\", \"GEOREG\": \"01\" }, { \"STFIPS\": \"51\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"53\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"54\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"55\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"56\", \"GEOREG\": \"04\" }]\nlet validation = false\n\nfor (let i = 0; i < validationChart.length; i++) {\n    const element = validationChart[i];\n    let parsedSTFIPS = parseInt(element[\"STFIPS\"]);\n    let parsedGEOREG = parseInt(element[\"GEOREG\"]);\n\n    if (parsedSTFIPS === parseInt(msg.payload.csv[0].STFIPS) && parsedGEOREG === parseInt(msg.payload.csv[0].GEOREG)) {\n        validation = true\n        break;\n    }\n}\n\nif (validation) {\n    msg.payload.csv[0].action = \"Go to Calculate Best Admin Receipts\"\n} else {\n    if (msg.payload.csv[0].STFIPS == \"97\" ) {\n        if (msg.payload.csv[0].NAICS_SECTOR_OLD == \"21\" && (msg.payload.csv[0].STATE_PHY == \"PC\" || msg.payload.csv[0].STATE_PHY == \"NG\" || msg.payload.csv[0].STATE_PHY == \"AT\")) {\n            msg.payload.csv[0].action = \"Go to Calculate Best Admin Receipts\"\n        } else {\n            msg.payload.csv[0].TABSTAT = \"N\"\n            msg.payload.csv[0].NONTABFL = \"Y\"\n        }\n    } else {\n        msg.payload.csv[0].flag = \"GEO_Invalid\"\n        msg.payload.csv[0].action = \"Go to Calculate Best Admin Receipts\"\n    }\n}\nmsg.payload.csv[0].module = \"Geography\"\n\n// setTimeout(function () {\nnode.status({ fill: \"gray\", shape: \"ring\", text: \"complete\" });\n//     node.send(msg);\n// }, 1000);\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 180,
        "wires": [
            [
                "fe11cb6a6a8eb0ed"
            ]
        ]
    },
    {
        "id": "267f52fccba46d6f",
        "type": "status",
        "z": "4ed21c9150f5597a",
        "name": "",
        "scope": null,
        "x": 100,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "5007cf127bb669e0",
        "type": "debug",
        "z": "a0bced2e224712c4",
        "name": "debug best admin",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 80,
        "wires": []
    },
    {
        "id": "06e76c577e867a28",
        "type": "function",
        "z": "a0bced2e224712c4",
        "name": "best admin function",
        "func": "msg.topic = 'Estab - Best Admin Receipts'\nmsg.startTime = Date.now();\nlet arr = [];\n\n// Assuming msg.payload.csv is an array of objects\nfor (let i = 0; i < msg.payload.rows.length; i++) {\n    const data = msg.payload.rows[i];\n\n    if (data.REPORTING_ID_TYP === 'SU') {\n        if (data.FORM_CODE_IRS === ' ' || data.FORM_CODE_IRS === 'C1') {\n            data.ECRCPTOT = data.RCPT_NET_IRS_CURR;\n        } else if (\n            (parseInt(data.FORM_CODE_IRS) >= 1 && parseInt(data.FORM_CODE_IRS) <= 13) &&\n            ['52', '53', '55'].includes(data.NAICS_SECTOR.toString())\n        ) {\n            if (['01', '02', '03', '04', '05'].includes(data.FORM_CODE_IRS.toString())) {\n                data.ECRCPTOT =\n                    parseInt(data.RCPT_NET_IRS_CURR) +\n                    parseInt(data.RCPT_INTEREST_IRS_CURR) +\n                    parseInt(data.RCPT_GROSSRENT_IRS_CURR) +\n                    parseInt(data.RCPT_OTHINCOME_IRS_CURR);\n            } else if (['06', '07'].includes(data.FORM_CODE_IRS.toString())) {\n                data.ECRCPTOT =\n                    parseInt(data.RCPT_GROSSINC_IRS_CURR) + parseInt(data.RCPT_INTEREST_IRS_CURR);\n            } else if (data.FORM_CODE_IRS === '8') {\n                data.ECRCPTOT = parseInt(data.RCPT_TOTINC_IRS_CURR);\n            } else if (['09', '10', '11'].includes(data.FORM_CODE_IRS.toString())) {\n                data.ECRCPTOT = parseInt(data.RCPT_TOTREV_IRS_CURR);\n            } else if (data.FORM_CODE_IRS === '12') {\n                data.ECRCPTOT = parseInt(data.RCPT_NET_IRS_CURR);\n            } else if (data.FORM_CODE_IRS === '13') {\n                data.ECRCPTOT =\n                    parseInt(data.RCPT_TOTINC_IRS_CURR) +\n                    parseInt(data.RCPT_INTEREST_IRS_CURR) +\n                    parseInt(data.RCPT_GROSSRENT_IRS_CURR);\n            }\n        } else if (\n            (data.FORM_CODE_IRS.toString() === '06' || data.FORM_CODE_IRS.toString() === '07') &&\n            !['52', '53', '55'].includes(data.NAICS_SECTOR.toString())\n        ) {\n            data.ECRCPTOT = 0;\n        } else if (\n            ['01', '02', '03', '04', '05', '08', '09', '10', '11', '12', '13'].includes(data.FORM_CODE_IRS.toString()) &&\n            ['51', '54', '56', '61', '62', '71', '81'].includes(data.NAICS_SECTOR.toString())\n        ) {\n            if (['01', '02', '03', '04', '05', '12'].includes(data.FORM_CODE_IRS.toString())) {\n                data.ECRCPTOT = data.RCPT_NET_IRS_CURR;\n            } else if (['08', '13'].includes(data.FORM_CODE_IRS.toString())) {\n                data.ECRCPTOT = data.RCPT_TOTINC_IRS_CURR;\n            } else if (['09', '10'].includes(data.FORM_CODE_IRS.toString())) {\n                data.ECRCPTOT =\n                    data.RCPT_TOTREV_IRS_CURR + data.COST_GOODSOLD_IRS_CURR;\n            } else if (data.FORM_CODE_IRS.toString() === '11') {\n                data.ECRCPTOT = data.RCPT_TOTREV_IRS_CURR;\n            }\n        } else if (\n            ['01', '02', '03', '04', '05', '08', '09', '10', '11', '12', '13'].includes(data.FORM_CODE_IRS.toString()) &&\n            !['21', '23', '31', '33', '42', '44', '45', '51', '52', '53', '55', '54', '56', '61', '62', '71', '72', '81'].includes(data.NAICS_SECTOR.toString())\n        ) {\n            if (['01', '02', '03', '04', '05', '12'].includes(data.FORM_CODE_IRS.toString())) {\n                data.ECRCPTOT = data.RCPT_NET_IRS_CURR;\n            } else if (['08', '13'].includes(data.FORM_CODE_IRS.toString())) {\n                data.ECRCPTOT = data.RCPT_TOTINC_IRS_CURR;\n            } else if (['09', '10', '11'].includes(data.FORM_CODE_IRS.toString())) {\n                data.ECRCPTOT = data.RCPT_TOTREV_IRS_CURR;\n            }\n        }\n    }\n    arr.push(data)\n\n}\nmsg.payload.rowsN = arr;\n\nmsg.duration = Date.now() - msg.startTime;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 200,
        "wires": [
            [
                "5007cf127bb669e0"
            ]
        ]
    },
    {
        "id": "7079068ecbbe7a0c",
        "type": "status",
        "z": "a0bced2e224712c4",
        "name": "",
        "scope": null,
        "x": 100,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "c8cdb6c161debc28",
        "type": "function",
        "z": "1e75121bac78652a",
        "name": "completeness function",
        "func": "msg.topic = 'Estab - Completeness Check'\nmsg.startTime = Date.now();\n\nlet arr = []\n// PAY_ANN_VAL\nfor (let i = 0; i < msg.payload.rows.length; i++) {\n    let row = msg.payload.rows[i];\n    if (row.PAY_ANN_VAL === 0 || typeof row.PAY_ANN_VAL === 'undefined') {\n        if (row.UNIT === 'ESTAB') {\n            if (row.PAY_ANN_LSD && row.PAY_ANN_LSD > 0) {\n                row.MARK = 'Leased Employer';\n            } else if (row.EXPS_TEMPSTAF_VAL && row.EXPS_TEMPSTAF_VAL > 0) {\n                row.PAY_ANN_VAL = row.EXPS_TEMPSTAF_VAL;\n                row.PAY_ANN_VAL_FLG = 'J' + row.PAY_ANN_VAL_FLG\n                row.MARK = 'Leased Employer';\n            } else if (row.PROCESS_DIV_CODE === 'I' && (row.PAY_ANN_PRDWRK_VAL + row.PAY_ANN_NONPRDWRK_VAL) > 0) {\n                row.PAY_ANN_VAL = row.PAY_ANN_PRDWRK_VAL + row.PAY_ANN_NONPRDWRK_VAL;\n                row.PAY_ANN_VAL_FLG = 'L' + row.PAY_ANN_VAL_FLG\n            } else if (row.REPORTING_ID_TYP === 'SU') {\n                if (row.ECPAYANN > 0) {\n                    row.PAY_ANN_VAL = row.ECPAYANN;\n                    row.PAY_ANN_VAL_FLG = 'A' + row.PAY_ANN_VAL_FLG\n                } else {\n                    row.MARK = 'Non-Employer';\n                    row.TABSTAT = 'N'\n                    row.NONTABFL = 'N'\n                    // STOP PROCESSING\n                }\n            } else if (row.REPORTING_ID_TYP === 'MU' && row.CY_PAY_ANN > 0) {\n                row.PAY_ANN_VAL = row.CY_PAY_ANN;\n                if (row.CY_PAY_ANN_FLG) {\n                    row.PAY_ANN_VAL_FLG = row.CY_PAY_ANN_FLG;\n                }\n            } else if ((row.ESTABS - row.HISTORIC_ECON_CENSUS) > 0) {\n                row.PAY_ANN_VAL = row.MADB_2022_PAYANN;\n                row.PAY_ANN_VAL_FLG = 'H' + row.PAY_ANN_VAL_FLG\n            } else {\n                row.MARK = 'Non-Employer';\n                row.TABSTAT = 'N'\n                row.NONTABFL = 'N'\n                // STOP PROCESSING\n            }\n        } \n    }\n\n    // RCPTOT\n    if (row.RCPT_TOT_VAL === 0 || typeof row.RCPT_TOT_VAL === 'undefined') {\n        if (row.PROCESS_DIV_CODE === 'I' && row.COVCHGCD === '401') {\n            row.RCPT_TOT_VAL = 0;\n        } else if (row.REPORTING_ID_TYP === 'SU') {\n            if (row.ECRCPTOT > 0) {\n                row.RCPT_TOT_VAL = row.ECRCPTOT;\n                row.RCPT_TOT_VAL_FLG = 'A' + row.RCPT_TOT_VAL_FLG;\n            } else if (row.MONTHLY_data > 0 && row.QSS_data > 0) {\n                row.RCPT_TOT_VAL = (row.MONTHLY_CMON / 1000) + row.QUARTERLY_QREV;\n                row.RCPT_TOT_VAL_FLG = 'J' + row.RCPT_TOT_VAL_FLG;\n            } else if ((row.ESTABS - row.HISTORIC_ECON_CENSUS) > 0) {\n                row.RCPT_TOT_VAL = row.MADB_2022_RCPTOT;\n                row.RCPT_TOT_VAL = 'H' + row.RCPT_TOT_VAL\n            }\n        } else if (row.REPORTING_ID_TYP === 'KAU') {\n            if ((row.ESTABS - row.HISTORIC_ECON_CENSUS) > 0) {\n                row.RCPT_TOT_VAL = row.MADB_2022_RCPTOT;\n                row.RCPT_TOT_VAL = 'H' + row.RCPT_TOT_VAL\n            }    \n        }\n    }\n\n    // PAYQTR1\n    if (row.PAY_QTR1_VAL === 0 || row.PAY_QTR1_VAL === undefined) {\n        if (row.PAY_ANN_LSD > 0) {\n            row.NOTE = 'Leased Employer';\n            row.PAY_QTR1_VAL = 0;\n        } else if (row.PROCESS_DIV_CODE === 'I' && (row.PAY_QTR1_PRDWRK_VAL + row.PAY_QTR1_NONPRDWRK_VAL) > 0) {\n            row.PAY_QTR1_VAL = row.PAY_QTR1_PRDWRK_VAL + row.PAY_QTR1_NONPRDWRK_VAL\n            row.PAY_QTR1_VAL_FLG = 'L' + row.PAY_QTR1_VAL_FLG;\n        } else if (row.REPORTING_ID_TYP === 'SU') {\n            if (row.ECPAYQ1 > 0) {\n                row.PAY_QTR1_VAL = row.ECPAYQ1;\n                row.PAY_QTR1_VAL_FLG = 'A' + row.PAY_QTR1_VAL_FLG;\n            } else {\n                if ((row.ESTABS - row.HISTORIC_ECON_CENSUS) > 0) {\n                    row.PAY_QTR1_VAL = row.MADB_2022_PAYQ1;\n                    row.PAY_QTR1_VAL_FLG = 'H' + row.PAY_QTR1_VAL_FLG\n                }    \n            }\n        } else if (row.REPORTING_ID_TYP === 'MU' && row.CY_PAY_QTR1 > 0) {\n            row.PAY_QTR1_VAL = row.CY_PAY_QTR1;\n            if (row.CY_PAY_QTR1_FLG) {\n                row.PAY_QTR1_VAL_FLG = row.CY_PAY_QTR1_FLG;\n            }\n        } else if ((row.ESTABS - row.HISTORIC_ECON_CENSUS) > 0) {\n            row.PAY_QTR1_VAL = row.MADB_2022_PAYQ1;\n            row.PAY_QTR1_VAL_FLG = 'H' + row.PAY_QTR1_VAL_FLG\n        }\n    }\n\n    // EMPQ1\n    if (row.EMP_MAR12_VAL === 0 || row.EMP_MAR12_VAL === undefined) {\n        if (row.PAY_ANN_LSD > 0) {\n            row.NOTE = 'Leased Employer';\n            row.EMP_MAR12_VAL = 0;\n        } else if (row.PROCESS_DIV_CODE === 'I' && (row.EMP_MAR12_PRDWRK_NUM + row.EMP_MAR12_NONPRDWRK_NUM) > 0) {\n            row.EMP_MAR12_VAL = row.EMP_MAR12_PRDWRK_NUM + row.EMP_MAR12_NONPRDWRK_NUM\n            row.EMP_MAR12_VAL_FLG = 'L' + row.EMP_MAR12_VAL_FLG;\n        } else if (row.REPORTING_ID_TYP === 'SU') {\n            if (row.ECEMPQ1 > 0) {\n                row.EMP_MAR12_NUM = row.ECEMPQ1;\n                row.EMP_MAR12_NUM_FLG = 'A' + row.EMP_MAR12_NUM_FLG;\n            } else {\n                if ((row.ESTABS - row.HISTORIC_ECON_CENSUS) > 0) {\n                    row.EMP_MAR12_VAL = row.MADB_2022_EMPQ1;\n                    row.EMP_MAR12_NUM_FLG = 'H' + row.EMP_MAR12_NUM_FLG\n                }\n            }\n        } else if (row.REPORTING_ID_TYP === 'MU' && row.CY_EMP_MAR12 > 0) {\n            row.EMP_MAR12_NUM = row.CY_EMP_MAR12;\n            if (row.CY_EMP_MAR12_FLG) {\n                row.EMP_MAR12_NUM_FLG = row.CY_EMP_MAR12_FLG;\n            } \n        } else if ((row.ESTABS - row.HISTORIC_ECON_CENSUS) > 0) {\n            row.EMP_MAR12_VAL = row.MADB_2022_EMPQ1;\n            row.EMP_MAR12_VAL_FLG = 'H' + row.EMP_MAR12_VAL_FLG\n        }\n    }\n    arr.push(row)\n}\n\nmsg.payload.rowsN = arr;\n\n// row.module = \"Completeness Check\"\nmsg.duration = Date.now() - msg.startTime;\n\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 180,
        "wires": [
            [
                "9905b611fd98c517"
            ]
        ]
    },
    {
        "id": "9905b611fd98c517",
        "type": "debug",
        "z": "1e75121bac78652a",
        "name": "debug completeness",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 400,
        "y": 80,
        "wires": []
    },
    {
        "id": "b471fc927cf789d7",
        "type": "status",
        "z": "1e75121bac78652a",
        "name": "",
        "scope": null,
        "x": 100,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "934d95644c951dfc",
        "type": "function",
        "z": "acd9862f30af144d",
        "name": "pv function",
        "func": "node.status({ fill: \"green\", shape: \"dot\", text: \"processing\" });\n\nmsg.payload.csv[0].module = \"PV\"\n\nsetTimeout(function () {\n    node.status({ fill: \"gray\", shape: \"ring\", text: \"complete\" });\n    node.send(msg);\n}, 1000);\n\n// return msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 180,
        "wires": [
            [
                "e8e5ce05e046c9d9"
            ]
        ]
    },
    {
        "id": "e8e5ce05e046c9d9",
        "type": "debug",
        "z": "acd9862f30af144d",
        "name": "debug pv",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 80,
        "wires": []
    },
    {
        "id": "4c82868047e24054",
        "type": "status",
        "z": "acd9862f30af144d",
        "name": "",
        "scope": null,
        "x": 80,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "966186740def6a06",
        "type": "debug",
        "z": "ae0faa518ff234d5",
        "name": "Derived Items debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 80,
        "wires": []
    },
    {
        "id": "a213ffa0737c4159",
        "type": "function",
        "z": "ae0faa518ff234d5",
        "name": "Derived Items function",
        "func": "// node.status({ fill: \"green\", shape: \"dot\", text: \"processing\" });\nmsg.topic = 'Estab - Derived Items'\n\nlet csv = msg.payload.csv[0]\ncsv.YEAR_END_DATE = new Date(csv.YEAR_END_DATE)\ncsv.YEAR_START_DATE = new Date(csv.YEAR_START_DATE)\n\nlet items = [\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCP_TOT_VAL_SUM\",\n        \"DESCRIPTION\": \"Sum estabs receipts to KAU\",\n        \"CALCULATION\": \"csv.ESTAB.RCP_TOT_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"EMP_MAR12_VAL_SUM \",\n        \"DESCRIPTION\": \"Sum estabs employment to KAU\",\n        \"CALCULATION\": \"csv.ESTAB.EMP_MAR12_VAL\",\n        \"Temp or Perm\": \"P\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"PAY_QTR1_VAL_SUM\",\n        \"DESCRIPTION\": \"Sum estabs qtr1 payroll to KAU\",\n        \"CALCULATION\": \"csv.ESTAB.PAY_QTR1_VAL\",\n        \"Temp or Perm\": \"P\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"PAY_ANN_VAL_SUM\",\n        \"DESCRIPTION\": \"Sum estabs payroll to KAU\",\n        \"CALCULATION\": \"csv.ESTAB.PAY_ANN_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": ['31', '32', '33'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"CAPEX_NEW_TOT_SUM\",\n        \"DESCRIPTION\": \"Sum estab new capital expenditures to KAU\",\n        \"CALCULATION\": \"csv.ESTAB.CAPEX_NEW_TOT_DVAL\",\n        \"Temp or Perm\": \"P\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"CAPEX_TOT_DVAL_SUM\",\n        \"DESCRIPTION\": \"Sum estab capital expenditures to KAU \",\n        \"CALCULATION\": \"csv.ESTAB.CAPEX_TOT\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"CAPEX_MACH_TOT_SUM \",\n        \"DESCRIPTION\": \"Sum estab machinery capital expenditures to KAU \",\n        \"CALCULATION\": \"csv.ESTAB.CAPEX_MACH_TOT\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"COMPANY\",\n        \"DERIVED ITEM\": \"CAPEX_MACH_TOT_SUM \",\n        \"DESCRIPTION\": \"Sum KAU machinery capital expenditures to  Company\",\n        \"CALCULATION\": \"csv.KAU.CAPEX_MACH_TOT\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"COMPANY\",\n        \"DERIVED ITEM\": \"CAPEX_TOT_DVAL_SUM\",\n        \"DESCRIPTION\": \"Sum KAU capital expenditures to Company \",\n        \"CALCULATION\": \"csv.KAU.CAPEX_TOT\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"COMPANY\",\n        \"DERIVED ITEM\": \"EMP_MAR12_VAL_SUM \",\n        \"DESCRIPTION\": \"Sum KAU employment to Company\",\n        \"CALCULATION\": \"csv.KAU.EMP_MAR12_VAL\",\n        \"Temp or Perm\": \"P\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"COMPANY\",\n        \"DERIVED ITEM\": \"PAY_QTR1_VAL_SUM \",\n        \"DESCRIPTION\": \"Sum estabs qtr1 payroll to KAU\",\n        \"CALCULATION\": \"csv.KAU.PAY_QTR1_VAL\",\n        \"Temp or Perm\": \"P\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"COMPANY\",\n        \"DERIVED ITEM\": \"PAY_ANN_VAL_SUM \",\n        \"DESCRIPTION\": \"Sum estabs payroll to KAU\",\n        \"CALCULATION\": \"csv.KAU.PAY_ANN_VAL\",\n        \"Temp or Perm\": \"P\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"COMPANY\",\n        \"DERIVED ITEM\": \"csv.RCPT_TOT_VAL_SUM \",\n        \"DESCRIPTION\": \"Sum KAU receipts to KAU\",\n        \"CALCULATION\": \"csv.KAU.RCPT_TOT_VAL\",\n        \"Temp or Perm\": \"P\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"CAPEX_NEW_TOT_SUM \",\n        \"DESCRIPTION\": \"Sum KAU new capital expenditures to Company\",\n        \"CALCULATION\": \"csv.KAU.CAPEX_NEW_TOT_DVAL\",\n        \"Temp or Perm\": \"P\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS4\": ['4251'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_AGBR_REV_DVAL\",\n        \"CALCULATION\": \"csv.RCPT_OWN_VAL + csv.RCPT_COMSN_EARN_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS4\": ['4251'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_COMSN_AVG_RATE_RAT\",\n        \"DESCRIPTION\": \"derived commission rate\",\n        \"CALCULATION\": \"csv.RCPT_COMSN_EARN_VAL/csv.RCPT_COMSN_GSV_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": ['42'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_STOR_DVAL\",\n        \"DESCRIPTION\": \"non-ecommerce (in-store)\",\n        \"CALCULATION\": \"csv.RCPT_TOT_VAL-csv.RCPT_ECOMM_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['423', '424'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"INV_DOM_DVAL\",\n        \"DESCRIPTION\": \"inventory IN the US\",\n        \"CALCULATION\": \"csv.INV_CY_TOT-csv.INV_ENROUTE_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": ['31', '32', '33'] },\n        \"UNIT\": \"Estab/all?\",\n        \"DERIVED ITEM\": \"EXPS_CSTMTOT_DVAL\",\n        \"DESCRIPTION\": \"deriving ASM/EC mfg collected total cost item, needed to make use of VALUE_ADDED item straight-forward in tabbing and disclosure\",\n        \"CALCULATION\": \"csv.EXPS_MAT_V1_VAL + csv.EXP_RESALE_VAL + csv.EXPS_FUEL_VAL + csv.EXPS_ELEC_VAL + csv.EXPS_CONTRACT_VAL\",\n        \"Temp or Perm\": \"p\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": ['31', '32', '33'] },\n        \"UNIT\": \"Estab/all?\",\n        \"DERIVED ITEM\": \"EXPS_RPTOT_DVAL\",\n        \"DESCRIPTION\": \"deriving ASM/EC mfg collected total rental payments \",\n        \"CALCULATION\": \"csv.EXPS_RENT_BUILD_VAL + csv.EXPS_RENT_MACH_VAL\",\n        \"Temp or Perm\": \"p\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": ['31', '32', '33'] },\n        \"UNIT\": \"Estab/all?\",\n        \"DERIVED ITEM\": \"EXPS_PCHTT_DVAL\",\n        \"DESCRIPTION\": \"deriving ASM/EC mfg collected total purchased services\",\n        \"CALCULATION\": \"csv.EXPS_TEMPSTAF_VAL + csv.EXPS_COMPTR_OTHEQ_VAL + csv.EXPS_EXSOFT_VAL + csv.EXPS_COMMSVC_VAL + csv.EXPS_DATAPROC_VAL + csv.EXPS_BUILD_REP_VAL + csv.EXPS_MACH_REP_VAL + csv.EXPS_REFUSE_VAL + csv.EXPS_ADVERT_VAL + csv.EXPS_PROFTECH_VAL + csv.EXPS_TAX_VAL + csv.EXPS_OTHER_VAL\",\n        \"Temp or Perm\": \"p\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": ['31', '32', '33'] },\n        \"UNIT\": \"Estab/all?\",\n        \"DERIVED ITEM\": \"VALUE_ADDED_DVAL\",\n        \"DESCRIPTION\": \"Value Added formula from ASM/EC mfg, uses the recently created derived 'total costs'  Additions and Subtractions can be sequenced differently if needed\",\n        \"CALCULATION\": \"csv.RCPT_TOT_VAL + csv.INV_CY_FINISHED_VAL + csv.INV_CY_WRKPROC_VAL - csv.EXPS_CSTMTOT_DVAL - csv.INV_PY_FINISHED_VAL - csv.INV_PY_WRKPROC_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": ['22'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_AGR_DVAL\",\n        \"DESCRIPTION\": \"Agricultural Products motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_AGR_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_GRAIN_DVAL\",\n        \"DESCRIPTION\": \"Grains, Alcohol, Tobacco Products motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_GRAIN_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_STONE_DVAL\",\n        \"DESCRIPTION\": \"Stone, Nonmetallic minerals motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_STONE_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_FUEL_DVAL\",\n        \"DESCRIPTION\": \"Coal and Petroleum Products motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_FUEL_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_PHARM_DVAL\",\n        \"DESCRIPTION\": \"Pharmaceutical and chemical products motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_PHARM_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_WOOD_DVAL\",\n        \"DESCRIPTION\": \"Wood Products, Textiles, Leather motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_WOOD_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_METAL_DVAL\",\n        \"DESCRIPTION\": \"Base Metal and Machinery motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_METAL_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_ELECT_DVAL\",\n        \"DESCRIPTION\": \"Electronic & Precision motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_ELECT_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_USEDGD_DVAL\",\n        \"DESCRIPTION\": \"Used household and office goods motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_USEDGD_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_NEWFRN_DVAL\",\n        \"DESCRIPTION\": \"New Furniture & Misc. Prods motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_NEWFRN_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_OTH_DVAL\",\n        \"DESCRIPTION\": \"Other motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_OTH_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_HAZRD_DVAL\",\n        \"DESCRIPTION\": \"Hazardous Materials motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_HAZRD_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": ['22'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_CUST_RES_DVAL\",\n        \"DESCRIPTION\": \"Residential Customers Revenue\",\n        \"CALCULATION\": \"(csv.RCPT_CUST_RES_PCT*csv.RCPT_TOT_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": ['22'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_CUST_NORES_DVAL\",\n        \"DESCRIPTION\": \"Non-residential consumer revenue\",\n        \"CALCULATION\": \"(csv.RCPT_CUST_NORES_PCT*csv.RCPT_TOT_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['519130', '517210', '517110', '517911'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_CUST_BUS_DVAL\",\n        \"DESCRIPTION\": \"Revenue by Gov & Business\",\n        \"CALCULATION\": \"(csv.RCPT_CUST_BUS_PCT*csv.RCPT_TOT_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['519130', '517210', '517110', '517911'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_CUST_IND_DVAL\",\n        \"DESCRIPTION\": \"SOURCE OF REVENUE - HOUSEHOLD\",\n        \"CALCULATION\": \"(csv.RCPT_CUST_IND_PCT*csv.RCPT_TOT_VAL)/100 \",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['561510', '561599'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_BUS_DVAL \",\n        \"DESCRIPTION\": \"business travel revenue\",\n        \"CALCULATION\": \"(csv.RCPT_BUS_PCT *csv.RCPT_TOT_VAL)/100)\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['561510', '561599', '561520'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_LEISURE_DVAL \",\n        \"DESCRIPTION\": \"leisure revenue\",\n        \"CALCULATION\": \"(csv.RCPT_LEISURE_PCT *csv.RCPT_TOT_VAL)/100)\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_NEWS_PRNT_DVAL\",\n        \"DESCRIPTION\": \"Print newspapers revenue\",\n        \"CALCULATION\": \"(csv.RCPT_NEWS_PRNT_PCT*(csv.RCPT_NEWS_PUB_VAL+csv.RCPT_ADV_SPACE_VAL))/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_NEWS_ONLINE_DVAL\",\n        \"DESCRIPTION\": \"online newspapers revenue\",\n        \"CALCULATION\": \"(csv.RCPT_NEWS_ONLINE_PCT*(csv.RCPT_NEWS_PUB_VAL+csv.RCPT_ADV_SPACE_VAL))/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_NEWS_OTH_DVAL\",\n        \"DESCRIPTION\": \"other media newspaper revenue\",\n        \"CALCULATION\": \"(csv.RCPT_NEWS_OTH_PCT*(csv.RCPT_NEWS_PUB_VAL+csv.RCPT_ADV_SPACE_VAL))/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_ADV_CLASS_DVAL\",\n        \"DESCRIPTION\": \"classified advertising revenue\",\n        \"CALCULATION\": \"(csv.RCPT_ADV_CLASS_PCT*csv.RCPT_ADV_SPACE_VAL/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_ADV_OTH_DVAL\",\n        \"DESCRIPTION\": \"all other advertising revenue\",\n        \"CALCULATION\": \"(csv.RCPT_ADV_OTH_PCT*csv.RCPT_ADV_SPACE_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['517110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_CUST_LOCTEL_BUS_DVAL\",\n        \"DESCRIPTION\": \"Fixed Local Tel - Gov & Business revenue\",\n        \"CALCULATION\": \"(csv.RCPT_CUST_LOCTEL_BUS_PCT*csv.RCPT_LOCTEL_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['517110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_CUST_LOCTEL_IND_DVAL\",\n        \"DESCRIPTION\": \"Household Fixed Local Telephony revenue\",\n        \"CALCULATION\": \"(csv.RCPT_CUST_LOCTEL_IND_PCT*csv.RCPT_LOCTEL_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['517110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_CUST_LNGTEL_BUS_DVAL\",\n        \"DESCRIPTION\": \"Fixed Long Dist - Gov & Business revenue\",\n        \"CALCULATION\": \"(csv.RCPT_CUST_LNGTEL_BUS_PCT*csv.RCPT_LNGTEL_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['517110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_CUST_LNGTEL_IND_DVAL\",\n        \"DESCRIPTION\": \"Household Fixed Long-distance revenue\",\n        \"CALCULATION\": \"(csv.RCPT_CUST_LNGTEL_IND_PCT*csv.RCPT_LNGTEL_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['517110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_CUST_SUBLIN_BUS_DVAL\",\n        \"DESCRIPTION\": \"Subscriber Line - Gov & Business revenue\",\n        \"CALCULATION\": \"(csv.RCPT_CUST_SUBLIN_BUS_PCT*csv.RCPT_SUBLIN_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['517110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_CUST_SUBLIN_IND_DVAL\",\n        \"DESCRIPTION\": \"Household Subscriber Line Charge revenue\",\n        \"CALCULATION\": \"(csv.RCPT_CUST_SUBLIN_IND_PCT*csv.RCPT_SUBLIN_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511120'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_PER_PRNT_DVAL\",\n        \"DESCRIPTION\": \"print periodicals revenue\",\n        \"CALCULATION\": \"(csv.RCPT_PER_PRNT_PCT*(csv.RCPT_PER_PUB_VAL+csv.RCPT_ADV_SPACE_VAL))/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511120'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_PER_ONLINE_DVAL\",\n        \"DESCRIPTION\": \"online periodicals revenue\",\n        \"CALCULATION\": \"(csv.RCPT_PER_ONLINE_PCT*(csv.RCPT_PER_PUB_VA+csv.RCPT_ADV_SPACE_VALL))/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511120'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_PER_OTH_DVAL\",\n        \"DESCRIPTION\": \"other media periodicals revenue\",\n        \"CALCULATION\": \"(csv.RCPT_PER_OTH_PCT*(csv.RCPT_PER_PUB_VAL+csv.RCPT_ADV_SPACE_VAL))/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"511140\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \" csv.RCPT_SYSOFT_PERS_DVAL\",\n        \"DESCRIPTION\": \"Personal Computer System Software revenue\",\n        \"CALCULATION\": \"(csv.RCPT_SYSOFT_PERS_PCT*csv.RCPT_SYSOFT_PUB_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"511140\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \" csv.RCPT_SYSOFT_ENTR_DVALT\",\n        \"DESCRIPTION\": \"Enterprise or Network System Software revenue\",\n        \"CALCULATION\": \"(csv.RCPT_SYSOFT_ENTR_PCTT*csv.RCPT_SYSOFT_PUB_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"511140\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \" csv.RCPT_SYSOFT_MAIN_DVAL\",\n        \"DESCRIPTION\": \"Mainframe Computer System Software revenue\",\n        \"CALCULATION\": \"(csv.RCPT_SYSOFT_MAIN_PCT*csv.RCPT_SYSOFT_PUB_VAL/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"511140\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \" csv.RCPT_SYSOFT_OTH_DVAL\",\n        \"DESCRIPTION\": \"Other System Software revenue\",\n        \"CALCULATION\": \"(csv.RCPT_SYSOFT_OTH_PCT*csv.RCPT_SYSOFT_PUB_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"511140\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"csv.RCPT_APSOFT_PERS_DVAL\",\n        \"DESCRIPTION\": \"Personal Computer Application Software revenue\",\n        \"CALCULATION\": \"(csv.RCPT_APSOFT_PERS_PCT*csv.RCPT_APSOFT_PUB_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"511140\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"csv.RCPT_APSOFT_ENTR_DVAL\",\n        \"DESCRIPTION\": \"Enterprise or Network Application revenue\",\n        \"CALCULATION\": \"(csv.RCPT_APSOFT_ENTR_PCT*csv.RCPT_APSOFT_PUB_VAL/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"511140\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"csv.RCPT_APSOFT_MAIN_DVAL\",\n        \"DESCRIPTION\": \"Mainframe Computer Application Software revenue\",\n        \"CALCULATION\": \"(csv.RCPT_APSOFT_MAIN_PCT*csv.RCPT_APSOFT_PUB_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"511140\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"csv.RCPT_APSOFT_OTH_DVAL\",\n        \"DESCRIPTION\": \"Other Application Software revenue\",\n        \"CALCULATION\": \"(csv.RCPT_APSOFT_OTH_PCT*csv.RCPT_APSOFT_PUB_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511140'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_DIR_PRNT_DVAL\",\n        \"DESCRIPTION\": \"directory/dbase - Print\",\n        \"CALCULATION\": \"(csv.RCPT_DIR_PRNT_PCT*(csv.RCPT_DIR_PUB_VAL,csv.RCPT_ADV_SPACE_VAL))/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511140'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_DIR_ONLINE_DVAL\",\n        \"DESCRIPTION\": \"directory/dbase - Online\",\n        \"CALCULATION\": \"(csv.RCPT_DIR_ONLINE_PCT*(csv.RCPT_DIR_PUB_VAL,csv.RCPT_ADV_SPACE_VAL))/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511140'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_DIR_OTH_DVAL\",\n        \"DESCRIPTION\": \"directory/dbase - Other media\",\n        \"CALCULATION\": \"(csv.RCPT_DIR_OTH_PCT*(csv.RCPT_DIR_PUB_VAL,csv.RCPT_ADV_SPACE_VAL))/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511130'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_BOOK_PRNT_DVAL\",\n        \"DESCRIPTION\": \"print books revenue\",\n        \"CALCULATION\": \"(csv.RCPT_BOOK_PRNT_PCT*csv.RCPT_BOOK_PUB_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511130'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_BOOK_ONLINE_DVAL\",\n        \"DESCRIPTION\": \"online books revenue\",\n        \"CALCULATION\": \"(csv.RCPT_BOOK_ONLINE_PCT*csv.RCPT_BOOK_PUB_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511130'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_BOOK_OTH_DVAL\",\n        \"DESCRIPTION\": \"other media books revenue\",\n        \"CALCULATION\": \"(csv.RCPT_BOOK_OTH_PCT*csv.RCPT_BOOK_PUB_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_NEWS_PUB_DVAL\",\n        \"DESCRIPTION\": \"Newspaper Publishers revenue\",\n        \"CALCULATION\": \"csv.RCPT_NEWS_PUB_VAL + csv.RCPT_ADV_SPACE_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511120'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_PER_PUB_DVAL\",\n        \"DESCRIPTION\": \"Periodical Publisher revenue\",\n        \"CALCULATION\": \"csv.RCPT_PER_PUB_VAL + csv.RCPT_ADV_SPACE_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS5\": ['72111', '72112'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_TOT_HOTEL_OWN3RD_DVAL\",\n        \"DESCRIPTION\": \"CY Sum Of Firm's Rev & Managed Rev\",\n        \"CALCULATION\": \"csv.RCPT_TOT_VAL + csv.RCPT_TOT_HOTEL_OWN3RD_VAL\",\n        \"Temp or Perm\": \"T\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS5\": ['72111', '72112'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"EXPS_TOT_HOTEL_OWN3RD_DVAL\",\n        \"DESCRIPTION\": \"CY Sum of Hotel's expenses & Managed expenses\",\n        \"CALCULATION\": \"csv.EXPS_TOT_VAL + csv.EXPS_TOT_HOTEL_OWN3RD_VAL\",\n        \"Temp or Perm\": \"T\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS4\": ['622'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_PAT_OUT_DVAL\",\n        \"DESCRIPTION\": \"Outpatient Care Services\",\n        \"CALCULATION\": \"(csv.RCPT_PAT_OUT_PCT*(csv.RCPT_MEDICARE_VAL+ csv.RCPT_MEDICAID_VAL+ csv.RCPT_WORKCOMP_VAL+  csv.RCPT_OTH_GOVPROG_VAL+ csv.RCPT_HLTHCARE_PRVDRS_VAL+ csv.RCPT_PVTHLTH_INS_VAL+ csv.RCPT_PROPCSLTY_INS_VAL+ csv.RCPT_PAT_OUTPCKT_VAL+ csv.RCPT_PATCARE_OTH_VAL))/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS5\": ['72111', '72112'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_ECOMM_DVAL\",\n        \"DESCRIPTION\": \"Electronic Revenue\",\n        \"CALCULATION\": \"csv.RCPT_ECOMM_ES_VAL + csv.RCPT_ECOMM_HOTEL_OWN3RD_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['622'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_PAT_IN_DVAL\",\n        \"DESCRIPTION\": \" Inpatient Care Services\",\n        \"CALCULATION\": \"(csv.RCPT_PAT_IN_PCT * (csv.RCPT_MEDICARE_VAL + csv.RCPT_MEDICAID_VAL + csv.RCPT_WORKCOMP_VAL + csv.RCPT_OTH_GOVPROG_VAL + csv.RCPT_HLTHCARE_PRVDRS_VAL + csv.RCPT_PVTHLTH_INS_VAL + csv.RCPT_PROPCSLTY_INS_VAL + csv.RCPT_PAT_OUTPCKT_VAL + csv.RCPT_PATCARE_OTH_VAL)) / 100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS4\": ['6215'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_NONOP_DVAL\",\n        \"DESCRIPTION\": \"Non-Patient Care Revenue\",\n        \"CALCULATION\": \"csv.RCPT_NONOP_GIFTS_VAL + csv.RCPT_NONOP_INVST_VAL + csv.RCPT_NONPT_HCARE_PRVDRS_VAL + csv.RCPT_NONPT_OTH_VAL\",\n        \"Temp or Perm\": \"T\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['621', '622', '623'], \"_TXRCD00\": ['T'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_NONOP_GIFT_INVST_DVAL\",\n        \"DESCRIPTION\": \"subsidies, Contr., Gifts & Grants+Investment and property income\",\n        \"CALCULATION\": \"csv.RCPT_NONOP_GIFTS_VAL + csv.RCPT_NONOP_INVST_VAL\",\n        \"Temp or Perm\": \"T\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['621', '622', '623'], \"NAICS4!\": ['6215', '6219'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_NONTELEMED_DVAL\",\n        \"DESCRIPTION\": \"Non-Telemedicine\",\n        \"CALCULATION\": \"(csv.RCPT_TOT_VAL-csv.RCPT_TELEMED_VAL)\",\n        \"Temp or Perm\": \"T\",\n        \"Order\": 2,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": ['62'], \"NAICS3!\": ['624', '623', '6215'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_PATCARE1_DVAL\",\n        \"DESCRIPTION\": \"Patient Care Revenue\",\n        \"CALCULATION\": \"csv.RCPT_MEDICARE_VAL + csv.RCPT_MEDICAID_VAL + csv.RCPT_WORKCOMP_VAL + csv.RCPT_OTH_GOVPROG_VAL + csv.RCPT_HLTHCARE_PRVDRS_VAL + csv.RCPT_PVTHLTH_INS_VAL + csv.RCPT_PROPCSLTY_INS_VAL + csv.RCPT_PAT_OUTPCKT_VAL + csv.RCPT_PATCARE_OTH_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": [\"623\"] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_PATCARE2_DVAL\",\n        \"DESCRIPTION\": \"Patient Care Revenue\",\n        \"CALCULATION\": \"csv.RCPT_MEDICARE_VAL + csv.RCPT_MEDICAID_VAL + csv.RCPT_WORKCOMP_VAL + csv.RCPT_OTH_GOVPROG_VAL + csv.RCPT_PVTHLTH_INS_VAL + csv.RCPT_PROPCSLTY_INS_VAL + csv.RCPT_PAT_OUTPCKT_VAL + csv.RCPT_PATCARE_OTH_VAL + csv.RCPT_NEWPT_SSBNFTS_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS4\": [\"6215\"] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_PATCARE3_DVAL\",\n        \"DESCRIPTION\": \"Patient Care Revenue\",\n        \"CALCULATION\": \"csv.RCPT_MEDICARE_VAL + csv.RCPT_MEDICAID_VAL + csv.RCPT_WORKCOMP_VAL + csv.RCPT_OTH_GOVPROG_VAL + csv.RCPT_HLTHCARE_PRVDRS_VAL + csv.RCPT_PVTHLTH_INS_VAL + csv.RCPT_PROPCSLTY_INS_VAL + csv.RCPT_PAT_OUTPCKT_VAL + csv.RCPT_PATCARE_OTH_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"561330\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_BILL_PAY_DVAL\",\n        \"DESCRIPTION\": \"all other operating revenue\",\n        \"CALCULATION\": \"(csv.RCPT_BILL_OTHOP_PCT*csv.RCPT_GROSSBILL_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"561330\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_GROSSBILL_PAY_DVAL\",\n        \"DESCRIPTION\": \"Gross Billings x Payroll Services\",\n        \"CALCULATION\": \"(csv.RCPT_BILL_PAY_PCT*csv.RCPT_GROSSBILL_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"511140\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_SYSOFT_DVAL\",\n        \"DESCRIPTION\": \"system software\",\n        \"CALCULATION\": \"csv.RCPT_SYSOFT_PERS_DVAL + csv.RCPT_SYSOFT_ENTR_DVAL + csv.RCPT_SYSOFT_MAIN_DVAL + csv.RCPT_SYSOFT_OTH_DVAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 2,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"511140\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_APSOFT_DVAL\",\n        \"DESCRIPTION\": \"application software\",\n        \"CALCULATION\": \"csv.RCPT_APSOFT_PERS_DVAL + csv.RCPT_APSOFT_ENTR_DVAL + csv.RCPT_APSOFT_MAIN_DVAL + csv.RCPT_APSOFT_OTH_DVAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 2,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511140'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_DIR_PUB_DVAL\",\n        \"DESCRIPTION\": \"Database and Directory Publisher revenue\",\n        \"CALCULATION\": \"csv.RCPT_DIR_PUB_VAL + csv.RCPT_ADV_SPACE_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS2\": [\"42\", \"44\", \"45\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"PURCHASES_DPCT\",\n        \"DESCRIPTION\": \"purchases percent of sales\",\n        \"CALCULATION\": \"(csv.EXPS_PRCH_RESALE_VAL / csv.RCPT_TOT_VAL) * 100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS2\": [\"42\", \"44\", \"45\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"INVENTORY_DPCT\",\n        \"DESCRIPTION\": \"total inventory percent of sales\",\n        \"CALCULATION\": \"(csv.INV_PREADJ_LIFO_VAL/csv.RCPT_TOT_VAL) * 100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS2\": [\"42\", \"44\", \"45\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"EXP_DPCT\",\n        \"DESCRIPTION\": \"expenses percent of sales\",\n        \"CALCULATION\": \"(csv.EXPS_TOT_VAL/csv.RCPT_TOT_VAL) * 100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS2\": [\"42\", \"44\", \"45\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"ECOMM_DPCT\",\n        \"DESCRIPTION\": \"ecommerce percent of sales\",\n        \"CALCULATION\": \"(csv.RCPT_ECOMM_VAL / csv.RCPT_TOT_VAL) * 100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": [\"42\", \"44\", \"45\"] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"PROFIT_LOSS_DVAL\",\n        \"DESCRIPTION\": \"profit/loss amount\",\n        \"CALCULATION\": \"(csv.RCPT_TOT_VAL - csv.EXPS_PRCH_RESALE_VAL - csv.EXPS_TOT_VAL)\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": [\"42\", \"44\", \"45\"] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"REPORTED_WEEKS_DNUM\",\n        \"DESCRIPTION\": \"number of weeks reported for\",\n        \"CALCULATION\": \"(csv.YEAR_END_DATE - csv.YEAR_START_DATE)/7\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": [\"454110\"] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"MRCH_SALES_DVAL\",\n        \"DESCRIPTION\": \"sum of sales merchandise lines\",\n        \"CALCULATION\": \"csv.RCPT_BOOK_VAL + csv.RCPT_CLOTH_VAL + csv.RCPT_COMP_VAL + csv.RCPT_SOFT_VAL + csv.RCPT_DRUGS_VAL + csv.RCPT_ELAPPL_VAL + csv.RCPT_FDBRWN_VAL + csv.RCPT_FURNTR_VAL + csv.RCPT_JWLRY_VAL + csv.RCPT_AUDVID_VAL + csv.RCPT_OFCEQ_VAL + csv.RCPT_SPTGD_VAL + csv.RCPT_TOYS_VAL + csv.RCPT_OTHMRCH_VAL + csv.RCPT_SHPHDL_VAL + csv.RCPT_ADVERT_VAL + csv.RCPT_NONMRCH_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": [\"454110\"] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"MRCH_NONMERCH_SALES_DVAL\",\n        \"DESCRIPTION\": \"non-merchandise sales derived estimate\",\n        \"CALCULATION\": \"csv.RCPT_SHPHDL_VAL + csv.RCPT_ADVERT_VAL + csv.RCPT_NONMRCH_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": [\"454110\"] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"MRCH_ECOMMERCE_DVAL\",\n        \"DESCRIPTION\": \"sum of ecommerce merchadise lines\",\n        \"CALCULATION\": \"csv.RCPT_ECOMM_BOOK_VAL + csv.RCPT_ECOMM_CLOTH_VAL + csv.RCPT_ECOMM_COMP_VAL + csv.RCPT_ECOMM_SOFT_VAL + csv.RCPT_ECOMM_DRUGS_VAL + csv.RCPT_ECOMM_ELAPPL_VAL + csv.RCPT_ECOMM_FDBRWN_VAL + csv.RCPT_ECOMM_FURNTR_VAL + csv.RCPT_ECOMM_JWLRY_VAL + csv.RCPT_ECOMM_AUDVID_VAL + csv.RCPT_ECOMM_OFCEQ_VAL + csv.RCPT_ECOMM_SPTGD_VAL + csv.RCPT_ECOMM_TOYS_VAL + csv.RCPT_OTHMRCH_VAL + csv.RCPT_ECOMM_SHPHDL_VAL + csv.RCPT_ECOMM_ADVERT_VAL + csv.RCPT_ECOMM_NONMRCH_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": [\"454110\"] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"MRCH_NONMERCH_EC_DVAL\",\n        \"DESCRIPTION\": \"non-merchandise ecommerce derived estimate\",\n        \"CALCULATION\": \"csv.RCPT_ECOMM_SHPHDL_VAL + csv.RCPT_ECOMM_ADVERT_VAL + csv.RCPT_ECOMM_NONMRCH_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS2\":['42']},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"INV_FOREIGN_DPCT\",\n        \"DESCRIPTION\": \"foreign inventory as a percent of total inventory\",\n        \"CALCULATION\": \"(csv.INV_ENROUTE_VAL / csv.INV_PREADJ_LIFO_VAL) * 100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS5\":['72111','72112']},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_TOT_DVAL\",\n        \"DESCRIPTION\": \"Total Revenue\",\n        \"CALCULATION\": \"csv.RCPT_TOT_HOTEL_OWN_VAL + csv.RCPT_TOT_HOTEL_OWN3RD_VAL\"\n    }\n]\n\nfor (const json of items) {\n    const naicsStatus = json[\"NAICS/Tax status\"];\n    const unit = json[\"UNIT\"];\n    const derivedItem = json[\"DERIVED ITEM\"];\n    const calculation = json[\"CALCULATION\"];\n\n    if (\n        naicsStatus &&\n        unit === csv[\"UNIT\"]\n    ) {\n        if (naicsStatus == \"All\") {\n            try {\n                const derivedValue = eval(calculation);\n                csv[derivedItem] = derivedValue;\n                csv.Perm = json[\"Temp or Perm\"] || \"P\";\n                csv.Order = json[\"Order\"] || 1;\n                csv.Flag = json[\"Flag\"] || \"D\";\n            } catch (error) {\n                console.error(\"Missing necessary variables for calculation:\", error);\n            }\n        } else {\n            if ((naicsStatus.NAICS2 && naicsStatus.NAICS2.includes(csv[\"NAICS2\"]?.toString())) || (naicsStatus.NAICS3 && naicsStatus.NAICS3.includes(csv[\"NAICS3\"]?.toString())) || (naicsStatus.NAICS4 && naicsStatus.NAICS4.includes(csv[\"NAICS4\"]?.toString())) || (naicsStatus.NAICS5 && naicsStatus.NAICS5.includes(csv[\"NAICS5\"]?.toString())) || (naicsStatus.NAICS6 && naicsStatus.NAICS6.includes(csv[\"NAICS6\"]?.toString()))) {\n                if ((!naicsStatus[\"NAICS3!\"] && !naicsStatus[\"NAICS4!\"]) || (naicsStatus[\"NAICS3!\"] && !naicsStatus[\"NAICS3!\"].includes(csv[\"NAICS3\"].toString())) || (naicsStatus[\"NAICS4!\"] && !naicsStatus[\"NAICS4!\"].includes(csv[\"NAICS4\"].toString()))) {\n                    if (!naicsStatus[\"_TXRCD00\"] || (naicsStatus[\"_TXRCD00\"] && naicsStatus[\"_TXRCD00\"].includes(csv[\"_TXRCD00\"]))) {\n                        try {\n                            const derivedValue = eval(calculation);\n                            csv[derivedItem] = derivedValue;\n                            csv.Perm = json[\"Temp or Perm\"] || \"P\";\n                            csv.Order = json[\"Order\"] || 1;\n                            csv.Flag = json[\"Flag\"] || \"D\";\n                        } catch (error) {\n                            console.error(\"Missing necessary variables for calculation:\", error);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n// msg.payload.csv[0] = csv\n\n// msg.payload.rowsN = []\n\n// return msg;\n// msg.payload.csv[0].module = \"Derived Items\"\n\n// setTimeout(function () {\n//     node.status({ fill: \"gray\", shape: \"ring\", text: \"complete\" });\n//     node.send(msg);\n// }, 1000);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 160,
        "wires": [
            [
                "966186740def6a06"
            ]
        ]
    },
    {
        "id": "65577406809b25a9",
        "type": "status",
        "z": "ae0faa518ff234d5",
        "name": "",
        "scope": null,
        "x": 80,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "1983b2e5645df49c",
        "type": "function",
        "z": "473d6735cc46fccd",
        "name": "logical edits function",
        "func": "node.status({ fill: \"green\", shape: \"dot\", text: \"processing\" });\n\nconst items = [\n    {\n        \"VARIABLE\": \"TYPOP_CODE_STAT  RCPT_COMSN_GSV_VAL RCPT_OWN_VAL \\nRCPT_TOT_VAL\",\n        \"UNIT\": \"estab\",\n        \"NAICS\": \"NAICS3='425'\",\n        \"CONDITION \": \"TYPOP_CODE_STAT eq '4X' and RCPT_COMSN_GSV_VAL + RCPT_OWN_VAL ne RCPT_TOT_VAL\",\n        \"ACTION\": \"set review flag\"\n    },\n    {\n        \"VARIABLE\": \"TYPOP_CODE_STAT  RCPT_COMSN_GSV_VAL RCPT_COMSN_EARN_VAL RCPT_COMSN_AVG_RATE \",\n        \"UNIT\": \"estab\",\n        \"NAICS\": \"NAICS3='425'\",\n        \"CONDITION \": \"TYPOP_CODE_STAT eq '4X' and RCPT_COMSN_GSV_VAL not in (0,.) and RCPT_COMSN_EARN_VAL in (0,.) and RCPT_COMSN_AVG_RATE not in (0,.)\",\n        \"ACTION\": \"RCPT_COMSN_EARN_VAL = RCPT_COMSN_GSV_VAL * RCPT_COMSN_AVG_RATE\",\n        \" DESCRIPTION\": \"if they reported a gross selling value from goods gold on commission, and an average commission rate, but didn't provide the amount of commissions (or set to 0), use GSV * average commission rate to derive commission\"\n    },\n    {\n        \"VARIABLE\": \"TYPOP_CODE_STAT  RCPT_COMSN_GSV_VAL RCPT_COMSN_EARN_VAL RCPT_COMSN_AVG_RATE \",\n        \"UNIT\": \"estab\",\n        \"NAICS\": \"NAICS3='425'\",\n        \"CONDITION \": \"TYPOP_CODE_STAT eq '4X' and RCPT_COMSN_GSV_VAL in (0,.) and RCPT_COMSN_EARN_VAL not in (0,.) and RCPT_COMSN_AVG_RATE not in (0,.)\",\n        \"ACTION\": \"RCPT_COMSN_GSV_VAL = RCPT_COMSN_EARN_VAL \\/ RCPT_COMSN_AVG_RATE\",\n        \" DESCRIPTION\": \"if they reported commissions and an average commission rate but no GSV, use the commission and commission rate to calculate GSV\"\n    },\n    {\n        \"VARIABLE\": \"TYPOP_CODE_STAT\\nRCPT_OWN_VAL \\nRCPT_TOT_VAL RCPT_COMSN_GSV_VAL \\n RCPT_COMSN_EARN_VAL\",\n        \"UNIT\": \"estab\",\n        \"NAICS\": \"NAICS3='425'\",\n        \"CONDITION \": \"TYPOP_CODE_STAT = '4X' and RCPT_OWN_VAL eq 0 and RCPT_COMSN_GSV_VAL ne RCPT_TOT_VAL and RCPT_COMSN_GSV_VAL < RCPT_TOT_VAL and RCPT_TOT_VAL eq sum(RCPT_COMSN_GSV_VAL, RCPT_COMSN_EARN_VAL)\",\n        \"ACTION\": \"RCPT_TOT_VAL = RCPT_COMSN_GSV_VAL\",\n        \" DESCRIPTION\": \"if no sales on own account (i.e., all commission-based) and GSV does not equal total sales (which, by definition can't happen, because GSV + OWN = total sales and if OWN = 0, then GSV = SALES) and SALES = the sum of GSV + COMMISSION, set sales to GSV because commissions should not be included in total sales\"\n    },\n    {\n        \"VARIABLE\": \"TYPOP_CODE_STAT\\nRCPT_OWN_VAL \\nRCPT_TOT_VAL RCPT_COMSN_GSV_VAL \\n RCPT_COMSN_EARN_VAL\",\n        \"UNIT\": \"estab\",\n        \"NAICS\": \"NAICS3='425'\",\n        \"CONDITION \": \"TYPOP_CODE_STAT = '4X' and RCPT_OWN_VAL eq 0 and RCPT_COMSN_GSV_VAL ne RCPT_TOT_VAL and RCPT_COMSN_GSV_VAL > RCPT_TOT_VAL and RCPT_TOT_VAL eq RCPT_COMSN_EARN_VAL\",\n        \"ACTION\": \"RCPT_TOT_VAL = RCPT_COMSN_GSV_VAL\",\n        \" DESCRIPTION\": \"if they reported sales as commissions, set sales = GSV\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_ECOMM_VAL\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"42', '44', '45'\",\n        \"CONDITION \": \"RCPT_ECOMM_STAT eq 2 \",\n        \"ACTION\": \"RCPT_ECOMM_VAL = 0\",\n        \" DESCRIPTION\": \"if ecommerce status = 2 (no) then the value for e-commerce should be 0\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_ECOMM_VAL\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"42', '44', '45'\",\n        \"CONDITION \": \"RCPT_ECOMM_VAL gt 0\",\n        \"ACTION\": \"RCPT_ECOMM_STAT = 1\",\n        \" DESCRIPTION\": \"if there's a reliable value for ecommerce, then the e-commerce status variable should be 1\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_MOTR_HAZRD_STAT\\nRCPT_MOTR_HAZRD_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3= '484 '\",\n        \"CONDITION \": \"If  RCPT_MOTR_HAZRD_STAT =2 and RCPT_MOTR_HAZRD_PCT  = missing\",\n        \"ACTION\": \" then RCPT_MOTR_HAZRD_PCT =0.\",\n        \" DESCRIPTION\": \"IF the flag for hazardas materials is reported   and the NAICS is in 484 and the checkbox is a no and % - Hazardous Materials is equal to missing then set the % - Hazardous Materials to 0.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_MOTR_HAZRD_STAT\\nRCPT_MOTR_HAZRD_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3= '484 '\",\n        \"CONDITION \": \"If RCPT_MOTR_HAZRD_STAT = . and RCPT_MOTR_HAZRD_PCT  is >0 \",\n        \"ACTION\": \"then RCPT_MOTR_HAZRD_STAT  =1\",\n        \" DESCRIPTION\": \"IF the flag for hazardas materials is reported   and the NAICS is in 484 and the checkbox is a missing and % - Hazardous Materials is greater than zero then set the hazardous materials checkbox to yes.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_MOTR_HAZRD_STAT\\nRCPT_MOTR_HAZRD_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3= '484 '\",\n        \"CONDITION \": \"If  RCPT_MOTR_HAZRD_STAT = . or 1 and RCPT_MOTR_HAZRD_PCT  is =0 \",\n        \"ACTION\": \"then RCPT_MOTR_HAZRD_STAT=2\",\n        \" DESCRIPTION\": \"IF the flag for hazardas materials is reported  and the NAICS is in 484 and the checkbox is a missing or equal to yes  and % - Hazardous Materials is equal to zero then set the hazardous materials checkbox to no\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_MOTR_HAZRD_STAT\\nRCPT_MOTR_HAZRD_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3= '484 '\",\n        \"CONDITION \": \"If RCPT_MOTR_HAZRD_STAT is 2 and RCPT_MOTR_HAZRD_PCT  is >0 \",\n        \"ACTION\": \"then RCPT_MOTR_HAZRD_STAT= 1\",\n        \" DESCRIPTION\": \"IF the flag for hazardas materials is reported   and the NAICS is in 484 and the checkbox is a  equal to no and % - Hazardous Materials is greater than zero then set the hazardous materials checkbox to yes\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_BILL_PAY_PCT\\nRCPT_BILL_OTHOP_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS6=‘561330’ \",\n        \"CONDITION \": \"If  the sum of RCPT_BILL_PAY_PCT and RCPT_BILL_OTHOP_PCT =0 \",\n        \"ACTION\": \"then RCPT_BILL_PAY_PCT and\\nRCPT_BILL_OTHOP_PCT =.\",\n        \" DESCRIPTION\": \"If status is active and NAICS is 561330 and the sum of % of total gross billings x Payroll srvc and % - All other operating revenue equals zero then set them to missing\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_BUS_PCT\\nRCPT_LEISURE_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS6=‘561510’,’561599’,'561520'\",\n        \"CONDITION \": \"If the sum of RCPT_BUS_PCT and RCPT_LEISURE_PCT =0 \",\n        \"ACTION\": \"then RCPT_BUS_PCT and RCPT_LEISURE_PCT =.\",\n        \" DESCRIPTION\": \"If status is active and NAICS is in 561510 or 561599 and the sum of % - Percent of Revenue from Business and % - Percent of Revenue from Leisure equals zero then set them to missing\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_NEWS_PRNT_PCT\\nRCPT_NEWS_ONLINE_PCT\\nRCPT_NEWS_OTH_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS5='51111' \",\n        \"CONDITION \": \"If sum(RCPT_NEWS_PRNT_PCT,  RCPT_NEWS_ONLINE_PCT, and RCPT_NEWS_OTH_PCT) =0 \",\n        \"ACTION\": \"then RCPT_NEWS_PRNT_PCT,  RCPT_NEWS_ONLINE_PCT, and RCPT_NEWS_OTH_PCT = .\",\n        \" DESCRIPTION\": \"If the status is active and the NAICS is in '51111' and the sum of % Print subscriptions and sales,  % Internet subscriptions and sales and % Newspapers - Other media advertising equals zero, then set them to missing.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_ADV_CLASS_PCT\\nRCPT_ADV_OTH_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS5='51111' \",\n        \"CONDITION \": \"If the sum of RCPT_ADV_CLASS_PCT and RCPT_ADV_OTH_PCT =0 \",\n        \"ACTION\": \"then RCPT_ADV_CLASS_PCT and RCPT_ADV_OTH_PCT =.\",\n        \" DESCRIPTION\": \"If the status is active and the NAICS is in '51111' and the sum of % Print subscriptions and % Advertising Rev - Other Advertising equals zero, then set them to missing.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_PER_PRNT_PCT\\nRCPT_PER_ONLINE_PCT\\nRCPT_PER_OTH_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS5='51112' \",\n        \"CONDITION \": \"If sum(RCPT_PER_PRNT_PCT,  RCPT_PER_ONLINE_PCT, and RCPT_PER_OTH_PCT) =0 \",\n        \"ACTION\": \"then RCPT_NEWS_PRNT_PCT,  RCPT_NEWS_ONLINE_PCT, and RCPT_NEWS_OTH_PCT =.\",\n        \" DESCRIPTION\": \"If the status is active and the NAICS is in '51112' and the sum of % Print subscriptions and sales, % Internet subscriptions and sales, and % Other media advertising is equal to zero then set them to missing.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_BOOK_PRNT_PCT\\nRCPT_BOOK_ONLINE_PCT\\nRCPT_BOOK_OTH_PCT\\n\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS5='51113' \",\n        \"CONDITION \": \"If sum (RCPT_BOOK_PRNT_PCT,  RCPT_BOOK_ONLINE_PCT, and RCPT_BOOK_OTH_PCT) =0\",\n        \"ACTION\": \"then RCPT_BOOK_PRNT_PCT,  RCPT_BOOK_ONLINE_PCT, and RCPT_BOOK_OTH_PCT =.\",\n        \" DESCRIPTION\": \"If the status is active and the NAICS is in '51113' and the sum of % Books - Print,  % Books - Internet, and % Books - other media is equal to zero then set them to missing.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_DIR_PRNT_PCT\\nRCPT_DIR_ONLINE_PCT\\nRCPT_DIR_OTH_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS5='51114' \",\n        \"CONDITION \": \"If sum(RCPT_DIR_PRNT_PCT,  RCPT_DIR_ONLINE_PCT, and RCPT_DIR_OTH_PCT) =0 \",\n        \"ACTION\": \"then RCPT_DIR_PRNT_PCT,  RCPT_DIR_ONLINE_PCT, and RCPT_DIR_OTH_PCT =.\",\n        \" DESCRIPTION\": \"If the status is active and the NAICS is in '51114' and the sum of % Print subscriptions and sales, % Internet subscriptions and sales, and % Other media advertising is equal to zero then set them to missing.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_SYSOFT_PERS_PCT\\nRCPT_SYSOFT_ENTR_PCT\\nRCPT_SYSOFT_MAIN_PCT\\nRCPT_SYSOFT_OTH_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS5='51121' \",\n        \"CONDITION \": \"If sum(RCPT_SYSOFT_PERS_PCT, RCPT_SYSOFT_ENTR_PCT, RCPT_SYSOFT_MAIN_PCT, and RCPT_SYSOFT_OTH_PCT)=0 \",\n        \"ACTION\": \"then RCPT_SYSOFT_PERS_PCT, RCPT_SYSOFT_ENTR_PCT, RCPT_SYSOFT_MAIN_PCT, and RCPT_SYSOFT_OTH_PCT =.\",\n        \" DESCRIPTION\": \"If the status is active and the NAICS is in '51121' and the sum of % rev - Personal computer systems rev, % Enterprise-systems software revenue, % Mainframe computer-Systems software, and % of other systems software revenue is equal to zero then set them to missing.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_APSOFT_PERS_PCT\\nRCPT_APSOFT_ENTR_PCT\\nRCPT_APSOFT_MAIN_PCT\\nRCPT_APSOFT_OTH_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS5='51121' \",\n        \"CONDITION \": \"If the sum of RCPT_APSOFT_PERS_PCT, RCPT_APSOFT_ENTR_PCT, RCPT_APSOFT_MAIN_PCT, and RCPT_APSOFT_OTH_PCT =0 \",\n        \"ACTION\": \"then  RCPT_APSOFT_PERS_PCT, RCPT_APSOFT_ENTR_PCT, RCPT_APSOFT_MAIN_PCT, and RCPT_APSOFT_OTH_PCT =.\",\n        \" DESCRIPTION\": \"If the status is active and the NAICS is in '51121' and the sum of % rev - Personal computer systems rev, % Enterprise-systems software revenue, % Mainframe computer-Systems software, and % of other systems software revenue is equal to zero then set them to missing.\"\n    },\n    {\n        \"VARIABLE\": \"INV_STAT\\nINV_CY_GOODS_TOT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='511','512'\",\n        \"CONDITION \": \"If and INV_STAT =2 and INV_CY_GOODS_TOT_DVAL = .\",\n        \"ACTION\": \"then INV_CY_GOODS_TOT_DVAL =0\",\n        \" DESCRIPTION\": \"If NAICS in 511 or 512 and the flag for Total inventories is reported    and the inventory checkbox is equal to no and the total inventories is missing then set the inventories equal to zero. \"\n    },\n    {\n        \"VARIABLE\": \"INV_STAT\\nINV_CY_GOODS_TOT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='511','512'\",\n        \"CONDITION \": \"If Substr(RECORD_NAICS_NUM,1,3) in ('511','512')  and INV_STAT =. and INV_CY_GOODS_TOT is >0 \",\n        \"ACTION\": \"then INV_STAT =1\",\n        \" DESCRIPTION\": \"If NAICS in 511 or 512 and the flag for Total inventories is reported   and the inventory checkbox is missing and the total inventories is greater than zero, then set the inventories checkbox to yes. \"\n    },\n    {\n        \"VARIABLE\": \"INV_STAT\\nINV_CY_GOODS_TOT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='511','512'\",\n        \"CONDITION \": \"If Substr(RECORD_NAICS_NUM,1,3) in ('511','512') and INV_STAT = . or = 1  and INV_CY_GOODS_TOT is =0 \",\n        \"ACTION\": \"then INV_STAT = 2\",\n        \" DESCRIPTION\": \"If NAICS in 511 or 512 and the flag for Total inventories is reported   the inventory checkbox is missing or equal to yes and the total inventories is equal to zero, then set the inventories checkbox to no.\"\n    },\n    {\n        \"VARIABLE\": \"INV_STAT\\nINV_CY_GOODS_TOT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='511','512'\",\n        \"CONDITION \": \"If Substr(RECORD_NAICS_NUM,1,3) in ('511','512')  and INV_STAT = 2  and INV_CY_GOODS_TOT is > 0 \",\n        \"ACTION\": \"then INV_STAT =1\",\n        \" DESCRIPTION\": \"If NAICS in 511 or 512 and the flag for Total inventories is is reported   , and the inventory checkbox is equal to no and the total inventories is freater than zero, then set the inventories checkbox to yes.\"\n    },\n    {\n        \"VARIABLE\": \"EXPS_EHR_STAT\\nEXPS_EHR_VAL\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS2='62' and NAICS3 \\n<> ('624') \",\n        \"CONDITION \": \"If EXPS_EHR_VAL ne . and EXPS_EHR_STAT =( . or 2) and EXPS_EHR_VAL is >0 \",\n        \"ACTION\": \"then EXPS_EHR_STAT= 1\",\n        \" DESCRIPTION\": \"If the NAICS is in 62, but no in 624, and the flag for Electronic health record expenses is equal is reported   and the electronic health records checkbox is equal to no and the Electronic health records expenses is greater than zero, then set the electronic health records checkbox to yes.\"\n    },\n    {\n        \"VARIABLE\": \"EXPS_EHR_STAT \\nEXPS_EHR_VAL\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS2='62' and NAICS3 \\n<> ('624') \",\n        \"CONDITION \": \"If EXPS_EHR_VAL ne . and EXPS_EHR_STAT = (. or 1) and EXPS_EHR_VAL is =0\",\n        \"ACTION\": \"then   EXPS_EHR_STAT = 2\",\n        \" DESCRIPTION\": \"If the NAICS is in 62, but no in 624, and the flag for Electronic health record expenses is reported   and the electronic health records checkbox is equal to yes  and the Electronic health records expenses is equal to zero, then set the electronic health records checkbox to no.\"\n    },\n    {\n        \"VARIABLE\": \"EXPS_EHR_STAT \\nEXPS_EHR_VAL\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS2='62' and NAICS3 \\n<> '624'\",\n        \"CONDITION \": \"If EXPS_EHR_STAT  ne . and EXPS_EHR_STAT =  2  and EXPS_EHR_VAL is =.\",\n        \"ACTION\": \"then EXPS_EHR_VAL is = 0\",\n        \" DESCRIPTION\": \"If the NAICS is in 62, but no in 624, and the flag for Electronic health record expenses is reported   and the electronic health records checkbox is equal to no  and the Electronic health records expenses is missing, then set the electronic health records to zero.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_ECOMM_ES_VAL\\n RCPT_ECOMM_WEB_STAT  RCPT_ECOMM_THRD_STAT  RCPT_ECOMM_OTH_STAT  \",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS2='22','48','49,'51','52','53','54','55','56,'61','62','71','72,'81'\",\n        \"CONDITION \": \"If RCPT_ECOMM_ES_VAL ne . and RCPT_ECOMM_WEB_STAT  = (. or 1) and RCPT_ECOMM_THRD_STAT =( . or 1) and RCPT_ECOMM_OTH_STAT = (. or 1 )and  RCPT_ECOMM_ES_VAL =0 \",\n        \"ACTION\": \"then RCPT_ECOMM_WEB_STAT  = 2 RCPT_ECOMM_THRD_STAT = 2 RCPT_ECOMM_OTH_STAT  = 2\",\n        \" DESCRIPTION\": \"If the e-commerce flag is reported   or the e-commerce percent flag is reported   and Electronic revenue- company website is missing or yes,  Electronic revenue- third party website is missing or yes, Electronic revenue- electronic system, and e-commerce is zero and the e-commerce percent equals zero then set - company website is missing or yes,  Electronic revenue- third party website is missing or yes, Electronic revenue- electronic system to no.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_ECOMM_ES_VAL\\n RCPT_ECOMM_WEB_STAT  RCPT_ECOMM_THRD_STAT  RCPT_ECOMM_OTH_STAT  \",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS2='22','48','49,'51','52','53','54','55','56,'61','62','71','72,'81'\",\n        \"CONDITION \": \"If RCPT_ECOMM_WEB_STAT = 2, RCPT_ECOMM_THRD_STAT  = 2, and RCPT_ECOMM_OTH_STAT  = 2 and RCPT_ECOMM_ES_VAL = . \",\n        \"ACTION\": \"then RCPT_ECOMM_ES_VAL =0.\",\n        \" DESCRIPTION\": \"If the Electronic revenue- company website flag is reported   and the Electronic revenue- third party website is reported   , Electronic revenue- electronic system, and is reported   and Electronic revenue- company website,  Electronic revenue- third party website, Electronic revenue- electronic system all are set to no and e-commerce is missing and ecommerce percent is missing or zero then set e-commerce to zero.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_ECOMM_ES_VAL\\n RCPT_ECOMM_WEB_STAT  RCPT_ECOMM_THRD_STAT  RCPT_ECOMM_OTH_STAT  \",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS2='22','48','49,'51','52','53','54','55','56,'61','62','71','72,'81'\",\n        \"CONDITION \": \"If RCPT_ECOMM_ES_VAL = . and RCPT_ECOMM_WEB_STAT  = . and RCPT_ECOMM_THRD_STAT = . and RCPT_ECOMM_OTH_STAT = . and  RCPT_ECOMM_ES_VAL  is >0 \",\n        \"ACTION\": \"then RCPT_ECOMM_WEB_STAT  =1\",\n        \" DESCRIPTION\": \"If e-commerce flag is reported   or e-commerce percent is reported   and Electronic revenue- company website,  Electronic revenue- third party website, Electronic revenue- electronic system all are missing and e-commerce is greater than zero or percent e-commerce is greater than zero then set Electronic revenue- company website to yes. \"\n    },\n    {\n        \"VARIABLE\": \"RCPT_ECOMM_ES_VAL\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS2='22','48','49,'51','52','53','54','55','56,'61','62','71','72,'81'\",\n        \"CONDITION \": \"If RCPT_ECOMM_ES_VAL ne . and RCPT_ECOMM_WEB_STAT  is 2 and RCPT_ECOMM_THRD_STAT is 2, and RCPT_ECOMM_OTH_STAT is 2 and  RCPT_ECOMM_ES_VAL  is >0 \",\n        \"ACTION\": \"then RCPT_ECOMM_WEB_STAT  =1\",\n        \" DESCRIPTION\": \"If e-commerce flag  is reported   or e-commerce percent is reported   and Electronic revenue- company website,  Electronic revenue- third party website,  and Electronic revenue- electronic system all are no  and e-commerce is greater than zero or percent e-commerce is greater than zero then set Electronic revenue- company website to yes. \"\n    },\n    {\n        \"VARIABLE\": \"EXPS_TOT_VAL\",\n        \"UNIT\": \"KAU\",\n        \"CONDITION \": \"If _qss00 in ('Y') and E190000 = . AND EQEXPD00 = 0 AND EQEXP00 > 0\",\n        \"ACTION\": \" then E190000 = eqexp00\",\n        \" DESCRIPTION\": \"If Total operating expenses is missing and QSS number of quarters imputed is equal to zero, and qss espense is greater than zero, then set total operating expense to qss expense\"\n    },\n    {\n        \"VARIABLE\": \"TAX_EXEMPT_STAT\",\n        \"UNIT\": \"KAU\",\n        \"CONDITION \": \"If substr(RECORD_NAICS_NUM,1,5) = '51912' and TAX_EXEMPT_STAT = 1\",\n        \"ACTION\": \"then NONPROFT_STAT=1\",\n        \" DESCRIPTION\": \"If NAICS in 51912 and tax recode is equal to exempt, then set not for profit basses to 1.\"\n    },\n    {\n        \"VARIABLE\": \"CPT_CUST_RES_PCT \\nCPT_CUST_NORES_PCT \",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS2='22'\",\n        \"CONDITION \": \"If sum(CPT_CUST_RES_PCT,CPT_CUST_NORES_PCT) = 0\",\n        \"ACTION\": \"then CPT_CUST_RES_PCT = . CPT_CUST_NORES_PCT = .\",\n        \" DESCRIPTION\": \"If NAICS in sector 22 and is active, and the sum of residential customers and non-residential customers is zero then set residential customers and non-residential customers to missing\"\n    },\n    {\n        \"VARIABLE\": \"CAPEX_OTH_NEW_VAL                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       CAPEX_OTH_USED_VAL                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 CAPEX_OTH_TOT\",\n        \"UNIT\": \"industry\",\n        \"CONDITION \": \"Value reported in other\",\n        \"ACTION\": \"set referral flag for analyst review\",\n        \" DESCRIPTION\": \"analyst reclassify value in other to structures or equipment\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_MOTR_AGR_PCT  RCPT_MOTR_GRAIN_PCT  RCPT_MOTR_STONE_PCT RCPT_MOTR_FUEL_PCT  RCPT_MOTR_PHARM_PCT  RCPT_MOTR_WOOD_PCT  RCPT_MOTR_METAL_PCT  RCPT_MOTR_ELECT_PCT  RCPT_MOTR_USEDGD_PCT  RCPT_MOTR_NEWFRN_PCT  RCPT_MOTR_OTH_PCT \",\n        \"UNIT\": \"industry\",\n        \"NAICS\": \"NAICS3='484'\",\n        \"CONDITION \": \"If Sum(RCPT_MOTR_AGR_PCT,RCPT_MOTR_GRAIN_PCT,RCPT_MOTR_STONE_PCT,RCPT_MOTR_FUEL_PCT,RCPT_MOTR_PHARM_PCT,RCPT_MOTR_WOOD_PCT,RCPT_MOTR_METAL_PCT,RCPT_MOTR_ELECT_PCT, RCPT_MOTR_USEDGD_PCT,RCPT_MOTR_NEWFRN_PCT,RCPT_MOTR_OTH_PCT)=0\",\n        \"ACTION\": \"then RCPT_MOTR_AGR_PCT = .; RCPT_MOTR_GRAIN_PCT = .; RCPT_MOTR_STONE_PCT = .; RCPT_MOTR_FUEL_PCT = .; RCPT_MOTR_PHARM_PCT = .; RCPT_MOTR_WOOD_PCT = .; RCPT_MOTR_METAL_PCT = .; RCPT_MOTR_ELECT_PCT = .; RCPT_MOTR_USEDGD_PCT = .; RCPT_MOTR_NEWFRN_PCT = .; RCPT_MOTR_OTH_PCT = .;\",\n        \" DESCRIPTION\": \"If the NAICS is in 484 and active, and the sum of % - Agricultural Products, % - Grains, Alcohol, Tobacco Products, % - Stone, Nonmetallic minerals, % - Coal and Petroleum Products, % - Coal and Petroleum Products, % - Pharmaceutical and chemical products, % - Wood Products, Textiles, Leather, % - Electronic & Precision Instruments,% - Base Metal and Machinery % - Used household and office goods, % - New Furniture & Misc. Prods is zero, then set all to missing\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_CUST_BUS_PCT RCPT_CUST_IND_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS6=('517311','517312','517911', 519130')\",\n        \"CONDITION \": \"If sum(RCPT_CUST_BUS_PCT,RCPT_CUST_IND_PCT)=0\",\n        \"ACTION\": \"then RCPT_CUST_BUS_PCT=.; RCPT_CUST_IND_PCT=.;\",\n        \" DESCRIPTION\": \"If the status is active and the NAICS is in  517110, 517210, 517911, or 519130 and the sum of % Household revenue and % of revenue by Government & Businesses equal zero then set them to missing.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_CUST_LOCTEL_BUS_PCT RCPT_CUST_LOCTEL_IND_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS6='517311' \",\n        \"CONDITION \": \"If sum(RCPT_CUST_LOCTEL_BUS_PCT,RCPT_CUST_LOCTEL_IND_PCT)=0\",\n        \"ACTION\": \"then RCPT_CUST_LOCTEL_BUS_PCT=.; RCPT_CUST_LOCTEL_IND_PCT=.;\",\n        \" DESCRIPTION\": \"If the status is active and the NIACS is in 51711 and the sum of % Household - local telephony and Fixed local Telephone - Gov & Business is equal to zero set them to mising.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_CUST_LNGTEL_BUS_PCT RCPT_CUST_LNGTEL_IND_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS6='517311' \",\n        \"CONDITION \": \"If sum(RCPT_CUST_LNGTEL_BUS_PCT, RCPT_CUST_LNGTEL_IND_PCT)=0\",\n        \"ACTION\": \"then RCPT_CUST_LNGTEL_BUS_PCT=.; RCPT_CUST_LNGTEL_IND_PCT=.;\",\n        \" DESCRIPTION\": \"If the status is active and the NIACS is in 51711 and the sum of  % Fixed Long dist - Gov & Business and % Household-long distance telephony is equal to zero set them to mising.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_CUST_SUBLIN_BUS_PCT RCPT_CUST_SUBLIN_IND_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS6='517311' \",\n        \"CONDITION \": \"If sum(RCPT_CUST_SUBLIN_BUS_PCT, RCPT_CUST_SUBLIN_IND_PCT)=0\",\n        \"ACTION\": \"then RCPT_CUST_SUBLIN_BUS_PCT=.; RCPT_CUST_SUBLIN_IND_PCT=.;\",\n        \" DESCRIPTION\": \"If the status is active and the NIACS is in 51711 and the sum of  % Subscriber line charges - Household and % Subscriber Line - Gov & Business is equal to zero set them to mising.\"\n    },\n    {\n        \"VARIABLE\": \"INV_STAT\\nTRUCKTRAC_NUM_TOT_DVAL TRAILER_NUM_TOT_DVAL\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='484'\",\n        \"CONDITION \": \"If INV_STAT = . and (TRUCK_NUM_TOT_DVAL > 0 or TRUCKTRAC_NUM_TOT_DVAL > 0 or TRAILER_NUM_TOT_DVAL > 0)\",\n        \"ACTION\": \"then INV_STAT = 1;\",\n        \" DESCRIPTION\": \"If the flag for total truck inventory, total truck-tractor inventory, or total tralers inventory is reported  (R,A,E,or O) and the NAICS is in 484, and the inventory checkbox is missing and the total truck inventory, total truck-tractor inventory, or total tralers inventory is greater than zero, then set the inventory checkbox to yes. \"\n    },\n    {\n        \"VARIABLE\": \"INV_STAT\\nTRUCKTRAC_NUM_TOT_DVAL TRAILER_NUM_TOT_DVAL\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='484'\",\n        \"CONDITION \": \"If INV_STAT in (.,1) and TRUCK_NUM_TOT_DVAL = 0 and TRUCKTRAC_NUM_TOT_DVAL = 0 and TRAILER_NUM_TOT_DVAL = 0\",\n        \"ACTION\": \"then INV_STAT = 2;\",\n        \" DESCRIPTION\": \"If the flag for total truck inventory, total truck-tractor inventory, or total tralers inventory is reported  (R,A,E,or O)and the NAICS is in 484, and the inventory checkbox is equal to yes and the total truck inventory, total truck-tractor inventory, or total tralers inventory is equal to zero, then set the inventory checkbox to no.\"\n    },\n    {\n        \"VARIABLE\": \"INV_STAT\\nTRUCKTRAC_NUM_TOT_DVAL TRAILER_NUM_TOT_DVAL\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='484'\",\n        \"CONDITION \": \"If INV_STAT = 2 and (TRUCK_NUM_TOT_DVAL > 0 or TRUCKTRAC_NUM_TOT_DVAL > 0 or TRAILER_NUM_TOT_DVAL > 0)\",\n        \"ACTION\": \"then INV_STAT = 1;\",\n        \" DESCRIPTION\": \"If the flag for total truck inventory, total truck-tractor inventory, or total tralers inventory isreported (R,A,E,or O)and the NAICS is in 484, and the inventory checkbox is equal to no and the total truck inventory, total truck-tractor inventory, or total tralers inventory is greater than zero, then set the inventory checkbox to yes. \"\n    },\n    {\n        \"VARIABLE\": \"HOTEL_OWN3RD_STAT RCPT_TOT_HOTEL_OWN3RD_VAL  RCPT_ECOMM_HOTEL_OWN3RD_VAL\\nEXPS_TOT_HOTEL_OWN3RD_VAL \",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS5='72111','72112'\",\n        \"CONDITION \": \"If EXPS_TOT_HOTEL_OWN3RD_VAL <>2 and RCPT_TOT_HOTEL_OWN3RD_VAL=0 or RCPT_ECOMM_HOTEL_OWN3RD_VA=0  or EXPS_TOT_HOTEL_OWN3RD_VAL is >0\",\n        \"ACTION\": \"then EXPS_TOT_HOTEL_OWN3RD_VAL =2\"\n    },\n    {\n        \"VARIABLE\": \"HOTEL_OWN3RD_STAT RCPT_TOT_HOTEL_OWN3RD_VAL  RCPT_ECOMM_HOTEL_OWN3RD_VAL\\nEXPS_TOT_HOTEL_OWN3RD_VAL \",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS5='72111','72112'\",\n        \"CONDITION \": \"If EXPS_TOT_HOTEL_OWN3RD_VAL <>1 and RCPT_TOT_HOTEL_OWN3RD_VAL > 0  or RCPT_ECOMM_HOTEL_OWN3RD_VAL is > 0  or EXPS_TOT_HOTEL_OWN3RD_VAL is >0 \",\n        \"ACTION\": \"EXPS_TOT_HOTEL_OWN3RD_VAL=2\"\n    },\n    {\n        \"VARIABLE\": \"HOTEL_OWN3RD_STAT RCPT_TOT_HOTEL_OWN3RD_VAL  RCPT_ECOMM_HOTEL_OWN3RD_VAL\\nEXPS_TOT_HOTEL_OWN3RD_VAL \",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS5='72111','72112'\",\n        \"CONDITION \": \"If (HOTEL_OWN3RD_STAT = 2) AND (RCPT_TOT_HOTEL_OWN3RD_VAL = . AND  RCPT_ECOMM_HOTEL_OWN3RD_VAL = . AND EXPS_TOT_HOTEL_OWN3RD_VAL = .)\",\n        \"ACTION\": \"then RCPT_TOT_HOTEL_OWN3RD_VAL = 0; RCPT_ECOMM_HOTEL_OWN3RD_VAL = 0; EXPS_TOT_HOTEL_OWN3RD_VAL = 0;\",\n        \" DESCRIPTION\": \"If the NAICS is in 72111 or 72112 and the hotel management checkbox is set to no and hotel revenue of hotels managed, hotel e-commerce from hotels managed, and operating expense from hotels managed are all missing then set them all to zero. \"\n    },\n    {\n        \"VARIABLE\": \"RCPT_TELEMED_STAT RCPT_TELEMED_VAL  \",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='621','622','623' AND NAICS4 <> ‘6215’,’6219’\",\n        \"CONDITION \": \"If RCPT_TELEMED_STAT = . AND (RCPT_TELEMED_VAL > 0 \",\n        \"ACTION\": \"then RCPT_TELEMED_STAT = 1;\",\n        \" DESCRIPTION\": \"If the flag for Hospitals: Of 2020 total revenues reported, what was the dollar amount from telemedicine is reported (R,A,E,O)  or the flag for Hospitals: Of the total revenues reported, what was the percentage that was from telemedicine is reported (R,A,E,O)  and Hospitals: Did this receive revenues from telemedicine services in 2020 is missing and  total revenues reported, what was the dollar amount from telemedicine is greater than zero or Hospitals: Of the total revenues reported, what was the percentage that was from telemedicine is greater than zero then set Hospitals: Did this receive revenues from telemedicine services in 2020  to yes. \"\n    },\n    {\n        \"VARIABLE\": \"RCPT_TELEMED_STAT RCPT_TELEMED_VAL  \",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='621','622','623' AND NAICS4 <> ‘6215’,’6219’\",\n        \"CONDITION \": \"RCPT_TELEMED_STAT = (.,1) AND (RCPT_TELEMED_VAL = 0)\",\n        \"ACTION\": \"then RCPT_TELEMED_STAT = 2;\",\n        \" DESCRIPTION\": \"If the flag for Hospitals: Of 2020 total revenues reported, what was the dollar amount from telemedicine is reported (R,A,E,O)  or the flag for Hospitals: Of the total revenues reported, what was the percentage that was from telemedicine is reported (R,A,E,O)  and Hospitals: Did this receive revenues from telemedicine services in 2020 is missing or set to yes and  total revenues reported, what was the dollar amount from telemedicine is zero or Hospitals: Of the total revenues reported, what was the percentage that was from telemedicine is zero then set Hospitals: Did this receive revenues from telemedicine services in 2020  to no \"\n    },\n    {\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS6='721110','721120'\",\n        \"ACTION\": \"then RCPT_ECOMM_ES_TOT_VAL=SUM(RCPT_TOT_VAL,RCPT_TOT_HOTEL_OWN3RD_VAL)\"\n    },\n    {\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS6='561330' \",\n        \"ACTION\": \"then RCPTOT=RCPT_GROSSBILL_VAL\"\n    },\n    {\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS6='721110','721120'\",\n        \"ACTION\": \"then RCPTOT=RCP_TOT_VAL_SUM+RCPT_TOT_HOTEL_OWN3RD_VAL\"\n    },\n    {\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='621','622','623'\",\n        \"CONDITION \": \"and _TXRCD00 <> 'E'\",\n        \"ACTION\": \"then RCPT_NONOP_GIFTS_VAL=0\"\n    },\n    {\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='621','622','623'\",\n        \"CONDITION \": \"and _TXRCD00 <> 'E'\",\n        \"ACTION\": \"then RCPT_NONOP_INVST_VAL=0\"\n    }\n]\n\nlet csv = msg.payload.csv[0]\n\nfor (let i = 0; i < items.length; i++) {\n    const item = items[i];\n\n    if (item[\"NAICS\"]) {\n        if (item[\"UNIT\"] == csv.UNIT) {\n            if (item.CONDITION) {\n                csv.ACTION = item.ACTION\n            }\n        }\n    }\n}\n\nmsg.payload.csv[0].module = \"Logical Edits\"\n\nsetTimeout(function () {\n    node.status({ fill: \"gray\", shape: \"ring\", text: \"complete\" });\n    node.send(msg);\n}, 1000);\n\n// msg.payload.csv[0].RCPT_NONOP_GIFTS_VAL = 0\n\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 180,
        "wires": [
            [
                "1103b63fcb6f4c99"
            ]
        ]
    },
    {
        "id": "1103b63fcb6f4c99",
        "type": "debug",
        "z": "473d6735cc46fccd",
        "name": "Logical Edit debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 80,
        "wires": []
    },
    {
        "id": "6ada43c172923c7a",
        "type": "status",
        "z": "473d6735cc46fccd",
        "name": "",
        "scope": null,
        "x": 80,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "b434c43de5c1d938",
        "type": "switch",
        "z": "fd9469a0efbb8a77",
        "name": "Failure Present?",
        "property": "payload.csv[0].failure",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 200,
        "y": 220,
        "wires": [
            [
                "d66fac8c4c3bb78d"
            ],
            [
                "9a55ae0518d49324"
            ]
        ]
    },
    {
        "id": "a050c1e9c09bb79b",
        "type": "debug",
        "z": "fd9469a0efbb8a77",
        "name": "Go To: Company Additivity Check",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 80,
        "wires": []
    },
    {
        "id": "d66fac8c4c3bb78d",
        "type": "function",
        "z": "fd9469a0efbb8a77",
        "name": "Failure is not present",
        "func": "msg.payload.csv[0].action = \"Go To: Company Additivity Check\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 80,
        "wires": [
            [
                "a050c1e9c09bb79b",
                "e2d5eecae0459e01"
            ]
        ]
    },
    {
        "id": "9a55ae0518d49324",
        "type": "switch",
        "z": "fd9469a0efbb8a77",
        "name": "SUM(DET) = 0 || SUM(DET) > 0",
        "property": "payload.csv[0][\"SUM(DET)\"]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 400,
        "wires": [
            [
                "9b1962c64c2c07e2"
            ],
            [
                "4cc6035382f3ea7a"
            ]
        ]
    },
    {
        "id": "9b1962c64c2c07e2",
        "type": "switch",
        "z": "fd9469a0efbb8a77",
        "name": "SUM(DET)=0 && [TOT = 0 || TOT >0]",
        "property": "payload.csv[0][\"TOT\"]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 320,
        "wires": [
            [
                "6053781493dfb0b1"
            ],
            [
                "6317702816aa4ba2"
            ]
        ]
    },
    {
        "id": "4cc6035382f3ea7a",
        "type": "switch",
        "z": "fd9469a0efbb8a77",
        "name": "SUM(DET)=0 && [TOT = 0 || TOT >0]",
        "property": "payload.csv[0][\"TOT\"]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 480,
        "wires": [
            [
                "c2fe26e13a6e3760"
            ],
            [
                "2d18e26adfa1b919"
            ]
        ]
    },
    {
        "id": "c2fe26e13a6e3760",
        "type": "function",
        "z": "fd9469a0efbb8a77",
        "name": "SUM(DET)>0 and TOT=0",
        "func": "msg.payload.csv[0][\"TOT\"] = msg.payload.csv[0][\"SUM(DET)\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 460,
        "wires": [
            [
                "460a791591a2945d",
                "e2d5eecae0459e01"
            ]
        ]
    },
    {
        "id": "6317702816aa4ba2",
        "type": "function",
        "z": "fd9469a0efbb8a77",
        "name": "SUM(DET)=0 and TOT>0",
        "func": "msg.payload.csv[0].action = \"Proate data based on X(DET) = TOT\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 340,
        "wires": [
            [
                "29bfadfdb81eb75c",
                "e2d5eecae0459e01"
            ]
        ]
    },
    {
        "id": "6053781493dfb0b1",
        "type": "function",
        "z": "fd9469a0efbb8a77",
        "name": "SUM(DET)=0 and TOT=0",
        "func": "msg.payload.csv[0].action = \"Impute?\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 300,
        "wires": [
            [
                "398160dcf99fe49a",
                "e2d5eecae0459e01"
            ]
        ]
    },
    {
        "id": "2d18e26adfa1b919",
        "type": "function",
        "z": "fd9469a0efbb8a77",
        "name": "SUM(DET)>0 and TOT>0",
        "func": "msg.payload.csv[0][\"ESMD\"] = msg.payload.csv[0][\"SUM(DET)\"] / msg.payload.csv[0][\"TOT\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 580,
        "wires": [
            [
                "47685bf5fb1ed88c"
            ]
        ]
    },
    {
        "id": "398160dcf99fe49a",
        "type": "debug",
        "z": "fd9469a0efbb8a77",
        "name": "balance output 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 300,
        "wires": []
    },
    {
        "id": "29bfadfdb81eb75c",
        "type": "debug",
        "z": "fd9469a0efbb8a77",
        "name": "balance output 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 340,
        "wires": []
    },
    {
        "id": "460a791591a2945d",
        "type": "debug",
        "z": "fd9469a0efbb8a77",
        "name": "balance output 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 460,
        "wires": []
    },
    {
        "id": "47685bf5fb1ed88c",
        "type": "switch",
        "z": "fd9469a0efbb8a77",
        "name": "msg.payload[\"ESMD\"]",
        "property": "payload.csv[0][\"ESMD\"]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "0.8",
                "vt": "num",
                "v2": "1.2",
                "v2t": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1320,
        "y": 580,
        "wires": [
            [
                "466e6266875d4f84"
            ],
            [
                "1523c9203f9b1679"
            ]
        ]
    },
    {
        "id": "466e6266875d4f84",
        "type": "function",
        "z": "fd9469a0efbb8a77",
        "name": "Set TOTAL = SUM(DET)",
        "func": "msg.payload.csv[0][\"TOTAL\"] = msg.payload.csv[0][\"SUM(DET)\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1570,
        "y": 540,
        "wires": [
            [
                "49177b2204272b93",
                "e2d5eecae0459e01"
            ]
        ]
    },
    {
        "id": "1523c9203f9b1679",
        "type": "switch",
        "z": "fd9469a0efbb8a77",
        "name": "INDP(ind and geo)>1?",
        "property": "payload.csv[0].INDP",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 1560,
        "y": 640,
        "wires": [
            [
                "a80c397a4f5c5239"
            ],
            [
                "ce5bb9d4308895db"
            ]
        ]
    },
    {
        "id": "49177b2204272b93",
        "type": "debug",
        "z": "fd9469a0efbb8a77",
        "name": "balance output 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1790,
        "y": 540,
        "wires": []
    },
    {
        "id": "1d6bdfbeb72fbec3",
        "type": "debug",
        "z": "fd9469a0efbb8a77",
        "name": "balance output 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2010,
        "y": 620,
        "wires": []
    },
    {
        "id": "f0325560707bbd38",
        "type": "debug",
        "z": "fd9469a0efbb8a77",
        "name": "balance output 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1970,
        "y": 660,
        "wires": []
    },
    {
        "id": "a80c397a4f5c5239",
        "type": "function",
        "z": "fd9469a0efbb8a77",
        "name": "SET IMPUTATION FLAG",
        "func": "msg.payload.csv[0].action = \"SET IMPUTATION FLAG?\"\nmsg.payload.csv[0][\"Varx-IMBALANCE\"] = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1790,
        "y": 620,
        "wires": [
            [
                "1d6bdfbeb72fbec3",
                "e2d5eecae0459e01"
            ]
        ]
    },
    {
        "id": "ce5bb9d4308895db",
        "type": "function",
        "z": "fd9469a0efbb8a77",
        "name": "Rake (DET) = TOT",
        "func": "msg.payload.csv[0][\"Rake(DET)\"] = msg.payload.csv[0][\"TOT\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 660,
        "wires": [
            [
                "f0325560707bbd38",
                "e2d5eecae0459e01"
            ]
        ]
    },
    {
        "id": "92892d34775a5fc5",
        "type": "status",
        "z": "fd9469a0efbb8a77",
        "name": "",
        "scope": null,
        "x": 1000,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "e2d5eecae0459e01",
        "type": "function",
        "z": "fd9469a0efbb8a77",
        "name": "function 24",
        "func": "node.status({ fill: \"green\", shape: \"dot\", text: \"processing\" });\n\nmsg.payload.csv[0].module = \"Unit Balance\"\n\nsetTimeout(function () {\n    node.status({ fill: \"gray\", shape: \"ring\", text: \"complete\" });\n    node.send(msg);\n}, 1000);\n\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 180,
        "wires": [
            [
                "0855387c3dd8f9d0"
            ]
        ]
    },
    {
        "id": "3de7d4b88b6bc5dc",
        "type": "debug",
        "z": "fd9469a0efbb8a77",
        "name": "debug 52",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 140,
        "y": 320,
        "wires": []
    },
    {
        "id": "0855387c3dd8f9d0",
        "type": "debug",
        "z": "fd9469a0efbb8a77",
        "name": "BALANCE OUTPUT",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2000,
        "y": 100,
        "wires": []
    },
    {
        "id": "9b8ef39b6cf7149e",
        "type": "function",
        "z": "96f29b19e2260e65",
        "name": "post edit function",
        "func": "if (msg.payload.csv[0].flag) {\n    msg.payload.csv[0].FAIL = true\n    msg.payload.csv[0].TABSTAT = 1\n    msg.payload.csv[0].action = \"Go to: Imputation\"\n}\n\nnode.status({ fill: \"green\", shape: \"dot\", text: \"processing\" });\n\nmsg.payload.csv[0].module = \"Post Edit\"\n\nsetTimeout(function () {\n    node.status({ fill: \"gray\", shape: \"ring\", text: \"complete\" });\n    node.send(msg);\n}, 1000);\n\n// return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 160,
        "wires": [
            [
                "31c3f0a2aae4dd6b"
            ]
        ]
    },
    {
        "id": "31c3f0a2aae4dd6b",
        "type": "debug",
        "z": "96f29b19e2260e65",
        "name": "post edit debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 80,
        "wires": []
    },
    {
        "id": "0ec224ff5d120eb7",
        "type": "status",
        "z": "96f29b19e2260e65",
        "name": "",
        "scope": null,
        "x": 80,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "ec12a60787949694",
        "type": "debug",
        "z": "bfe1ab19e0cbe2cf",
        "name": "debug classification",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "duration",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 80,
        "wires": []
    },
    {
        "id": "18ba959db21960e4",
        "type": "function",
        "z": "bfe1ab19e0cbe2cf",
        "name": "transpose params",
        "func": "let data = [{ \"Column 1\": 4821, \"Column 2\": 6221101, \"Column 3\": 113110 }, { \"Column 2\": 6221102, \"Column 3\": 113210 }, { \"Column 2\": 6222101, \"Column 3\": 113310 }, { \"Column 2\": 6222102, \"Column 3\": 114111 }, { \"Column 2\": 6223101, \"Column 3\": 114112 }, { \"Column 2\": 6223102, \"Column 3\": 114119 }, { \"Column 2\": 7112111, \"Column 3\": 114210 }, { \"Column 2\": 7112112, \"Column 3\": 115111 }, { \"Column 2\": 7112119, \"Column 3\": 115112 }, { \"Column 2\": 7112121, \"Column 3\": 115113 }, { \"Column 2\": 7112122, \"Column 3\": 115114 }, { \"Column 2\": 7112123, \"Column 3\": 115115 }, { \"Column 2\": 7112191, \"Column 3\": 115116 }, { \"Column 2\": 7112192, \"Column 3\": 115210 }, { \"Column 3\": 115310 }, { \"Column 3\": 211120 }, { \"Column 3\": 211130 }, { \"Column 3\": 212111 }, { \"Column 3\": 212112 }, { \"Column 3\": 212113 }, { \"Column 3\": 212210 }, { \"Column 3\": 212221 }, { \"Column 3\": 212222 }, { \"Column 3\": 212230 }, { \"Column 3\": 212291 }, { \"Column 3\": 212299 }, { \"Column 3\": 212311 }, { \"Column 3\": 212312 }, { \"Column 3\": 212313 }, { \"Column 3\": 212319 }, { \"Column 3\": 212321 }, { \"Column 3\": 212322 }, { \"Column 3\": 212324 }, { \"Column 3\": 212325 }, { \"Column 3\": 212391 }, { \"Column 3\": 212392 }, { \"Column 3\": 212393 }, { \"Column 3\": 212399 }, { \"Column 3\": 213111 }, { \"Column 3\": 213112 }, { \"Column 3\": 213113 }, { \"Column 3\": 213114 }, { \"Column 3\": 213115 }, { \"Column 3\": 221111 }, { \"Column 3\": 221112 }, { \"Column 3\": 221113 }, { \"Column 3\": 221114 }, { \"Column 3\": 221115 }, { \"Column 3\": 221116 }, { \"Column 3\": 221117 }, { \"Column 3\": 221118 }, { \"Column 3\": 221121 }, { \"Column 3\": 221122 }, { \"Column 3\": 221210 }, { \"Column 3\": 221310 }, { \"Column 3\": 221320 }, { \"Column 3\": 221330 }, { \"Column 3\": 236115 }, { \"Column 3\": 236116 }, { \"Column 3\": 236117 }, { \"Column 3\": 236118 }, { \"Column 3\": 236210 }, { \"Column 3\": 236220 }, { \"Column 3\": 237110 }, { \"Column 3\": 237120 }, { \"Column 3\": 237130 }, { \"Column 3\": 237210 }, { \"Column 3\": 237310 }, { \"Column 3\": 237990 }, { \"Column 3\": 238110 }, { \"Column 3\": 238120 }, { \"Column 3\": 238130 }, { \"Column 3\": 238140 }, { \"Column 3\": 238150 }, { \"Column 3\": 238160 }, { \"Column 3\": 238170 }, { \"Column 3\": 238190 }, { \"Column 3\": 238210 }, { \"Column 3\": 238220 }, { \"Column 3\": 238290 }, { \"Column 3\": 238310 }, { \"Column 3\": 238320 }, { \"Column 3\": 238330 }, { \"Column 3\": 238340 }, { \"Column 3\": 238350 }, { \"Column 3\": 238390 }, { \"Column 3\": 238910 }, { \"Column 3\": 238990 }, { \"Column 3\": 311111 }, { \"Column 3\": 311119 }, { \"Column 3\": 311211 }, { \"Column 3\": 311212 }, { \"Column 3\": 311213 }, { \"Column 3\": 311221 }, { \"Column 3\": 311224 }, { \"Column 3\": 311225 }, { \"Column 3\": 311230 }, { \"Column 3\": 311313 }, { \"Column 3\": 311314 }, { \"Column 3\": 311340 }, { \"Column 3\": 311351 }, { \"Column 3\": 311352 }, { \"Column 3\": 311411 }, { \"Column 3\": 311412 }, { \"Column 3\": 311421 }, { \"Column 3\": 311422 }, { \"Column 3\": 311423 }, { \"Column 3\": 311511 }, { \"Column 3\": 311512 }, { \"Column 3\": 311513 }, { \"Column 3\": 311514 }, { \"Column 3\": 311520 }, { \"Column 3\": 311611 }, { \"Column 3\": 311612 }, { \"Column 3\": 311613 }, { \"Column 3\": 311615 }, { \"Column 3\": 311710 }, { \"Column 3\": 311811 }, { \"Column 3\": 311812 }, { \"Column 3\": 311813 }, { \"Column 3\": 311821 }, { \"Column 3\": 311824 }, { \"Column 3\": 311830 }, { \"Column 3\": 311911 }, { \"Column 3\": 311919 }, { \"Column 3\": 311920 }, { \"Column 3\": 311930 }, { \"Column 3\": 311941 }, { \"Column 3\": 311942 }, { \"Column 3\": 311991 }, { \"Column 3\": 311999 }, { \"Column 3\": 312111 }, { \"Column 3\": 312112 }, { \"Column 3\": 312113 }, { \"Column 3\": 312120 }, { \"Column 3\": 312130 }, { \"Column 3\": 312140 }, { \"Column 3\": 312230 }, { \"Column 3\": 313110 }, { \"Column 3\": 313210 }, { \"Column 3\": 313220 }, { \"Column 3\": 313230 }, { \"Column 3\": 313240 }, { \"Column 3\": 313310 }, { \"Column 3\": 313320 }, { \"Column 3\": 314110 }, { \"Column 3\": 314120 }, { \"Column 3\": 314910 }, { \"Column 3\": 314994 }, { \"Column 3\": 314999 }, { \"Column 3\": 315110 }, { \"Column 3\": 315190 }, { \"Column 3\": 315210 }, { \"Column 3\": 315220 }, { \"Column 3\": 315240 }, { \"Column 3\": 315280 }, { \"Column 3\": 315990 }, { \"Column 3\": 316110 }, { \"Column 3\": 316210 }, { \"Column 3\": 316992 }, { \"Column 3\": 316998 }, { \"Column 3\": 321113 }, { \"Column 3\": 321114 }, { \"Column 3\": 321211 }, { \"Column 3\": 321212 }, { \"Column 3\": 321213 }, { \"Column 3\": 321214 }, { \"Column 3\": 321219 }, { \"Column 3\": 321911 }, { \"Column 3\": 321912 }, { \"Column 3\": 321918 }, { \"Column 3\": 321920 }, { \"Column 3\": 321991 }, { \"Column 3\": 321992 }, { \"Column 3\": 321999 }, { \"Column 3\": 322110 }, { \"Column 3\": 322121 }, { \"Column 3\": 322122 }, { \"Column 3\": 322130 }, { \"Column 3\": 322211 }, { \"Column 3\": 322212 }, { \"Column 3\": 322219 }, { \"Column 3\": 322220 }, { \"Column 3\": 322230 }, { \"Column 3\": 322291 }, { \"Column 3\": 322299 }, { \"Column 3\": 323111 }, { \"Column 3\": 323113 }, { \"Column 3\": 323117 }, { \"Column 3\": 323120 }, { \"Column 3\": 324110 }, { \"Column 3\": 324121 }, { \"Column 3\": 324122 }, { \"Column 3\": 324191 }, { \"Column 3\": 324199 }, { \"Column 3\": 325110 }, { \"Column 3\": 325120 }, { \"Column 3\": 325130 }, { \"Column 3\": 325180 }, { \"Column 3\": 325193 }, { \"Column 3\": 325194 }, { \"Column 3\": 325199 }, { \"Column 3\": 325211 }, { \"Column 3\": 325212 }, { \"Column 3\": 325220 }, { \"Column 3\": 325311 }, { \"Column 3\": 325312 }, { \"Column 3\": 325314 }, { \"Column 3\": 325320 }, { \"Column 3\": 325411 }, { \"Column 3\": 325412 }, { \"Column 3\": 325413 }, { \"Column 3\": 325414 }, { \"Column 3\": 325510 }, { \"Column 3\": 325520 }, { \"Column 3\": 325611 }, { \"Column 3\": 325612 }, { \"Column 3\": 325613 }, { \"Column 3\": 325620 }, { \"Column 3\": 325910 }, { \"Column 3\": 325920 }, { \"Column 3\": 325991 }, { \"Column 3\": 325992 }, { \"Column 3\": 325998 }, { \"Column 3\": 326111 }, { \"Column 3\": 326112 }, { \"Column 3\": 326113 }, { \"Column 3\": 326121 }, { \"Column 3\": 326122 }, { \"Column 3\": 326130 }, { \"Column 3\": 326140 }, { \"Column 3\": 326150 }, { \"Column 3\": 326160 }, { \"Column 3\": 326191 }, { \"Column 3\": 326199 }, { \"Column 3\": 326211 }, { \"Column 3\": 326212 }, { \"Column 3\": 326220 }, { \"Column 3\": 326291 }, { \"Column 3\": 326299 }, { \"Column 3\": 327110 }, { \"Column 3\": 327120 }, { \"Column 3\": 327211 }, { \"Column 3\": 327212 }, { \"Column 3\": 327213 }, { \"Column 3\": 327215 }, { \"Column 3\": 327310 }, { \"Column 3\": 327320 }, { \"Column 3\": 327331 }, { \"Column 3\": 327332 }, { \"Column 3\": 327390 }, { \"Column 3\": 327410 }, { \"Column 3\": 327420 }, { \"Column 3\": 327910 }, { \"Column 3\": 327991 }, { \"Column 3\": 327992 }, { \"Column 3\": 327993 }, { \"Column 3\": 327999 }, { \"Column 3\": 331110 }, { \"Column 3\": 331210 }, { \"Column 3\": 331221 }, { \"Column 3\": 331222 }, { \"Column 3\": 331313 }, { \"Column 3\": 331314 }, { \"Column 3\": 331315 }, { \"Column 3\": 331318 }, { \"Column 3\": 331410 }, { \"Column 3\": 331420 }, { \"Column 3\": 331491 }, { \"Column 3\": 331492 }, { \"Column 3\": 331511 }, { \"Column 3\": 331512 }, { \"Column 3\": 331513 }, { \"Column 3\": 331523 }, { \"Column 3\": 331524 }, { \"Column 3\": 331529 }, { \"Column 3\": 332111 }, { \"Column 3\": 332112 }, { \"Column 3\": 332114 }, { \"Column 3\": 332117 }, { \"Column 3\": 332119 }, { \"Column 3\": 332215 }, { \"Column 3\": 332216 }, { \"Column 3\": 332311 }, { \"Column 3\": 332312 }, { \"Column 3\": 332313 }, { \"Column 3\": 332321 }, { \"Column 3\": 332322 }, { \"Column 3\": 332323 }, { \"Column 3\": 332410 }, { \"Column 3\": 332420 }, { \"Column 3\": 332431 }, { \"Column 3\": 332439 }, { \"Column 3\": 332510 }, { \"Column 3\": 332613 }, { \"Column 3\": 332618 }, { \"Column 3\": 332710 }, { \"Column 3\": 332721 }, { \"Column 3\": 332722 }, { \"Column 3\": 332811 }, { \"Column 3\": 332812 }, { \"Column 3\": 332813 }, { \"Column 3\": 332911 }, { \"Column 3\": 332912 }, { \"Column 3\": 332913 }, { \"Column 3\": 332919 }, { \"Column 3\": 332991 }, { \"Column 3\": 332992 }, { \"Column 3\": 332993 }, { \"Column 3\": 332994 }, { \"Column 3\": 332996 }, { \"Column 3\": 332999 }, { \"Column 3\": 333111 }, { \"Column 3\": 333112 }, { \"Column 3\": 333120 }, { \"Column 3\": 333131 }, { \"Column 3\": 333132 }, { \"Column 3\": 333241 }, { \"Column 3\": 333242 }, { \"Column 3\": 333243 }, { \"Column 3\": 333244 }, { \"Column 3\": 333249 }, { \"Column 3\": 333314 }, { \"Column 3\": 333316 }, { \"Column 3\": 333318 }, { \"Column 3\": 333413 }, { \"Column 3\": 333414 }, { \"Column 3\": 333415 }, { \"Column 3\": 333511 }, { \"Column 3\": 333514 }, { \"Column 3\": 333515 }, { \"Column 3\": 333517 }, { \"Column 3\": 333519 }, { \"Column 3\": 333611 }, { \"Column 3\": 333612 }, { \"Column 3\": 333613 }, { \"Column 3\": 333618 }, { \"Column 3\": 333912 }, { \"Column 3\": 333914 }, { \"Column 3\": 333921 }, { \"Column 3\": 333922 }, { \"Column 3\": 333923 }, { \"Column 3\": 333924 }, { \"Column 3\": 333991 }, { \"Column 3\": 333992 }, { \"Column 3\": 333993 }, { \"Column 3\": 333994 }, { \"Column 3\": 333995 }, { \"Column 3\": 333996 }, { \"Column 3\": 333997 }, { \"Column 3\": 333999 }, { \"Column 3\": 334111 }, { \"Column 3\": 334112 }, { \"Column 3\": 334118 }, { \"Column 3\": 334210 }, { \"Column 3\": 334220 }, { \"Column 3\": 334290 }, { \"Column 3\": 334310 }, { \"Column 3\": 334412 }, { \"Column 3\": 334413 }, { \"Column 3\": 334416 }, { \"Column 3\": 334417 }, { \"Column 3\": 334418 }, { \"Column 3\": 334419 }, { \"Column 3\": 334510 }, { \"Column 3\": 334511 }, { \"Column 3\": 334512 }, { \"Column 3\": 334513 }, { \"Column 3\": 334514 }, { \"Column 3\": 334515 }, { \"Column 3\": 334516 }, { \"Column 3\": 334517 }, { \"Column 3\": 334519 }, { \"Column 3\": 334613 }, { \"Column 3\": 334614 }, { \"Column 3\": 335110 }, { \"Column 3\": 335121 }, { \"Column 3\": 335122 }, { \"Column 3\": 335129 }, { \"Column 3\": 335210 }, { \"Column 3\": 335220 }, { \"Column 3\": 335311 }, { \"Column 3\": 335312 }, { \"Column 3\": 335313 }, { \"Column 3\": 335314 }, { \"Column 3\": 335911 }, { \"Column 3\": 335912 }, { \"Column 3\": 335921 }, { \"Column 3\": 335929 }, { \"Column 3\": 335931 }, { \"Column 3\": 335932 }, { \"Column 3\": 335991 }, { \"Column 3\": 335999 }, { \"Column 3\": 336111 }, { \"Column 3\": 336112 }, { \"Column 3\": 336120 }, { \"Column 3\": 336211 }, { \"Column 3\": 336212 }, { \"Column 3\": 336213 }, { \"Column 3\": 336214 }, { \"Column 3\": 336310 }, { \"Column 3\": 336320 }, { \"Column 3\": 336330 }, { \"Column 3\": 336340 }, { \"Column 3\": 336350 }, { \"Column 3\": 336360 }, { \"Column 3\": 336370 }, { \"Column 3\": 336390 }, { \"Column 3\": 336411 }, { \"Column 3\": 336412 }, { \"Column 3\": 336413 }, { \"Column 3\": 336414 }, { \"Column 3\": 336415 }, { \"Column 3\": 336419 }, { \"Column 3\": 336510 }, { \"Column 3\": 336611 }, { \"Column 3\": 336612 }, { \"Column 3\": 336991 }, { \"Column 3\": 336992 }, { \"Column 3\": 336999 }, { \"Column 3\": 337110 }, { \"Column 3\": 337121 }, { \"Column 3\": 337122 }, { \"Column 3\": 337124 }, { \"Column 3\": 337125 }, { \"Column 3\": 337127 }, { \"Column 3\": 337211 }, { \"Column 3\": 337212 }, { \"Column 3\": 337214 }, { \"Column 3\": 337215 }, { \"Column 3\": 337910 }, { \"Column 3\": 337920 }, { \"Column 3\": 339112 }, { \"Column 3\": 339113 }, { \"Column 3\": 339114 }, { \"Column 3\": 339115 }, { \"Column 3\": 339116 }, { \"Column 3\": 339910 }, { \"Column 3\": 339920 }, { \"Column 3\": 339930 }, { \"Column 3\": 339940 }, { \"Column 3\": 339950 }, { \"Column 3\": 339991 }, { \"Column 3\": 339992 }, { \"Column 3\": 339993 }, { \"Column 3\": 339994 }, { \"Column 3\": 339995 }, { \"Column 3\": 339999 }, { \"Column 3\": 423110 }, { \"Column 3\": 423120 }, { \"Column 3\": 423130 }, { \"Column 3\": 423140 }, { \"Column 3\": 423210 }, { \"Column 3\": 423220 }, { \"Column 3\": 423310 }, { \"Column 3\": 423320 }, { \"Column 3\": 423330 }, { \"Column 3\": 423390 }, { \"Column 3\": 423410 }, { \"Column 3\": 423420 }, { \"Column 3\": 423430 }, { \"Column 3\": 423440 }, { \"Column 3\": 423450 }, { \"Column 3\": 423460 }, { \"Column 3\": 423490 }, { \"Column 3\": 423510 }, { \"Column 3\": 423520 }, { \"Column 3\": 423610 }, { \"Column 3\": 423620 }, { \"Column 3\": 423690 }, { \"Column 3\": 423710 }, { \"Column 3\": 423720 }, { \"Column 3\": 423730 }, { \"Column 3\": 423740 }, { \"Column 3\": 423810 }, { \"Column 3\": 423820 }, { \"Column 3\": 423830 }, { \"Column 3\": 423840 }, { \"Column 3\": 423850 }, { \"Column 3\": 423860 }, { \"Column 3\": 423910 }, { \"Column 3\": 423920 }, { \"Column 3\": 423930 }, { \"Column 3\": 423940 }, { \"Column 3\": 423990 }, { \"Column 3\": 424110 }, { \"Column 3\": 424120 }, { \"Column 3\": 424130 }, { \"Column 3\": 424210 }, { \"Column 3\": 424310 }, { \"Column 3\": 424320 }, { \"Column 3\": 424330 }, { \"Column 3\": 424340 }, { \"Column 3\": 424410 }, { \"Column 3\": 424420 }, { \"Column 3\": 424430 }, { \"Column 3\": 424440 }, { \"Column 3\": 424450 }, { \"Column 3\": 424460 }, { \"Column 3\": 424470 }, { \"Column 3\": 424480 }, { \"Column 3\": 424490 }, { \"Column 3\": 424510 }, { \"Column 3\": 424520 }, { \"Column 3\": 424590 }, { \"Column 3\": 424610 }, { \"Column 3\": 424690 }, { \"Column 3\": 424710 }, { \"Column 3\": 424720 }, { \"Column 3\": 424810 }, { \"Column 3\": 424820 }, { \"Column 3\": 424910 }, { \"Column 3\": 424920 }, { \"Column 3\": 424930 }, { \"Column 3\": 424940 }, { \"Column 3\": 424950 }, { \"Column 3\": 424990 }, { \"Column 3\": 425110 }, { \"Column 3\": 425120 }, { \"Column 3\": 441110 }, { \"Column 3\": 441120 }, { \"Column 3\": 441210 }, { \"Column 3\": 441222 }, { \"Column 3\": 441228 }, { \"Column 3\": 441310 }, { \"Column 3\": 441320 }, { \"Column 3\": 442110 }, { \"Column 3\": 442210 }, { \"Column 3\": 442291 }, { \"Column 3\": 442299 }, { \"Column 3\": 443141 }, { \"Column 3\": 443142 }, { \"Column 3\": 444110 }, { \"Column 3\": 444120 }, { \"Column 3\": 444130 }, { \"Column 3\": 444190 }, { \"Column 3\": 444210 }, { \"Column 3\": 444220 }, { \"Column 3\": 445110 }, { \"Column 3\": 445120 }, { \"Column 3\": 445210 }, { \"Column 3\": 445220 }, { \"Column 3\": 445230 }, { \"Column 3\": 445291 }, { \"Column 3\": 445292 }, { \"Column 3\": 445299 }, { \"Column 3\": 445310 }, { \"Column 3\": 446110 }, { \"Column 3\": 446120 }, { \"Column 3\": 446130 }, { \"Column 3\": 446191 }, { \"Column 3\": 446199 }, { \"Column 3\": 447110 }, { \"Column 3\": 447190 }, { \"Column 3\": 448110 }, { \"Column 3\": 448120 }, { \"Column 3\": 448130 }, { \"Column 3\": 448140 }, { \"Column 3\": 448150 }, { \"Column 3\": 448190 }, { \"Column 3\": 448210 }, { \"Column 3\": 448310 }, { \"Column 3\": 448320 }, { \"Column 3\": 451110 }, { \"Column 3\": 451120 }, { \"Column 3\": 451130 }, { \"Column 3\": 451140 }, { \"Column 3\": 451211 }, { \"Column 3\": 451212 }, { \"Column 3\": 452210 }, { \"Column 3\": 452311 }, { \"Column 3\": 452319 }, { \"Column 3\": 453110 }, { \"Column 3\": 453210 }, { \"Column 3\": 453220 }, { \"Column 3\": 453310 }, { \"Column 3\": 453910 }, { \"Column 3\": 453920 }, { \"Column 3\": 453930 }, { \"Column 3\": 453991 }, { \"Column 3\": 453998 }, { \"Column 3\": 454110 }, { \"Column 3\": 454210 }, { \"Column 3\": 454310 }, { \"Column 3\": 454390 }, { \"Column 3\": 481111 }, { \"Column 3\": 481112 }, { \"Column 3\": 481211 }, { \"Column 3\": 481212 }, { \"Column 3\": 481219 }, { \"Column 3\": 482100 }, { \"Column 3\": 483111 }, { \"Column 3\": 483112 }, { \"Column 3\": 483113 }, { \"Column 3\": 483114 }, { \"Column 3\": 483211 }, { \"Column 3\": 483212 }, { \"Column 3\": 484110 }, { \"Column 3\": 484121 }, { \"Column 3\": 484122 }, { \"Column 3\": 484210 }, { \"Column 3\": 484220 }, { \"Column 3\": 484230 }, { \"Column 3\": 485111 }, { \"Column 3\": 485112 }, { \"Column 3\": 485113 }, { \"Column 3\": 485119 }, { \"Column 3\": 485210 }, { \"Column 3\": 485310 }, { \"Column 3\": 485320 }, { \"Column 3\": 485410 }, { \"Column 3\": 485510 }, { \"Column 3\": 485991 }, { \"Column 3\": 485999 }, { \"Column 3\": 486110 }, { \"Column 3\": 486210 }, { \"Column 3\": 486910 }, { \"Column 3\": 486990 }, { \"Column 3\": 487110 }, { \"Column 3\": 487210 }, { \"Column 3\": 487990 }, { \"Column 3\": 488111 }, { \"Column 3\": 488119 }, { \"Column 3\": 488190 }, { \"Column 3\": 488210 }, { \"Column 3\": 488310 }, { \"Column 3\": 488320 }, { \"Column 3\": 488330 }, { \"Column 3\": 488390 }, { \"Column 3\": 488410 }, { \"Column 3\": 488490 }, { \"Column 3\": 488510 }, { \"Column 3\": 488991 }, { \"Column 3\": 488999 }, { \"Column 3\": 492110 }, { \"Column 3\": 492210 }, { \"Column 3\": 493110 }, { \"Column 3\": 493120 }, { \"Column 3\": 493130 }, { \"Column 3\": 493190 }, { \"Column 3\": 511110 }, { \"Column 3\": 511120 }, { \"Column 3\": 511130 }, { \"Column 3\": 511140 }, { \"Column 3\": 511191 }, { \"Column 3\": 511199 }, { \"Column 3\": 511210 }, { \"Column 3\": 512110 }, { \"Column 3\": 512120 }, { \"Column 3\": 512131 }, { \"Column 3\": 512132 }, { \"Column 3\": 512191 }, { \"Column 3\": 512199 }, { \"Column 3\": 512230 }, { \"Column 3\": 512240 }, { \"Column 3\": 512250 }, { \"Column 3\": 512290 }, { \"Column 3\": 515111 }, { \"Column 3\": 515112 }, { \"Column 3\": 515120 }, { \"Column 3\": 515210 }, { \"Column 3\": 517311 }, { \"Column 3\": 517312 }, { \"Column 3\": 517410 }, { \"Column 3\": 517911 }, { \"Column 3\": 517919 }, { \"Column 3\": 518210 }, { \"Column 3\": 519110 }, { \"Column 3\": 519120 }, { \"Column 3\": 519130 }, { \"Column 3\": 519190 }, { \"Column 3\": 521110 }, { \"Column 3\": 522110 }, { \"Column 3\": 522120 }, { \"Column 3\": 522130 }, { \"Column 3\": 522190 }, { \"Column 3\": 522210 }, { \"Column 3\": 522220 }, { \"Column 3\": 522291 }, { \"Column 3\": 522292 }, { \"Column 3\": 522293 }, { \"Column 3\": 522294 }, { \"Column 3\": 522298 }, { \"Column 3\": 522310 }, { \"Column 3\": 522320 }, { \"Column 3\": 522390 }, { \"Column 3\": 523110 }, { \"Column 3\": 523120 }, { \"Column 3\": 523130 }, { \"Column 3\": 523140 }, { \"Column 3\": 523210 }, { \"Column 3\": 523910 }, { \"Column 3\": 523920 }, { \"Column 3\": 523930 }, { \"Column 3\": 523991 }, { \"Column 3\": 523999 }, { \"Column 3\": 524113 }, { \"Column 3\": 524114 }, { \"Column 3\": 524126 }, { \"Column 3\": 524127 }, { \"Column 3\": 524128 }, { \"Column 3\": 524130 }, { \"Column 3\": 524210 }, { \"Column 3\": 524291 }, { \"Column 3\": 524292 }, { \"Column 3\": 524298 }, { \"Column 3\": 525000 }, { \"Column 3\": 531110 }, { \"Column 3\": 531120 }, { \"Column 3\": 531130 }, { \"Column 3\": 531190 }, { \"Column 3\": 531210 }, { \"Column 3\": 531311 }, { \"Column 3\": 531312 }, { \"Column 3\": 531320 }, { \"Column 3\": 531390 }, { \"Column 3\": 532111 }, { \"Column 3\": 532112 }, { \"Column 3\": 532120 }, { \"Column 3\": 532210 }, { \"Column 3\": 532281 }, { \"Column 3\": 532282 }, { \"Column 3\": 532283 }, { \"Column 3\": 532284 }, { \"Column 3\": 532289 }, { \"Column 3\": 532310 }, { \"Column 3\": 532411 }, { \"Column 3\": 532412 }, { \"Column 3\": 532420 }, { \"Column 3\": 532490 }, { \"Column 3\": 533110 }, { \"Column 3\": 541110 }, { \"Column 3\": 541191 }, { \"Column 3\": 541199 }, { \"Column 3\": 541211 }, { \"Column 3\": 541213 }, { \"Column 3\": 541214 }, { \"Column 3\": 541219 }, { \"Column 3\": 541310 }, { \"Column 3\": 541320 }, { \"Column 3\": 541330 }, { \"Column 3\": 541340 }, { \"Column 3\": 541350 }, { \"Column 3\": 541360 }, { \"Column 3\": 541370 }, { \"Column 3\": 541380 }, { \"Column 3\": 541410 }, { \"Column 3\": 541420 }, { \"Column 3\": 541430 }, { \"Column 3\": 541490 }, { \"Column 3\": 541511 }, { \"Column 3\": 541512 }, { \"Column 3\": 541513 }, { \"Column 3\": 541519 }, { \"Column 3\": 541611 }, { \"Column 3\": 541612 }, { \"Column 3\": 541613 }, { \"Column 3\": 541614 }, { \"Column 3\": 541618 }, { \"Column 3\": 541620 }, { \"Column 3\": 541690 }, { \"Column 3\": 541713 }, { \"Column 3\": 541714 }, { \"Column 3\": 541715 }, { \"Column 3\": 541720 }, { \"Column 3\": 541810 }, { \"Column 3\": 541820 }, { \"Column 3\": 541830 }, { \"Column 3\": 541840 }, { \"Column 3\": 541850 }, { \"Column 3\": 541860 }, { \"Column 3\": 541870 }, { \"Column 3\": 541890 }, { \"Column 3\": 541910 }, { \"Column 3\": 541921 }, { \"Column 3\": 541922 }, { \"Column 3\": 541930 }, { \"Column 3\": 541940 }, { \"Column 3\": 541990 }, { \"Column 3\": 551111 }, { \"Column 3\": 551112 }, { \"Column 3\": 551114 }, { \"Column 3\": 561110 }, { \"Column 3\": 561210 }, { \"Column 3\": 561311 }, { \"Column 3\": 561312 }, { \"Column 3\": 561320 }, { \"Column 3\": 561330 }, { \"Column 3\": 561410 }, { \"Column 3\": 561421 }, { \"Column 3\": 561422 }, { \"Column 3\": 561431 }, { \"Column 3\": 561439 }, { \"Column 3\": 561440 }, { \"Column 3\": 561450 }, { \"Column 3\": 561491 }, { \"Column 3\": 561492 }, { \"Column 3\": 561499 }, { \"Column 3\": 561510 }, { \"Column 3\": 561520 }, { \"Column 3\": 561591 }, { \"Column 3\": 561599 }, { \"Column 3\": 561611 }, { \"Column 3\": 561612 }, { \"Column 3\": 561613 }, { \"Column 3\": 561621 }, { \"Column 3\": 561622 }, { \"Column 3\": 561710 }, { \"Column 3\": 561720 }, { \"Column 3\": 561730 }, { \"Column 3\": 561740 }, { \"Column 3\": 561790 }, { \"Column 3\": 561910 }, { \"Column 3\": 561920 }, { \"Column 3\": 561990 }, { \"Column 3\": 562111 }, { \"Column 3\": 562112 }, { \"Column 3\": 562119 }, { \"Column 3\": 562211 }, { \"Column 3\": 562212 }, { \"Column 3\": 562213 }, { \"Column 3\": 562219 }, { \"Column 3\": 562910 }, { \"Column 3\": 562920 }, { \"Column 3\": 562991 }, { \"Column 3\": 562998 }, { \"Column 3\": 611100 }, { \"Column 3\": 611200 }, { \"Column 3\": 611300 }, { \"Column 3\": 611410 }, { \"Column 3\": 611420 }, { \"Column 3\": 611430 }, { \"Column 3\": 611511 }, { \"Column 3\": 611512 }, { \"Column 3\": 611513 }, { \"Column 3\": 611519 }, { \"Column 3\": 611610 }, { \"Column 3\": 611620 }, { \"Column 3\": 611630 }, { \"Column 3\": 611691 }, { \"Column 3\": 611692 }, { \"Column 3\": 611699 }, { \"Column 3\": 611710 }, { \"Column 3\": 621111 }, { \"Column 3\": 621112 }, { \"Column 3\": 621210 }, { \"Column 3\": 621310 }, { \"Column 3\": 621320 }, { \"Column 3\": 621330 }, { \"Column 3\": 621340 }, { \"Column 3\": 621391 }, { \"Column 3\": 621399 }, { \"Column 3\": 621410 }, { \"Column 3\": 621420 }, { \"Column 3\": 621491 }, { \"Column 3\": 621492 }, { \"Column 3\": 621493 }, { \"Column 3\": 621498 }, { \"Column 3\": 621511 }, { \"Column 3\": 621512 }, { \"Column 3\": 621610 }, { \"Column 3\": 621910 }, { \"Column 3\": 621991 }, { \"Column 3\": 621999 }, { \"Column 3\": 623110 }, { \"Column 3\": 623210 }, { \"Column 3\": 623220 }, { \"Column 3\": 623311 }, { \"Column 3\": 623312 }, { \"Column 3\": 623990 }, { \"Column 3\": 624110 }, { \"Column 3\": 624120 }, { \"Column 3\": 624190 }, { \"Column 3\": 624210 }, { \"Column 3\": 624221 }, { \"Column 3\": 624229 }, { \"Column 3\": 624230 }, { \"Column 3\": 624310 }, { \"Column 3\": 624410 }, { \"Column 3\": 711110 }, { \"Column 3\": 711120 }, { \"Column 3\": 711130 }, { \"Column 3\": 711190 }, { \"Column 3\": 711310 }, { \"Column 3\": 711320 }, { \"Column 3\": 711410 }, { \"Column 3\": 711510 }, { \"Column 3\": 712110 }, { \"Column 3\": 712120 }, { \"Column 3\": 712130 }, { \"Column 3\": 712190 }, { \"Column 3\": 713110 }, { \"Column 3\": 713120 }, { \"Column 3\": 713210 }, { \"Column 3\": 713290 }, { \"Column 3\": 713910 }, { \"Column 3\": 713920 }, { \"Column 3\": 713930 }, { \"Column 3\": 713940 }, { \"Column 3\": 713950 }, { \"Column 3\": 713990 }, { \"Column 3\": 721110 }, { \"Column 3\": 721120 }, { \"Column 3\": 721191 }, { \"Column 3\": 721199 }, { \"Column 3\": 721211 }, { \"Column 3\": 721214 }, { \"Column 3\": 721310 }, { \"Column 3\": 722310 }, { \"Column 3\": 722320 }, { \"Column 3\": 722330 }, { \"Column 3\": 722410 }, { \"Column 3\": 722511 }, { \"Column 3\": 722513 }, { \"Column 3\": 722514 }, { \"Column 3\": 722515 }, { \"Column 3\": 811111 }, { \"Column 3\": 811112 }, { \"Column 3\": 811113 }, { \"Column 3\": 811118 }, { \"Column 3\": 811121 }, { \"Column 3\": 811122 }, { \"Column 3\": 811191 }, { \"Column 3\": 811192 }, { \"Column 3\": 811198 }, { \"Column 3\": 811211 }, { \"Column 3\": 811212 }, { \"Column 3\": 811213 }, { \"Column 3\": 811219 }, { \"Column 3\": 811310 }, { \"Column 3\": 811411 }, { \"Column 3\": 811412 }, { \"Column 3\": 811420 }, { \"Column 3\": 811430 }, { \"Column 3\": 811490 }, { \"Column 3\": 812111 }, { \"Column 3\": 812112 }, { \"Column 3\": 812113 }, { \"Column 3\": 812191 }, { \"Column 3\": 812199 }, { \"Column 3\": 812210 }, { \"Column 3\": 812220 }, { \"Column 3\": 812310 }, { \"Column 3\": 812320 }, { \"Column 3\": 812331 }, { \"Column 3\": 812332 }, { \"Column 3\": 812910 }, { \"Column 3\": 812921 }, { \"Column 3\": 812922 }, { \"Column 3\": 812930 }, { \"Column 3\": 812990 }, { \"Column 3\": 813100 }, { \"Column 3\": 813211 }, { \"Column 3\": 813212 }, { \"Column 3\": 813219 }, { \"Column 3\": 813311 }, { \"Column 3\": 813312 }, { \"Column 3\": 813319 }, { \"Column 3\": 813410 }, { \"Column 3\": 813910 }, { \"Column 3\": 813920 }, { \"Column 3\": 813930 }, { \"Column 3\": 813940 }, { \"Column 3\": 813990 }];\nmsg.topic = 'param';\nlet reshaped = {\n    \"Column 1\": [],\n    \"Column 2\": [],\n    \"Column 3\": []\n};\n\n// Populate the reshaped object\ndata.forEach(item => {\n    reshaped[\"Column 1\"].push(item[\"Column 1\"] || null);\n    reshaped[\"Column 2\"].push(item[\"Column 2\"] || null);\n    reshaped[\"Column 3\"].push(item[\"Column 3\"] || null);\n});\n\nmsg.payload = reshaped;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 200,
        "wires": [
            [
                "32bcf1022944c0d1"
            ]
        ]
    },
    {
        "id": "32bcf1022944c0d1",
        "type": "join",
        "z": "bfe1ab19e0cbe2cf",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 330,
        "y": 80,
        "wires": [
            [
                "da1879c1827427f2"
            ]
        ]
    },
    {
        "id": "da1879c1827427f2",
        "type": "function",
        "z": "bfe1ab19e0cbe2cf",
        "name": "classification function",
        "func": "msg.topic = 'Classification'\nmsg.startTime = Date.now();\nlet arr = msg.payload.main.rowsY;\nlet arrY = [];\nlet arrN = msg.payload.main.rowsN;\nlet nvpC1 = msg.payload.param['Column 1'].filter(val => { return val !== null; });\nlet nvpC2 = msg.payload.param['Column 2'].filter(val => { return val !== null; });\nlet nvpC3 = msg.payload.param['Column 3'].filter(val => { return val !== null; });\n\n\narr.forEach(item => {\n    if (item.br_stat == \"Y\") {\n        if (nvpC1.includes(parseInt(item.naics_num.slice(0, 4))) || nvpC2.includes(parseInt(item.naics_num.slice(0, 7))) || nvpC3.includes(parseInt(item.naics_num.slice(0, 6)))) {\n            if (item.naics_wrtin_txt != '') {\n                arrY.push({ ...item, naics_wrtin_f: \"1\" });\n            }\n        } else {\n            arrN.push({ ...item, tabstat: \"N\", nontabfl: \"R\" });\n        }\n    } else {\n        arrN.push({ ...item, error: \"record should not have entered this module\" });\n    }\n});\n\nmsg.payload = msg.payload.main;\nmsg.payload.rowsN = arrN;\nmsg.payload.rowsY = arrY;\nmsg.payload.param = typeof (nvpC1);\nmsg.duration = Date.now() - msg.startTime;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 80,
        "wires": [
            [
                "ec12a60787949694"
            ]
        ]
    },
    {
        "id": "2c13cd1702f219b4",
        "type": "function",
        "z": "bfe1ab19e0cbe2cf",
        "name": "function 12",
        "func": "msg.topic = 'main';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 80,
        "wires": [
            [
                "32bcf1022944c0d1"
            ]
        ]
    },
    {
        "id": "a0073744f94a218c",
        "type": "function",
        "z": "fdb2d8067b333a05",
        "name": "critical error",
        "func": "msg.topic = 'Critical Error'\nmsg.startTime = Date.now();\nlet arr = msg.payload.rowsY;\nlet arrY = [];\nlet arrN = msg.payload.rowsN;\nlet arrX = [];\nlet data = 0;\nlet covchcd = ['111', '131', '791', '181', '201', '801', '091', '121', '171'];\nlet pdiv_v = ['A', 'S', 'G', 'F'];\n\nfunction randomDate(start, end) {\n    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()))\n}\n\nlet startDate = new Date(\"2022-01-01\");\nlet endDate = new Date(\"2023-12-31\");\n\narr = arr.map(item => {\n    return {\n        ...item, cov_chg_cd: covchcd[Math.floor(Math.random() * 9)], cov_chg_dt: randomDate(startDate, endDate),\n        PDIV: pdiv_v[Math.floor(Math.random() * 4)], ANAIC: item.naics_num, NAICOLD: item.naics_num, NAICSDSG: item.naics_num, NAICMAIL: item.naics_num,\n        EDTROUTE: Math.floor(Math.random() * 4)\n    };\n})\n\n\narr.forEach(item => {\n    //calculate data\n    if (item.naics_sector != 31) {\n        data = item.pay_ann_val + item.pay_qtr1_val + item.emp_mar12_num; //+ item.ECPAYANN + item.ECPAYQ1 + item.ECEMPQ1 + item.ECPAYANL;\n    }\n    else {\n        data = item.pay_ann_val + item.pay_qtr1_val + item.emp_mar12_num + item.exps_tempstaf_val; //+ item.ECPAYANN + item.ECPAYQ1 + item.ECEMPQ1 + item.ECPAYANL\n    }\n    //begin CE\n    if (['111', '131', '791'].includes(item.cov_chg_cd) && item.cov_chg_dt <= new Date(msg.SurveyYear + '-01-01') && data == 0) {\n        arrN.push({ ...item, tabstat: 'N', nontabfl: 'D' });\n    }\n    else if (['181', '201', '801', '091', '121', '171'].includes(item.cov_chg_cd)) {\n        arrN.push({ ...item, tabstat: 'N', nontabfl: 'D' });\n    }\n    else if (item.PDIV === 'S' && !['1151', '1152'].includes(item.ANAIC.slice(0, 4))) {\n        if (item.PDIV === 'S' && (\n            (item.EDTROUTE > 0 && !['1151', '1152'].includes(item.NAICOLD.slice(0, 4))) ||\n            (item.EDTROUTE === 0 && !['1151', '1152'].includes(item.NAICSDSG.slice(0, 4)) && !['1151', '1152'].includes(item.NAICMAIL.slice(0, 4))))) {\n            arrY.push(item);\n        } else {\n            arrN.push({ ...item, tabstat: 'N', nontabfl: 'D', out_of_scope_pdiv_f: '1' });\n        }\n    } else if (['A', 'G', 'F'].includes(item.PDIV)) {\n        arrN.push({ ...item, tabstat: 'N', nontabfl: 'D', out_of_scope_pdiv_f: '1' });\n    } else if (item.TRADCODE === 'M' && item.cov_chg_cd === '151') {\n        arrN.push({ ...item, tabstat: 'N', nontabfl: 'R', probable_itt: '151' });\n    }\n    else {\n        arrX.push(item);\n    }\n})\n\n\nmsg.payload.rowsN = arrN;\nmsg.payload.rowsY = arrY;\nmsg.payload.rowsX = arrX;\nmsg.duration = Date.now() - msg.startTime;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            [
                "202cb975168dc8dd"
            ]
        ]
    },
    {
        "id": "202cb975168dc8dd",
        "type": "debug",
        "z": "fdb2d8067b333a05",
        "name": "CE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "duration",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 140,
        "wires": []
    },
    {
        "id": "2f5c38129c0c75dd",
        "type": "debug",
        "z": "196c62ada91c222d",
        "name": "Estab - BR stat eval",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "duration",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 80,
        "wires": []
    },
    {
        "id": "526f4d9c42347dd0",
        "type": "function",
        "z": "196c62ada91c222d",
        "name": "br_stat_evaulation_estab",
        "func": "msg.topic = 'Estab - BR Stat Evaluation'\nmsg.startTime = Date.now();\nlet arr = msg.payload.rows;\nlet arrN = [];\nlet arrY = [];\n\narr = arr.map(item => {\n    if ([\"5414\", \"5982\", \"8375\", \"15799\", \"81361\", \"84072\", \"84747\", \"4345\", \"53205\", \"100176\", \"107302\", \"118581\"].includes(item.id)){\n        //12 random ids\n        return { ...item, br_stat: 'N' }\n    }\n    else{\n        return { ...item, br_stat: 'Y' }\n    }\n})\n\narr.forEach(item => {     \n    if (item.br_stat === 'N'){\n        arrN.push({ ...item, tabstat: 'N', nontabfl: 'D' });\n    }\n    else{\n        arrY.push({ ...item, tabstat: 'Y', nontabfl: ' ' });\n    }\n})\n\nmsg.payload.rowsN = arrN;\nmsg.payload.rowsY = arrY;\nmsg.duration = Date.now() - msg.startTime;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 80,
        "wires": [
            [
                "2f5c38129c0c75dd"
            ]
        ]
    },
    {
        "id": "8c066284600dbc44",
        "type": "function",
        "z": "0be109393cb5f28a",
        "name": "check cache",
        "func": "// Retrieve the lookupCache\nlet cache = global.get(\"lookupCache\") || { data: [] };\n\n// Initialize msg.payload.lookup if it's not already an object\nmsg.payload.lookup = msg.payload.lookup || {};\n\n// List to keep track of missing parameters\nlet missingParams = [];\n\n// Check if the required params and their types exist in the cache\nif (msg?.payload?.lookup?.params){\n    for (let param of msg.payload.lookup.params.split(\",\")) {\n        let cachedValue = cache?.data && cache.data.find(\n            (cacheItem) =>\n                cacheItem.param === param.key && cacheItem.type === param.type\n        );\n\n        if (!cachedValue) {\n            missingParams.push(param);\n        }\n    }\n}\n\n\n// If there are missing parameters, set msg.payload.lookup.needsFetch to true\nif (missingParams.length > 0) {\n    msg.payload.lookup.needsFetch = true;\n    msg.payload.lookup.missingParams = missingParams;\n} else {\n    msg.payload.lookup.needsFetch = false;\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 120,
        "wires": [
            [
                "ce1e0380f0f1b0f9"
            ]
        ]
    },
    {
        "id": "ce1e0380f0f1b0f9",
        "type": "function",
        "z": "0be109393cb5f28a",
        "name": "prepare API Request",
        "func": "// Fetch the required parameters from msg.payload.lookup\nconst { moduleName, program, unit_type, missingParams } = msg.payload.lookup;\n\n// Construct the params query parameter from missingParams.\nconst params = (missingParams.length && missingParams.join(\",\")) || \"\";\n\n// Construct the full API URL\n// localhost needs to be replace with the actual domain where the API is hosted. The port needs to be 80 or 443\nconst apiurl = `${env.get('CENSUS_API').trim()}params?module=${moduleName}&params=${params}&program=${program}&unit_type=${unit_type}`;\nconsole.log(apiurl)\n// Append the constructed API URL to msg.payload.lookup.apiurl\nmsg.url = apiurl;\nmsg.payloadBackup = msg.payload;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 220,
        "wires": [
            [
                "6c16d5bbc3143a33"
            ]
        ]
    },
    {
        "id": "6c16d5bbc3143a33",
        "type": "http request",
        "z": "0be109393cb5f28a",
        "name": "Lookup data API",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "basic",
        "senderr": false,
        "headers": [],
        "x": 490,
        "y": 300,
        "wires": [
            [
                "f5dbe24054de29ce"
            ]
        ]
    },
    {
        "id": "f5dbe24054de29ce",
        "type": "function",
        "z": "0be109393cb5f28a",
        "name": "cache result",
        "func": "let cache = global.get(\"lookupCache\");\ncache = Array.isArray(cache?.data) ? cache : {\"data\":[]}\n\n// Get the payload\nlet payload = msg.payload;\n\n// Check if the API call was successful\nif (payload.status === \"success\") {\n\n    // Get the data array\n    let dataArr = payload.data;\n\n    // Extract the necessary fields from the API response and update the cache\n    for (let item of dataArr) {\n        const { id, module, param, values, json_values, program, unit_type } = item;\n        cache.data.push({ id, module, param, values, json_values, program, unit_type });\n    }\n    msg.payload = { ...msg.payloadBackup, dataArr };\n\n}\n// Save the updated cache\nglobal.set(\"lookupCache\", cache)\n// msg.payload = { ...msg.payloadBackup, dataArr };\n// msg.payload.cache = cache;\ndelete msg.payloadBackup;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 380,
        "wires": [
            [
                "6876901bf95a8ffb"
            ]
        ]
    },
    {
        "id": "6876901bf95a8ffb",
        "type": "debug",
        "z": "0be109393cb5f28a",
        "name": "debug 93",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 260,
        "wires": []
    },
    {
        "id": "9a7a7971.dbc4b8",
        "type": "inject",
        "z": "67991373.45438c",
        "g": "19463268a6c67561",
        "name": "Inject Filename",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/Users/revealgc/Desktop/4testMOD.csv",
        "payloadType": "str",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "1e5beed02674863a"
            ]
        ],
        "outputLabels": [
            "Send Time"
        ]
    },
    {
        "id": "1e5beed02674863a",
        "type": "ui_text_input",
        "z": "67991373.45438c",
        "g": "19463268a6c67561",
        "name": "Input Parameter File Name",
        "label": "Params file...",
        "tooltip": "Enter the location of the parameters file",
        "group": "d5b306fd70950040",
        "order": 2,
        "width": 15,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 440,
        "y": 140,
        "wires": [
            [
                "b5c53653a76681bf"
            ]
        ]
    },
    {
        "id": "97cb22c43553888b",
        "type": "comment",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "name": "Fact from files",
        "info": "# Facts CSV File ",
        "x": 910,
        "y": 800,
        "wires": []
    },
    {
        "id": "b5c53653a76681bf",
        "type": "subflow:82cc831b154f3133",
        "z": "67991373.45438c",
        "g": "19463268a6c67561",
        "name": "",
        "x": 800,
        "y": 140,
        "wires": [
            [
                "06db3e224b379422"
            ]
        ]
    },
    {
        "id": "04f3b0fb456d2117",
        "type": "ui_text_input",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "name": "Input Dataset File Name",
        "label": "Facts",
        "tooltip": "Enter the location of the parameters file",
        "group": "1f86b2145e7e556a",
        "order": 2,
        "width": 15,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 370,
        "y": 600,
        "wires": [
            [
                "100234cf93c195b8"
            ]
        ]
    },
    {
        "id": "100234cf93c195b8",
        "type": "file in",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "name": "Read File",
        "filename": "payload",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 580,
        "y": 600,
        "wires": [
            [
                "c047c871d9c0e70d"
            ]
        ]
    },
    {
        "id": "c047c871d9c0e70d",
        "type": "csv",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 730,
        "y": 600,
        "wires": [
            [
                "c9c9ca415ab95910",
                "58df41cd8e54a653"
            ]
        ]
    },
    {
        "id": "c9c9ca415ab95910",
        "type": "function",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "name": "Save Facts from file",
        "func": "let facts = {}\nmsg.payload.map((r, k) => {\n    facts = {...facts, ...{[r['name']]: r['value']}}\n})\n\nflow.set(\"facts\", facts)\n\n\nmsg.facts = msg.payload\nmsg.payload = [facts]\n\n\n\nmsg.topic = \"facts\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 600,
        "wires": [
            [
                "571a7beaed3ab093"
            ]
        ]
    },
    {
        "id": "16550455147cd747",
        "type": "ui_table",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "group": "134f09c88dd005fc",
        "name": "4. Facts",
        "order": 1,
        "width": 24,
        "height": 4,
        "columns": [
            {
                "field": "rule.event.ruleId",
                "title": "Row",
                "width": "80",
                "align": "left",
                "formatter": "rownum",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "name",
                "title": "Name",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "value",
                "title": "Value",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1240,
        "y": 640,
        "wires": []
    },
    {
        "id": "211d46862546b6bf",
        "type": "inject",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "name": "FileName Inject",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/Users/revealgc/Desktop/factsToTest.csv",
        "payloadType": "str",
        "x": 140,
        "y": 600,
        "wires": [
            [
                "04f3b0fb456d2117"
            ]
        ],
        "outputLabels": [
            "Send Time"
        ]
    },
    {
        "id": "571a7beaed3ab093",
        "type": "change",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "name": "Enable ",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "facts",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "enabled",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "value",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 600,
        "wires": [
            [
                "16550455147cd747",
                "24856db77f81d8bb",
                "21a2308db46311bb"
            ]
        ]
    },
    {
        "id": "fb483894819a453e",
        "type": "http request",
        "z": "67991373.45438c",
        "g": "ef50b77b253a7883",
        "name": "Get Rule Types from DB",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/rulesrepo/getruletype",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 410,
        "y": 340,
        "wires": [
            [
                "79f4bff451119fb7"
            ]
        ]
    },
    {
        "id": "5f12a638967ad520",
        "type": "inject",
        "z": "67991373.45438c",
        "g": "ef50b77b253a7883",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 380,
        "wires": [
            [
                "fb483894819a453e"
            ]
        ]
    },
    {
        "id": "199e84df3d73b845",
        "type": "ui_dropdown",
        "z": "67991373.45438c",
        "g": "ef50b77b253a7883",
        "name": "Rule Types Drop Down Topic: validationTopic",
        "label": "",
        "tooltip": "Select rule types",
        "place": "Select rule types from the db...",
        "group": "d5b306fd70950040",
        "order": 4,
        "width": 12,
        "height": 1,
        "passthru": true,
        "multiple": true,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "validationType",
        "topicType": "str",
        "className": "",
        "x": 1190,
        "y": 340,
        "wires": [
            [
                "739c4193fa8fce2c"
            ]
        ]
    },
    {
        "id": "79f4bff451119fb7",
        "type": "function",
        "z": "67991373.45438c",
        "g": "ef50b77b253a7883",
        "name": "Prep for DB Rules Dropdown Topic:dbruletypes",
        "func": "let ret = []\nmsg.payload.map(t => ret.push({ [t.type + '(' + t.cnt +')']: t.type}))\nmsg.options = ret\nmsg.payload = ret\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 340,
        "wires": [
            [
                "199e84df3d73b845"
            ]
        ]
    },
    {
        "id": "645a9d4772fcd00f",
        "type": "ui_button",
        "z": "67991373.45438c",
        "g": "ef50b77b253a7883",
        "name": "",
        "group": "d5b306fd70950040",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Get Rules",
        "tooltip": "Get rule types",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-database",
        "payload": "dbrules",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 100,
        "y": 280,
        "wires": [
            [
                "fb483894819a453e"
            ]
        ]
    },
    {
        "id": "24856db77f81d8bb",
        "type": "ui_gauge",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "name": "Gauge for Facts from file",
        "group": "4060ccd3b1b979fd",
        "order": 4,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "Facts",
        "label": "units",
        "format": "{{msg.payload.length}}",
        "min": 0,
        "max": "300",
        "colors": [
            "#0d0b96",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1290,
        "y": 560,
        "wires": []
    },
    {
        "id": "0cd9973f643e23da",
        "type": "ui_text_input",
        "z": "67991373.45438c",
        "g": "c0b83f35fdc02130",
        "name": "Input RID",
        "label": "Reporting IDs",
        "tooltip": "Enter at least 3 characters",
        "group": "1f86b2145e7e556a",
        "order": 5,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 100,
        "y": 980,
        "wires": [
            [
                "3b55370ad9fd31f5"
            ]
        ]
    },
    {
        "id": "3b55370ad9fd31f5",
        "type": "http request",
        "z": "67991373.45438c",
        "g": "c0b83f35fdc02130",
        "name": "Get RIDs from DB",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/reporting_unit/findRID/{{{payload}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            }
        ],
        "x": 330,
        "y": 980,
        "wires": [
            [
                "7ce52ec9ef003b44"
            ]
        ]
    },
    {
        "id": "e76e13639b1f0475",
        "type": "ui_dropdown",
        "z": "67991373.45438c",
        "g": "c0b83f35fdc02130",
        "name": "Rule Types Drop Down Topic: dbreportingids",
        "label": "",
        "tooltip": "Select reporting ids...",
        "place": "Select reporting ids from the db...",
        "group": "1f86b2145e7e556a",
        "order": 4,
        "width": 10,
        "height": 1,
        "passthru": false,
        "multiple": true,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "dbreportingids",
        "topicType": "msg",
        "className": "",
        "x": 1050,
        "y": 980,
        "wires": [
            [
                "d394b61bcc4755e6"
            ]
        ]
    },
    {
        "id": "7ce52ec9ef003b44",
        "type": "function",
        "z": "67991373.45438c",
        "g": "c0b83f35fdc02130",
        "name": "Prep for RID Dropdown Topic:dbreportingids",
        "func": "let ret = []\n msg.payload.map(t => ret.push({ [t.shortvalue + \" \"+ t.reporting_id]: t.reporting_id}))\nmsg.options = ret\nmsg.payload = ret\nmsg.topic = \"dbreportingids\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 980,
        "wires": [
            [
                "e76e13639b1f0475"
            ]
        ]
    },
    {
        "id": "d394b61bcc4755e6",
        "type": "function",
        "z": "67991373.45438c",
        "g": "c0b83f35fdc02130",
        "name": "Save Reporting IDs",
        "func": "let rid = msg.payload\nmsg.reporting_id = msg.payload\nflow.set(\"reporting_id\", rid)\nmsg.payload = rid.length > 0\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1430,
        "y": 980,
        "wires": [
            [
                "f45097235bf5254d",
                "b50c075944f35652"
            ]
        ]
    },
    {
        "id": "1e61b63c0502b4e9",
        "type": "debug",
        "z": "67991373.45438c",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2600,
        "y": 880,
        "wires": []
    },
    {
        "id": "044139040f928c41",
        "type": "debug",
        "z": "67991373.45438c",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2400,
        "y": 740,
        "wires": []
    },
    {
        "id": "8c1b098c01bc4977",
        "type": "ui_switch",
        "z": "67991373.45438c",
        "name": "cb_ff",
        "label": "",
        "tooltip": "",
        "group": "1f86b2145e7e556a",
        "order": 1,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "cb_ff",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2050,
        "y": 600,
        "wires": [
            [
                "fd562624ab71790e"
            ]
        ]
    },
    {
        "id": "5f1b840d2df55385",
        "type": "function",
        "z": "67991373.45438c",
        "name": "Save checkboxes",
        "func": "let P = msg.payload\n\n// Save Checkboxes\n\nflow.set(\"cb_ff\", P.cb_ff)\n\nflow.set(\"cb_fd\", P.cb_fd)\nflow.set(\"cb_rf\", P.cb_rf)\nflow.set(\"cb_rd\", P.cb_rd)\n\nflow.set(\"cb_network\", P.cb_network)\nflow.set(\"cb_attached\", P.cb_attached)\n\n\n// rules and facts must be from either files or db\nmsg.payload = (P.cb_ff || P.cb_fd) && (P.cb_rf || P.cb_rd)\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2430,
        "y": 820,
        "wires": [
            [
                "1e61b63c0502b4e9",
                "dfb61e11af38dafd"
            ]
        ]
    },
    {
        "id": "f45097235bf5254d",
        "type": "ui_switch",
        "z": "67991373.45438c",
        "name": "cb_fd",
        "label": "",
        "tooltip": "",
        "group": "1f86b2145e7e556a",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "cb_fd",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2010,
        "y": 980,
        "wires": [
            [
                "fd562624ab71790e"
            ]
        ]
    },
    {
        "id": "7068b9cdbaed7677",
        "type": "function",
        "z": "67991373.45438c",
        "name": "Reset all",
        "func": "flow.set(\"rules\",[])\nflow.set(\"facts\", {})\nflow.set(\"reporting_id\", {})\nflow.set(\"validationType\", {})\n\n\nflow.set(\"cb_attached\", false)\n\nflow.set(\"cb_network\", false)\n\n\n flow.set('cb_ff', false)\nflow.set('cb_fd', false)\n\nflow.set('cb_rf', false)\nflow.set('cb_rd', false)\nmsg.payload = false\n\nmsg.enabled = false",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2400,
        "y": 1640,
        "wires": [
            []
        ]
    },
    {
        "id": "fd562624ab71790e",
        "type": "join",
        "z": "67991373.45438c",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "6",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 2250,
        "y": 820,
        "wires": [
            [
                "5f1b840d2df55385",
                "044139040f928c41"
            ]
        ]
    },
    {
        "id": "ef78548912a4d7aa",
        "type": "ui_switch",
        "z": "67991373.45438c",
        "name": "cb_rf",
        "label": "",
        "tooltip": "",
        "group": "d5b306fd70950040",
        "order": 1,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "cb_rf",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2050,
        "y": 140,
        "wires": [
            [
                "fd562624ab71790e"
            ]
        ]
    },
    {
        "id": "9a41aca46f8e70f2",
        "type": "ui_switch",
        "z": "67991373.45438c",
        "name": "cb_rd",
        "label": "",
        "tooltip": "",
        "group": "d5b306fd70950040",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "cb_rd",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2050,
        "y": 340,
        "wires": [
            [
                "fd562624ab71790e"
            ]
        ]
    },
    {
        "id": "7f5231b4f331e49b",
        "type": "ui_switch",
        "z": "67991373.45438c",
        "name": "",
        "label": "Network",
        "tooltip": "",
        "group": "779fdd53a3120890",
        "order": 2,
        "width": 8,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "cb_network",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2060,
        "y": 1200,
        "wires": [
            [
                "fd562624ab71790e"
            ]
        ]
    },
    {
        "id": "ba7a7633a548b05b",
        "type": "ui_switch",
        "z": "67991373.45438c",
        "name": "",
        "label": "Attached",
        "tooltip": "",
        "group": "779fdd53a3120890",
        "order": 1,
        "width": 8,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "cb_attached",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 2040,
        "y": 1080,
        "wires": [
            [
                "fd562624ab71790e"
            ]
        ]
    },
    {
        "id": "48fe92c3d9b4d8bb",
        "type": "ui_button",
        "z": "67991373.45438c",
        "name": "",
        "group": "779fdd53a3120890",
        "order": 3,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "Submit JOB",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-tasks",
        "payload": "DONE",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 3010,
        "y": 820,
        "wires": [
            [
                "73055769ca44b5f7"
            ]
        ]
    },
    {
        "id": "dfb61e11af38dafd",
        "type": "function",
        "z": "67991373.45438c",
        "name": "Enable or Disable Submit JOB button",
        "func": "msg.enabled = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2750,
        "y": 820,
        "wires": [
            [
                "48fe92c3d9b4d8bb"
            ]
        ]
    },
    {
        "id": "06db3e224b379422",
        "type": "function",
        "z": "67991373.45438c",
        "g": "19463268a6c67561",
        "name": "Save RULES and Radio Button(rf)",
        "func": "\n\nlet rules = []\n\nmsg.payload.results.map(r => rules.push(r.rule))\nflow.set(\"rules\", rules)\n\nmsg.payload = !(msg.payload.outputErrorCount > 0)\nmsg.enabled = !(msg.payload.outputErrorCount > 0)\n\nmsg.disabled = true\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 140,
        "wires": [
            [
                "ef78548912a4d7aa",
                "2496a0361619e895"
            ]
        ]
    },
    {
        "id": "1e3847f427e4c74f",
        "type": "ui_button",
        "z": "67991373.45438c",
        "name": "",
        "group": "779fdd53a3120890",
        "order": 4,
        "width": 8,
        "height": 1,
        "passthru": true,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-circle-o",
        "payload": "false",
        "payloadType": "bool",
        "topic": "",
        "topicType": "str",
        "x": 1910,
        "y": 1700,
        "wires": [
            [
                "8701991a4839bab8",
                "b2a8b14d99432a2d",
                "cbbf5c9004d0946e",
                "30dce0e234d60286",
                "c3a24bb78c2a2175",
                "9db5fcbd4b1fd8c3",
                "093e4ef6e2a39496",
                "d67e28129722d643",
                "5d9d0ae34f31c5f4"
            ]
        ]
    },
    {
        "id": "21a2308db46311bb",
        "type": "function",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "name": "Change payload to true",
        "func": "msg.payload = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 600,
        "wires": [
            [
                "8c1b098c01bc4977"
            ]
        ]
    },
    {
        "id": "b87799331653cd82",
        "type": "subflow:8d5b6ce343b26ccf",
        "z": "67991373.45438c",
        "name": "",
        "x": 4600,
        "y": 820,
        "wires": []
    },
    {
        "id": "58df41cd8e54a653",
        "type": "debug",
        "z": "67991373.45438c",
        "g": "62708d0bbe922798",
        "name": "debug 21",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 640,
        "wires": []
    },
    {
        "id": "73055769ca44b5f7",
        "type": "function",
        "z": "67991373.45438c",
        "name": "Save QBES Payload",
        "func": "// workflow id will default to 0 if not provided. It corresponds to the spad.id db col.\n// \nlet reporting_id = flow.get(\"reporting_id\")// parseInt(flow.get(\"reporting_id\") || 2002865554)\nflow.set(\"startTime\", new Date().toLocaleString())\n// Save Checkboxes\n\nlet cb_ff = flow.get(\"cb_ff\")\nlet cb_fd = flow.get(\"cb_fd\")\n\nlet cb_rf = flow.get(\"cb_rf\")\nlet cb_rd = flow.get(\"cb_rd\")\n\n\nlet cb_network = flow.get(\"cb_network\") || true\nlet cb_attached = flow.get(\"cb_attached\") || false\n\n\nlet facts = (cb_ff) ? [flow.get(\"facts\")] : []\nlet rules = (cb_rf) ? flow.get(\"rules\") :[]\nlet attended = cb_attached\nlet showNetwork = cb_network\n\nlet QBESpayload = {\n    facts,     \n    rules, \n    attended, \n    showNetwork,\n    ruleType: (flow.get(\"validationType\")) || [],\n    parent_id: flow.get(\"workFlowId\") || 0,\n    reporting_id\n}\nflow.set(\"QBESPayload\",QBESpayload)\nmsg.payload = QBESpayload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3220,
        "y": 820,
        "wires": [
            [
                "f87a1ec1239428aa",
                "bdf7069659cda7af"
            ]
        ]
    },
    {
        "id": "2d31a9cbb8b25e8f",
        "type": "debug",
        "z": "67991373.45438c",
        "name": "debug 23",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4340,
        "y": 340,
        "wires": []
    },
    {
        "id": "8701991a4839bab8",
        "type": "link out",
        "z": "67991373.45438c",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "889e30d476808397"
        ],
        "x": 2135,
        "y": 1960,
        "wires": []
    },
    {
        "id": "889e30d476808397",
        "type": "link in",
        "z": "67991373.45438c",
        "name": "link in 1",
        "links": [
            "8701991a4839bab8"
        ],
        "x": 1965,
        "y": 300,
        "wires": [
            [
                "9a41aca46f8e70f2"
            ]
        ]
    },
    {
        "id": "b2a8b14d99432a2d",
        "type": "link out",
        "z": "67991373.45438c",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "24e108b562edc235"
        ],
        "x": 2135,
        "y": 1780,
        "wires": []
    },
    {
        "id": "24e108b562edc235",
        "type": "link in",
        "z": "67991373.45438c",
        "name": "link in 2",
        "links": [
            "b2a8b14d99432a2d"
        ],
        "x": 1965,
        "y": 100,
        "wires": [
            [
                "ef78548912a4d7aa"
            ]
        ]
    },
    {
        "id": "cbbf5c9004d0946e",
        "type": "link out",
        "z": "67991373.45438c",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "4e7718304bce05d2"
        ],
        "x": 2145,
        "y": 1560,
        "wires": []
    },
    {
        "id": "4e7718304bce05d2",
        "type": "link in",
        "z": "67991373.45438c",
        "name": "link in 3",
        "links": [
            "cbbf5c9004d0946e"
        ],
        "x": 2575,
        "y": 780,
        "wires": [
            [
                "dfb61e11af38dafd"
            ]
        ]
    },
    {
        "id": "30dce0e234d60286",
        "type": "link out",
        "z": "67991373.45438c",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "5b50d2fc0efaeade"
        ],
        "x": 2145,
        "y": 1640,
        "wires": []
    },
    {
        "id": "5b50d2fc0efaeade",
        "type": "link in",
        "z": "67991373.45438c",
        "name": "link in 4",
        "links": [
            "30dce0e234d60286"
        ],
        "x": 2295,
        "y": 1780,
        "wires": [
            [
                "7068b9cdbaed7677"
            ]
        ]
    },
    {
        "id": "c3a24bb78c2a2175",
        "type": "link out",
        "z": "67991373.45438c",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "fc93792ff8aaff26"
        ],
        "x": 2135,
        "y": 1720,
        "wires": []
    },
    {
        "id": "fc93792ff8aaff26",
        "type": "link in",
        "z": "67991373.45438c",
        "name": "link in 5",
        "links": [
            "c3a24bb78c2a2175"
        ],
        "x": 1965,
        "y": 560,
        "wires": [
            [
                "8c1b098c01bc4977"
            ]
        ]
    },
    {
        "id": "9db5fcbd4b1fd8c3",
        "type": "link out",
        "z": "67991373.45438c",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "5c24e7ac5f83708c"
        ],
        "x": 2145,
        "y": 1600,
        "wires": []
    },
    {
        "id": "5c24e7ac5f83708c",
        "type": "link in",
        "z": "67991373.45438c",
        "name": "link in 6",
        "links": [
            "9db5fcbd4b1fd8c3"
        ],
        "x": 1955,
        "y": 1040,
        "wires": [
            [
                "ba7a7633a548b05b"
            ]
        ]
    },
    {
        "id": "093e4ef6e2a39496",
        "type": "link out",
        "z": "67991373.45438c",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "d2bbd2904874d7a2"
        ],
        "x": 2145,
        "y": 1680,
        "wires": []
    },
    {
        "id": "d2bbd2904874d7a2",
        "type": "link in",
        "z": "67991373.45438c",
        "name": "link in 7",
        "links": [
            "093e4ef6e2a39496"
        ],
        "x": 1955,
        "y": 1160,
        "wires": [
            [
                "7f5231b4f331e49b"
            ]
        ]
    },
    {
        "id": "d67e28129722d643",
        "type": "link out",
        "z": "67991373.45438c",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "5561391c72b77ec4"
        ],
        "x": 2135,
        "y": 1840,
        "wires": []
    },
    {
        "id": "5561391c72b77ec4",
        "type": "link in",
        "z": "67991373.45438c",
        "name": "link in 8",
        "links": [
            "d67e28129722d643"
        ],
        "x": 1935,
        "y": 940,
        "wires": [
            [
                "f45097235bf5254d"
            ]
        ]
    },
    {
        "id": "739c4193fa8fce2c",
        "type": "function",
        "z": "67991373.45438c",
        "g": "ef50b77b253a7883",
        "name": "Save Validation Type and Radio Button(rd)",
        "func": "flow.set(\"validationType\", msg.payload)\nmsg.payload = msg.payload.length > 0 \nmsg.enabled = !(msg.payload.length > 0 )\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 340,
        "wires": [
            [
                "9a41aca46f8e70f2"
            ]
        ]
    },
    {
        "id": "3af468cd9306ec3e",
        "type": "debug",
        "z": "67991373.45438c",
        "name": "Output from QBES",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4110,
        "y": 1000,
        "wires": []
    },
    {
        "id": "d7f2fcd5e791ba92",
        "type": "http request",
        "z": "67991373.45438c",
        "name": "Post: ProcessRules ",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/spad/processRules",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            },
            {
                "keyType": "other",
                "keyValue": "DEBUG",
                "valueType": "other",
                "valueValue": "true"
            }
        ],
        "x": 3850,
        "y": 820,
        "wires": [
            [
                "3af468cd9306ec3e",
                "711f05a68cde98f5"
            ]
        ]
    },
    {
        "id": "711f05a68cde98f5",
        "type": "function",
        "z": "67991373.45438c",
        "name": "Send to log the output of the results",
        "func": "let messages = []\n\nlet P = msg.payload\nif(P.rules) {\n    P.rules.valid.map(p=> messages.push({ruleId: p.id, message: p.message}))\n    msg.payload = {\n        wflid: msg.payload.workflowId,\n        passed: msg.payload.rules.valid.length,\n        failed: msg.payload.rules.invalid.length,\n        messages,\n        startTime: flow.get(\"startTime\"),\n        endTime: new Date().toLocaleString()\n\n    }\n} \n// else {\n//     msg.payload = {\n//         wflid: msg.payload.workflowId,\n//         startTime: flow.get(\"startTime\"),\n//         endTime: new Date().toLocaleString()\n\n//     }\n// }\nmsg.topic = \"QBES Output\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4210,
        "y": 820,
        "wires": [
            [
                "b87799331653cd82",
                "652ea1d3b066becc"
            ]
        ]
    },
    {
        "id": "5d9d0ae34f31c5f4",
        "type": "link out",
        "z": "67991373.45438c",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "d587f5de3f4014c8"
        ],
        "x": 2135,
        "y": 1900,
        "wires": []
    },
    {
        "id": "d587f5de3f4014c8",
        "type": "link in",
        "z": "67991373.45438c",
        "g": "ef50b77b253a7883",
        "name": "link in 9",
        "links": [
            "5d9d0ae34f31c5f4"
        ],
        "x": 265,
        "y": 280,
        "wires": [
            [
                "fb483894819a453e"
            ]
        ]
    },
    {
        "id": "d445d2aa213681e6",
        "type": "http in",
        "z": "67991373.45438c",
        "name": "Test Input Point",
        "url": "/test",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1360,
        "y": 1360,
        "wires": [
            [
                "077745dd4456572b",
                "4de57f6bb5f38231"
            ]
        ]
    },
    {
        "id": "7e3f13f11c3166e4",
        "type": "debug",
        "z": "67991373.45438c",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1900,
        "y": 1360,
        "wires": []
    },
    {
        "id": "077745dd4456572b",
        "type": "function",
        "z": "67991373.45438c",
        "name": "function 7",
        "func": "msg.payload = \"Service called\"\nmsg.statusCode = 200\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1660,
        "y": 1360,
        "wires": [
            [
                "7e3f13f11c3166e4",
                "1e3847f427e4c74f"
            ]
        ]
    },
    {
        "id": "24a6d577acd5cbc7",
        "type": "catch",
        "z": "67991373.45438c",
        "name": "Catch read file errors",
        "scope": null,
        "uncaught": false,
        "x": 220,
        "y": 1180,
        "wires": [
            [
                "c3c54ddc39435b68"
            ]
        ]
    },
    {
        "id": "4fab4477a5dae9fd",
        "type": "ui_toast",
        "z": "67991373.45438c",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 610,
        "y": 1160,
        "wires": []
    },
    {
        "id": "c3c54ddc39435b68",
        "type": "function",
        "z": "67991373.45438c",
        "name": "function 8",
        "func": "msg.payload = msg.error.message\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 1180,
        "wires": [
            [
                "4fab4477a5dae9fd",
                "3edc4444ae0d428e"
            ]
        ]
    },
    {
        "id": "3edc4444ae0d428e",
        "type": "debug",
        "z": "67991373.45438c",
        "name": "debug 26",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 1200,
        "wires": []
    },
    {
        "id": "96facefabfa129ae",
        "type": "inject",
        "z": "67991373.45438c",
        "name": "Inject a reporting ID",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "reporting_id",
                "v": "3010013214",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3010013214",
        "payloadType": "num",
        "x": 830,
        "y": 1100,
        "wires": [
            [
                "b50c075944f35652"
            ]
        ]
    },
    {
        "id": "29e5403351fd72d9",
        "type": "debug",
        "z": "67991373.45438c",
        "name": "debug 28",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 1280,
        "wires": []
    },
    {
        "id": "b50c075944f35652",
        "type": "http request",
        "z": "67991373.45438c",
        "name": "API Get Facts by RID",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/rulesrepo/factsandrules/{{{reporting_id}}}?DEBUG=true",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            }
        ],
        "x": 1280,
        "y": 1100,
        "wires": [
            [
                "29e5403351fd72d9"
            ]
        ]
    },
    {
        "id": "2a1010c6c72b92ee",
        "type": "ui_toast",
        "z": "67991373.45438c",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "Show Job is submitted",
        "x": 3610,
        "y": 1180,
        "wires": []
    },
    {
        "id": "f87a1ec1239428aa",
        "type": "function",
        "z": "67991373.45438c",
        "name": "Job Submitted",
        "func": "msg.payload = 'Job Submitted at: '+ new Date().toLocaleString()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3400,
        "y": 1080,
        "wires": [
            [
                "2a1010c6c72b92ee"
            ]
        ]
    },
    {
        "id": "4de57f6bb5f38231",
        "type": "http response",
        "z": "67991373.45438c",
        "name": "Send Response Back",
        "statusCode": "msg.statusCode",
        "headers": {
            "status": "200"
        },
        "x": 1640,
        "y": 1700,
        "wires": []
    },
    {
        "id": "2496a0361619e895",
        "type": "ui_button",
        "z": "67991373.45438c",
        "name": "",
        "group": "18a5a593fcd64912",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": false,
        "label": "Save Rules",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "Ready to Save Rules",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1510,
        "y": 40,
        "wires": [
            [
                "097b7c36f8623668",
                "9cdda70a448f80e0"
            ]
        ]
    },
    {
        "id": "967038b5dc63123e",
        "type": "debug",
        "z": "67991373.45438c",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2220,
        "y": 40,
        "wires": []
    },
    {
        "id": "9cdda70a448f80e0",
        "type": "function",
        "z": "67991373.45438c",
        "name": "getrules ready for saving from params file",
        "func": "let rules = flow.get(\"rules\")\nlet rA = []\nrules.map((r) => {\n    let name = (r.event.name || \"Dynamic Rule\") + \": \"+r.event.ruleId\n    let description = name\n    \n    r.event.ruleId = \"0\"\n    r.event.type = \"0\"\n    r.event.eventType = \"impute\"\n    \n    \n\n    rA.push({ parsed_rule: r, data: r, name, description, id: 0 })\n})\n\nmsg.payload = {data:rA}\n\n// Send it to the backend for future processing\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1940,
        "y": 40,
        "wires": [
            [
                "967038b5dc63123e",
                "14d9e7a93f3dd56a"
            ]
        ]
    },
    {
        "id": "14d9e7a93f3dd56a",
        "type": "http request",
        "z": "67991373.45438c",
        "name": "Post: Save an array of rules",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/rulesrepo/new/parsedrules/0",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            },
            {
                "keyType": "other",
                "keyValue": "DEBUG",
                "valueType": "other",
                "valueValue": "true"
            }
        ],
        "x": 2380,
        "y": 160,
        "wires": [
            [
                "3c39b274d9df5304"
            ]
        ]
    },
    {
        "id": "f880226b0a4c82d0",
        "type": "debug",
        "z": "67991373.45438c",
        "name": "debug 36",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2600,
        "y": 60,
        "wires": []
    },
    {
        "id": "cd36dc8de00aa79e",
        "type": "ui_toast",
        "z": "67991373.45438c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "QBES Output",
        "name": "",
        "x": 3010,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "3c39b274d9df5304",
        "type": "function",
        "z": "67991373.45438c",
        "name": "Prepare notification for rules saved",
        "func": "msg.payload = \"Job Completed at \" + new Date().toLocaleString() + \"\\nSubmitted/Saved Rules: \" \n+ msg.payload.data.length +\"/\"\n+ msg.payload.rulesSaved.length\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2700,
        "y": 160,
        "wires": [
            [
                "cd36dc8de00aa79e",
                "f880226b0a4c82d0"
            ]
        ]
    },
    {
        "id": "097b7c36f8623668",
        "type": "ui_toast",
        "z": "67991373.45438c",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "Cancel",
        "raw": true,
        "className": "",
        "topic": "QBES Output",
        "name": "",
        "x": 1670,
        "y": 100,
        "wires": []
    },
    {
        "id": "3134b3146429fc29",
        "type": "inject",
        "z": "67991373.45438c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 3400,
        "y": 480,
        "wires": [
            [
                "bdf7069659cda7af"
            ]
        ]
    },
    {
        "id": "bdf7069659cda7af",
        "type": "function",
        "z": "67991373.45438c",
        "name": "Split RIDs array and prepare for QBES",
        "func": "\nmsg.payload = flow.get(\"reporting_id\") || []\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3650,
        "y": 480,
        "wires": [
            [
                "d8efd0a725820987"
            ]
        ]
    },
    {
        "id": "27cb39e661a5761a",
        "type": "delay",
        "z": "67991373.45438c",
        "name": "",
        "pauseType": "delay",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 3950,
        "y": 540,
        "wires": [
            [
                "7f28fb8befeb2f38"
            ]
        ]
    },
    {
        "id": "7f28fb8befeb2f38",
        "type": "function",
        "z": "67991373.45438c",
        "name": "Iterate over each RID",
        "func": "\nlet reporting_id = msg.payload\nlet QBESpayload = flow.get(\"QBESPayload\")\nQBESpayload.reporting_id = parseInt(reporting_id)\n msg.payload = QBESpayload\n\n \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 4280,
        "y": 480,
        "wires": [
            [
                "2d31a9cbb8b25e8f",
                "d7f2fcd5e791ba92"
            ]
        ]
    },
    {
        "id": "d8efd0a725820987",
        "type": "split",
        "z": "67991373.45438c",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3910,
        "y": 240,
        "wires": [
            [
                "27cb39e661a5761a"
            ]
        ]
    },
    {
        "id": "652ea1d3b066becc",
        "type": "debug",
        "z": "67991373.45438c",
        "name": "debug 45",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 4460,
        "y": 740,
        "wires": []
    },
    {
        "id": "5a1e132daec8024a",
        "type": "inject",
        "z": "2e37e573b3c922d6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"data\":[],\"message\":\"Submitting a job\",\"sentFrom\":\"QFlow\",\"sentTo\":\"Qbes\"}",
        "payloadType": "json",
        "x": 150,
        "y": 240,
        "wires": [
            [
                "a0412d3c94324572"
            ]
        ]
    },
    {
        "id": "a0412d3c94324572",
        "type": "http request",
        "z": "2e37e573b3c922d6",
        "name": "Post: ProcessRules ",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/notification",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            },
            {
                "keyType": "other",
                "keyValue": "DEBUG",
                "valueType": "other",
                "valueValue": "true"
            }
        ],
        "x": 330,
        "y": 240,
        "wires": [
            [
                "f93932c0230210fc"
            ]
        ]
    },
    {
        "id": "f93932c0230210fc",
        "type": "debug",
        "z": "2e37e573b3c922d6",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 240,
        "wires": []
    },
    {
        "id": "a33d0b789237415b",
        "type": "http in",
        "z": "2e37e573b3c922d6",
        "name": "Qflow Notifications Receiving Post /qflow/notification",
        "url": "/qflow/notification",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 320,
        "y": 380,
        "wires": [
            [
                "cec8ed2593f9fd72",
                "f8840d14f1031c7a"
            ]
        ]
    },
    {
        "id": "cec8ed2593f9fd72",
        "type": "debug",
        "z": "2e37e573b3c922d6",
        "name": "debug Got data from QBES",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 540,
        "wires": []
    },
    {
        "id": "f8840d14f1031c7a",
        "type": "function",
        "z": "2e37e573b3c922d6",
        "name": "Save Events",
        "func": "// NK will set the submitted flow to null\n\n// flow.set(\"submitted\", null)\n// initialise the counter to 0 if it doesn't exist already\nvar notificationLog = context.get('notificationLog')|| [];\n// msg.payload.data = JSON.stringify(msg.payload.data)\nnotificationLog.push(msg.payload);\nif (notificationLog.length > 200){\n    // Delete oldest message if > 20\n    notificationLog.shift();\n    notificationLog.length = 200;\n} \n\ncontext.set('notificationLog', [])\n// store the value back\ncontext.set('notificationLog', notificationLog);\n\n// make it part of the outgoing msg object\nmsg = {};\n// msg.payload = {\n//     command: 'addData',\n//     arguments:[msg.payload]\n// }\n\nmsg.payload = [...notificationLog];\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 380,
        "wires": [
            [
                "27055eaf0324d25e"
            ]
        ]
    },
    {
        "id": "965096e09ca7c885",
        "type": "ui_toast",
        "z": "2e37e573b3c922d6",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "QBES Output",
        "name": "",
        "x": 470,
        "y": 680,
        "wires": []
    },
    {
        "id": "01ad11cd828b155d",
        "type": "function",
        "z": "2e37e573b3c922d6",
        "name": "function 10",
        "func": "msg.payload = \"Job Completed at:\"+ new Date().toLocaleString()\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 680,
        "wires": [
            [
                "965096e09ca7c885"
            ]
        ]
    },
    {
        "id": "248ac488b1fb1009",
        "type": "ui_button",
        "z": "2e37e573b3c922d6",
        "name": "",
        "group": "48c415689cc2322d",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Reset Notifications",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-circle-o",
        "payload": "[]",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 190,
        "y": 300,
        "wires": [
            [
                "187350ae70435f47"
            ]
        ]
    },
    {
        "id": "187350ae70435f47",
        "type": "function",
        "z": "2e37e573b3c922d6",
        "name": "Clear context set notificationLog to []",
        "func": "context.set('notificationLog', []);\nmsg.payload = []\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 300,
        "wires": [
            [
                "27055eaf0324d25e"
            ]
        ]
    },
    {
        "id": "27055eaf0324d25e",
        "type": "ui_table",
        "z": "2e37e573b3c922d6",
        "group": "48c415689cc2322d",
        "name": "Output",
        "order": 5,
        "width": 23,
        "height": 15,
        "columns": [
            {
                "field": "DEBUG",
                "title": "#",
                "width": "",
                "align": "left",
                "formatter": "rownum",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "data.id",
                "title": "JOBS ID",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "message",
                "title": "Message",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "sentFrom",
                "title": "Sent From",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "sentTo",
                "title": "Sent To",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 790,
        "y": 300,
        "wires": [
            [
                "751a113306f1cfd5"
            ]
        ]
    },
    {
        "id": "751a113306f1cfd5",
        "type": "debug",
        "z": "2e37e573b3c922d6",
        "name": "JOBS Output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.data",
        "targetType": "jsonata",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 300,
        "wires": []
    },
    {
        "id": "f3903be4e24d8dca",
        "type": "http request",
        "z": "d103860e993c1512",
        "g": "7dc18555ca029842",
        "name": "API call to validate",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/reporting_unit/{{{rid}}}/validate?DEBUG=true",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            }
        ],
        "x": 430,
        "y": 40,
        "wires": [
            [
                "999bbdaf976e7feb"
            ]
        ]
    },
    {
        "id": "97d2bd49cb3742bc",
        "type": "inject",
        "z": "d103860e993c1512",
        "g": "7dc18555ca029842",
        "name": "Validate RID Input",
        "props": [
            {
                "p": "rid",
                "v": "8771348140",
                "vt": "num"
            },
            {
                "p": "topic",
                "vt": "str"
            },
            {
                "p": "payload.type",
                "v": "validate",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "VALIDATE",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "f3903be4e24d8dca",
                "d015bbe8f3761f7f"
            ]
        ]
    },
    {
        "id": "999bbdaf976e7feb",
        "type": "json",
        "z": "d103860e993c1512",
        "g": "7dc18555ca029842",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 40,
        "wires": [
            [
                "d529da54696a9982"
            ]
        ]
    },
    {
        "id": "d529da54696a9982",
        "type": "debug",
        "z": "d103860e993c1512",
        "g": "7dc18555ca029842",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 40,
        "wires": []
    },
    {
        "id": "e5ca7c9975e3a6b5",
        "type": "comment",
        "z": "d103860e993c1512",
        "g": "d1e0f39ddacfeb20",
        "name": "Validate a specific Reporting ID with all rules",
        "info": "## ## Validate a specific Reporting ID with all rules",
        "x": 670,
        "y": 140,
        "wires": []
    },
    {
        "id": "d015bbe8f3761f7f",
        "type": "debug",
        "z": "d103860e993c1512",
        "g": "7dc18555ca029842",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 80,
        "wires": []
    },
    {
        "id": "a52599d1e82370ad",
        "type": "inject",
        "z": "d103860e993c1512",
        "g": "5a28e866a67c90ec",
        "name": "Rule Generate from Free Text",
        "props": [
            {
                "p": "payload.conditionstring",
                "v": " What is the name, condition, compute as an array and message of the following rule and return it as a json:    Naveen:   I was talking to Patrick and he wanted another    rule name is \"IF the flag for hazardas materials is reported  and the NAICS is in 484\". It should have a rule priority of 5 on a scale of 1 to 10.   and condition is   substr(RECORD_NAICS_NUM, 1,3)== 484 and RCPT_MOTR_HAZRD_STAT == 1 and RCPT_MOTR_HAZRD_PCT == 0 if true then compute  RCPT_MOTR_HAZRD_STAT = 2  Send the message \"Hazardous Material rule fired\".  Do you think we could chat on this soon?  Thanks Amit",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "AI",
        "x": 180,
        "y": 400,
        "wires": [
            [
                "3773a11cc06cd9db"
            ]
        ]
    },
    {
        "id": "3773a11cc06cd9db",
        "type": "http request",
        "z": "d103860e993c1512",
        "g": "5a28e866a67c90ec",
        "name": "Post AI Services",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/openai/aicomplete",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            }
        ],
        "x": 440,
        "y": 400,
        "wires": [
            [
                "6970f9e5cadfae30"
            ]
        ]
    },
    {
        "id": "f47d58da6a345fa9",
        "type": "debug",
        "z": "d103860e993c1512",
        "g": "5a28e866a67c90ec",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.ruleName",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 400,
        "wires": []
    },
    {
        "id": "12d8ce370fc2153f",
        "type": "function",
        "z": "d103860e993c1512",
        "g": "5a28e866a67c90ec",
        "name": "Get RuleName",
        "func": "\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 320,
        "wires": [
            [
                "f47d58da6a345fa9"
            ]
        ]
    },
    {
        "id": "6970f9e5cadfae30",
        "type": "switch",
        "z": "d103860e993c1512",
        "g": "5a28e866a67c90ec",
        "name": "",
        "property": "payload.ruleName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 400,
        "wires": [
            [
                "12d8ce370fc2153f",
                "eee34fb243fcc025",
                "da904483e17171f2"
            ],
            []
        ]
    },
    {
        "id": "eee34fb243fcc025",
        "type": "debug",
        "z": "d103860e993c1512",
        "g": "5a28e866a67c90ec",
        "name": "Debug RuleName",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 500,
        "wires": []
    },
    {
        "id": "8764792a5250d529",
        "type": "comment",
        "z": "d103860e993c1512",
        "g": "5a28e866a67c90ec",
        "name": "Define AI end point. Pass free text",
        "info": "## # Open AI parse text",
        "x": 180,
        "y": 340,
        "wires": []
    },
    {
        "id": "2afe1b70382b1d3c",
        "type": "ui_toast",
        "z": "d103860e993c1512",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 770,
        "y": 620,
        "wires": []
    },
    {
        "id": "da904483e17171f2",
        "type": "change",
        "z": "d103860e993c1512",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.ruleName",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 680,
        "wires": [
            [
                "2afe1b70382b1d3c"
            ]
        ]
    },
    {
        "id": "f0bda8ccf069c334",
        "type": "inject",
        "z": "d886a3864a88d832",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "508c4d88817d96f3",
        "type": "switch",
        "z": "d886a3864a88d832",
        "name": "1.0 Estab or KAU Switch",
        "property": "facts.level_type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "d",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "e",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 310,
        "y": 60,
        "wires": [
            [
                "d45b30e5c09c6653"
            ],
            [
                "d45b30e5c09c6653"
            ],
            [
                "d457c366c48ae1e9"
            ]
        ]
    },
    {
        "id": "d45b30e5c09c6653",
        "type": "subflow:0111e67f54e25c8c",
        "z": "d886a3864a88d832",
        "name": "",
        "x": 580,
        "y": 40,
        "wires": [
            [
                "d457c366c48ae1e9"
            ]
        ]
    },
    {
        "id": "d457c366c48ae1e9",
        "type": "switch",
        "z": "d886a3864a88d832",
        "name": "2.0 Estab",
        "property": "facts.level_type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "e",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 620,
        "y": 200,
        "wires": [
            [
                "5a284359f94c5f07"
            ],
            [
                "48c251e7e1851bb1"
            ]
        ]
    },
    {
        "id": "5a284359f94c5f07",
        "type": "subflow:831dceaabaf975f9",
        "z": "d886a3864a88d832",
        "name": "",
        "x": 880,
        "y": 100,
        "wires": [
            [
                "48c251e7e1851bb1"
            ]
        ]
    },
    {
        "id": "4e38bfa9e516a9d7",
        "type": "subflow:10e53f47b43ab89e",
        "z": "d886a3864a88d832",
        "name": "4.0 Subflow Completeness",
        "x": 1220,
        "y": 300,
        "wires": [
            [
                "1393263d0d520dfd"
            ]
        ]
    },
    {
        "id": "1393263d0d520dfd",
        "type": "subflow:b99b7893add8c369",
        "z": "d886a3864a88d832",
        "name": "5.0 Logical Checks",
        "x": 1190,
        "y": 400,
        "wires": [
            [
                "22a7836fd0ee4876"
            ]
        ]
    },
    {
        "id": "22a7836fd0ee4876",
        "type": "subflow:27fccef587c0b218",
        "z": "d886a3864a88d832",
        "name": "6.0 Ratio/Range Testing",
        "x": 1210,
        "y": 480,
        "wires": [
            [
                "4242881485341267"
            ]
        ]
    },
    {
        "id": "4242881485341267",
        "type": "subflow:3fa869ffe40596e5",
        "z": "d886a3864a88d832",
        "name": "7.0 Post Ratio/Range",
        "x": 1200,
        "y": 540,
        "wires": [
            [
                "69135525ff74076e"
            ]
        ]
    },
    {
        "id": "69135525ff74076e",
        "type": "subflow:98b684914b5fce08",
        "z": "d886a3864a88d832",
        "name": "8.0 Unit Balance",
        "x": 1180,
        "y": 600,
        "wires": [
            [
                "f57362671b31528b"
            ]
        ]
    },
    {
        "id": "f57362671b31528b",
        "type": "subflow:2e55e3e8510e62d0",
        "z": "d886a3864a88d832",
        "name": "9.0 Company Additivity Check",
        "x": 1230,
        "y": 680,
        "wires": [
            [
                "66f76ef1f55de5b8"
            ]
        ]
    },
    {
        "id": "66f76ef1f55de5b8",
        "type": "subflow:2ad5fa373c21d0a3",
        "z": "d886a3864a88d832",
        "name": "10.0 Derived Items",
        "x": 1210,
        "y": 760,
        "wires": [
            [
                "0f8306d8913bb7d2"
            ]
        ]
    },
    {
        "id": "0f8306d8913bb7d2",
        "type": "subflow:67a3cd3b754e4fbd",
        "z": "d886a3864a88d832",
        "name": "11.0 Post Edit Status Fields",
        "x": 1240,
        "y": 840,
        "wires": [
            [
                "a0acac50eaa1f639"
            ]
        ]
    },
    {
        "id": "a0acac50eaa1f639",
        "type": "debug",
        "z": "d886a3864a88d832",
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 940,
        "wires": []
    },
    {
        "id": "48c251e7e1851bb1",
        "type": "subflow:045ba1012eb08b50",
        "z": "d886a3864a88d832",
        "name": "3.0 Determine Status",
        "x": 1200,
        "y": 200,
        "wires": [
            [
                "4e38bfa9e516a9d7"
            ]
        ]
    },
    {
        "id": "3626fe7ffedf766a",
        "type": "inject",
        "z": "ae7e9f579855357c",
        "name": "Inject Worfklow ID",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SPAD",
        "payload": "29028",
        "payloadType": "num",
        "x": 130,
        "y": 40,
        "wires": [
            [
                "7a50cf774f7f5b56"
            ]
        ]
    },
    {
        "id": "8e6210b2e2cb1298",
        "type": "ui_date_picker",
        "z": "ae7e9f579855357c",
        "name": "",
        "label": "date",
        "group": "48c415689cc2322d",
        "order": 1,
        "width": 7,
        "height": 1,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 90,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "98626aec5c5ae44f",
        "type": "ui_text_input",
        "z": "ae7e9f579855357c",
        "name": "Input Workflow ID",
        "label": "Workflow ID",
        "tooltip": "Enter a Workflow ID from the SPAD",
        "group": "48c415689cc2322d",
        "order": 2,
        "width": 7,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "7a50cf774f7f5b56"
            ]
        ]
    },
    {
        "id": "39fd1017ceb52b5b",
        "type": "ui_table",
        "z": "ae7e9f579855357c",
        "group": "440f78388bf9306a",
        "name": "Rules Repository",
        "order": 1,
        "width": 29,
        "height": "15",
        "columns": [
            {
                "field": "id",
                "title": "ID",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "type",
                "title": "Type",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "name",
                "title": "Description",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "conditions",
                "title": "Conditions",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "event",
                "title": "Event",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "active",
                "title": "Active",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "rvs",
                "title": "RV",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 1170,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "bfe5e89f0b386ed1",
        "type": "subflow:c5ce2d38887016b2",
        "z": "ae7e9f579855357c",
        "name": "",
        "x": 930,
        "y": 60,
        "wires": [
            [
                "3d9d45286705cfca"
            ],
            [
                "9bce07e0bcd382ef",
                "39fd1017ceb52b5b"
            ]
        ]
    },
    {
        "id": "7a50cf774f7f5b56",
        "type": "http request",
        "z": "ae7e9f579855357c",
        "name": "Get Workflow by ID",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/spad/{{{payload}}}?DEBUG=true",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            }
        ],
        "x": 350,
        "y": 60,
        "wires": [
            [
                "b3a3ee5bc8d56868"
            ]
        ]
    },
    {
        "id": "b3a3ee5bc8d56868",
        "type": "function",
        "z": "ae7e9f579855357c",
        "name": "Get Facts from SPAD (WorkflowID)",
        "func": "msg.payload.facts = msg.payload.data[0].facts\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 60,
        "wires": [
            [
                "bfe5e89f0b386ed1"
            ]
        ]
    },
    {
        "id": "9526c76a9c6d970d",
        "type": "function",
        "z": "ae7e9f579855357c",
        "name": "Get Facts from DB",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 180,
        "wires": [
            [
                "bfe5e89f0b386ed1"
            ]
        ]
    },
    {
        "id": "7152a57907490b4f",
        "type": "function",
        "z": "ae7e9f579855357c",
        "name": "Get Facts from Spreadsheet",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 280,
        "wires": [
            [
                "bfe5e89f0b386ed1"
            ]
        ]
    },
    {
        "id": "3d9d45286705cfca",
        "type": "debug",
        "z": "ae7e9f579855357c",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 20,
        "wires": []
    },
    {
        "id": "d1031d25749eacc3",
        "type": "comment",
        "z": "ae7e9f579855357c",
        "name": "Call Qbes for Workflow IDs",
        "info": "",
        "x": 170,
        "y": 220,
        "wires": []
    },
    {
        "id": "9bce07e0bcd382ef",
        "type": "function",
        "z": "ae7e9f579855357c",
        "name": "Balancing",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "066706819d742338",
        "type": "inject",
        "z": "ae7e9f579855357c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 380,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "9aba292ca0c69b17",
        "type": "file in",
        "z": "ae7e9f579855357c",
        "name": "",
        "filename": "",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 120,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "a55094dd0e9394ea",
        "type": "debug",
        "z": "908af5a748b37aba",
        "name": "message",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload.rows",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 80,
        "wires": []
    },
    {
        "id": "3e68d1dde251bd01",
        "type": "inject",
        "z": "908af5a748b37aba",
        "name": "Select RV",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT-RV",
        "payload": "select  rvname as name, 'number' as type from response_variables;",
        "payloadType": "str",
        "x": 180,
        "y": 180,
        "wires": [
            [
                "25cd81b4ace00658"
            ]
        ]
    },
    {
        "id": "25cd81b4ace00658",
        "type": "function",
        "z": "908af5a748b37aba",
        "name": "function 1",
        "func": "msg.query = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 160,
        "wires": [
            [
                "a55094dd0e9394ea"
            ]
        ]
    },
    {
        "id": "e22cfefc78836d2d",
        "type": "inject",
        "z": "908af5a748b37aba",
        "name": "Get Rules",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "GET-RULES",
        "payload": "  select id, name, description, active, type, rvs,    parsed_rule->>'event' as event ,   parsed_rule->>'conditions' as conditions,   (parsed_rule)::TEXT parsed_rule, data   from aies.rules_repository ",
        "payloadType": "str",
        "x": 180,
        "y": 120,
        "wires": [
            [
                "25cd81b4ace00658"
            ]
        ]
    },
    {
        "id": "61d9fb3b9c7c1d2d",
        "type": "http request",
        "z": "908af5a748b37aba",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost/reporting_unit/8771348140/validate?DEBUG=true",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            }
        ],
        "x": 330,
        "y": 760,
        "wires": [
            [
                "2d03d52f5ca730a3"
            ]
        ]
    },
    {
        "id": "bbfa3ae528fd43ea",
        "type": "inject",
        "z": "908af5a748b37aba",
        "name": "CALL Validation GET",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "VALIDATE",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 840,
        "wires": [
            [
                "61d9fb3b9c7c1d2d"
            ]
        ]
    },
    {
        "id": "2d03d52f5ca730a3",
        "type": "json",
        "z": "908af5a748b37aba",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 760,
        "wires": [
            [
                "5c24612ef5d57c12"
            ]
        ]
    },
    {
        "id": "5c24612ef5d57c12",
        "type": "debug",
        "z": "908af5a748b37aba",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.rules",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 880,
        "wires": []
    },
    {
        "id": "44ef1682.4b53e8",
        "type": "function",
        "z": "908af5a748b37aba",
        "name": "",
        "func": "msg.payload = '<iframe src=\"http://localhost:8080/#/home\" width = \"1200\" height = \"800\"  frameborder = \"0\" ></iframe >';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "c99d37ca.90db78",
        "type": "ui_template",
        "z": "908af5a748b37aba",
        "group": "24e6f02ee5d4fe37",
        "name": "",
        "order": 3,
        "width": "13",
        "height": "8",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 630,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "80e5e88.32ed218",
        "type": "inject",
        "z": "908af5a748b37aba",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "http://localhost:8080/#/home",
        "payloadType": "str",
        "x": 230,
        "y": 1140,
        "wires": [
            [
                "44ef1682.4b53e8"
            ]
        ]
    },
    {
        "id": "4f32304b9c4675fc",
        "type": "ui_table",
        "z": "908af5a748b37aba",
        "group": "18e6e44c.b0561c",
        "name": "Rules Repository",
        "order": 3,
        "width": "14",
        "height": "4",
        "columns": [
            {
                "field": "id",
                "title": "ID",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "type",
                "title": "Type",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "name",
                "title": "Description",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "conditions",
                "title": "Conditions",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "event",
                "title": "Event",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "active",
                "title": "Active",
                "width": "10%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "rvs",
                "title": "RV",
                "width": "30%",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 590,
        "y": 260,
        "wires": [
            [
                "e9526a4d013da44f",
                "1f1180ec80919248"
            ]
        ]
    },
    {
        "id": "07687bc8cc1240b6",
        "type": "function",
        "z": "908af5a748b37aba",
        "name": "function 2",
        "func": "msg.payload = msg.payload.rows\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 280,
        "wires": [
            [
                "4f32304b9c4675fc"
            ]
        ]
    },
    {
        "id": "e9526a4d013da44f",
        "type": "debug",
        "z": "908af5a748b37aba",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 80,
        "wires": []
    },
    {
        "id": "1f1180ec80919248",
        "type": "ui_form",
        "z": "908af5a748b37aba",
        "name": "Edit Rule",
        "label": "",
        "group": "24e6f02ee5d4fe37",
        "order": 4,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Description",
                "value": "description",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Active",
                "value": "active",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Variables",
                "value": "rvs",
                "type": "text",
                "required": false,
                "rows": null
            },
            {
                "label": "Event",
                "value": "event",
                "type": "multiline",
                "required": true,
                "rows": 3
            },
            {
                "label": "Conditions",
                "value": "conditions",
                "type": "multiline",
                "required": false,
                "rows": 3
            },
            {
                "label": "DATA",
                "value": "data",
                "type": "text",
                "required": false,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "description": "",
            "active": "",
            "rvs": "",
            "event": "",
            "conditions": "",
            "data": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": true,
        "className": "",
        "x": 1060,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "5d42bef29ffced84",
        "type": "function",
        "z": "908af5a748b37aba",
        "name": "function 4",
        "func": "msg.payload = msg.payload.rows\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "3f936d74a59fd02d",
        "type": "link in",
        "z": "624a1e6caab6a819",
        "name": "link in 13",
        "links": [
            "dc2a2ca809797dbd",
            "8e91643b66472855"
        ],
        "x": 295,
        "y": 280,
        "wires": [
            [
                "31739108a9b57e14"
            ]
        ]
    },
    {
        "id": "edf06df5cb8410e9",
        "type": "link out",
        "z": "624a1e6caab6a819",
        "name": "link out 14",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9"
        ],
        "x": 645,
        "y": 440,
        "wires": []
    },
    {
        "id": "31739108a9b57e14",
        "type": "function",
        "z": "624a1e6caab6a819",
        "name": "function 17",
        "func": "// if ((msg.payload.csv[0].RECORD_TYP_TXT_TXT === \"00\" || msg.payload.csv[0].RECORD_TYP_TXT === \"10\" || msg.payload.csv[0].RECORD_TYP_TXT === \"20\" || msg.payload.csv[0].RECORD_TYP_TXT === \"30\" || msg.payload.csv[0].RECORD_TYP_TXT === \"90\") && msg.payload.csv[0].TABSTAT === \"N\") {\n//     msg.payload.csv[0].RECORD_TYP_TXT_TXT = \"BR_DELETE\";\n// } else if (Number(msg.payload.csv[0].RECORD_TYP_TXT) >= 20 && Number(msg.payload.csv[0].RECORD_TYP_TXT) <= 90 ) {\n//     msg.payload.csv[0].action = \"Call Critical Errors module\"\n// }\n// msg.payload.csv[0].action = \"Go to Determine Critical Error module\"\n// return msg;\n///// OLD CODE. TO BE REMOVED //////////////////////////////////\n\nlet record_idx = global.get(\"ptrModuleFacts\");\nlet record = msg.payload.csv[record_idx];\n\nfunction A(msg){\n    msg.payload.csv[record_idx].TABSTAT = \"N\";\n    msg.payload.csv[record_idx].NONTABFL = \"D\";\n    msg.payload.csv[record_idx].action = \"Exit Edit\";\n    return msg;\n}\n\n// Is RECORD_TYP_TXT in ('10','20','3O','90')\nif ([\"10\",\"20\",\"30\",\"90\"].includes(String(record.RECORD_TYP_TXT))) {\n    msg.payload.DEBUG_STATUS = \"RECORD_TYP_TXT-10-20-30-90-true\"\n    // Set TABSTAT and NONTABFL variables\n    msg.payload.csv[record_idx].TABSTAT = \"Y\";\n    msg.payload.csv[record_idx].NONTABFL = null;\n\n    // Is RECORD_TYP_TXT in ('10','20','90')\n    if ([\"10\", \"20\", \"90\"].includes(String(record.RECORD_TYP_TXT))) {\n        // Is BR_STAT equal to \"N\"\n        if (record.BR_STAT === \"N\") {\n            A(msg); // Go to A\n        } else { // BR_STAT not equal to \"N\"\n            // Is RECORD_TYP_TXT \"20\" or \"90\"\n            if ([\"20\", \"90\"].includes(String(record.RECORD_TYP_TXT))) {\n                msg.payload.csv[record_idx].action = \"Go to main Routing\";\n                return msg;\n\n            } else { // RECORD_TYP_TXT not \"20\" or \"90\"\n                msg.payload.csv[record_idx].action = \"Go to main Routing\";\n                return msg;\n            }\n        }\n\n    } else { // RECORD_TYP_TXT not in ('10','20','3O','90')\n        if (record.KAU_STAT === \"N\") {\n            A(msg); // Go to A\n        } else {\n            msg.payload.csv[record_idx].action = \"Go to main Routing\";\n            return msg;\n        }\n    }\n\n} else {  // RECORD_TYP_TXT not in ('10','20','3O','90')\n    msg.payload.record_idx = record_idx\n    msg.payload.DEBUG_STATUS = \"RECORD_TYP_TXT-10-20-30-90-false\"\n    msg.payload.csv[record_idx].action = \"ERROR\";\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 320,
        "wires": [
            [
                "bec885a462046a83",
                "edf06df5cb8410e9",
                "d37d70e2938e4e60",
                "3a075703ee487216"
            ]
        ]
    },
    {
        "id": "bec885a462046a83",
        "type": "debug",
        "z": "624a1e6caab6a819",
        "name": "BR_STAT eval output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 320,
        "wires": []
    },
    {
        "id": "d37d70e2938e4e60",
        "type": "switch",
        "z": "624a1e6caab6a819",
        "name": "CHECK ACTION",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ERROR",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EXIT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Go To Main Routing",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 710,
        "y": 540,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "3a075703ee487216",
        "type": "debug",
        "z": "624a1e6caab6a819",
        "name": "debug 93",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 380,
        "wires": []
    },
    {
        "id": "abe91f1e.21df",
        "type": "debug",
        "z": "c702b495.9cc2f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1050,
        "y": 120,
        "wires": []
    },
    {
        "id": "87b5b844.5719b8",
        "type": "inject",
        "z": "c702b495.9cc2f8",
        "name": "Input: Validate RID ",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "8771348140",
        "payloadType": "num",
        "x": 130,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "2bb5276.49b45d8",
        "type": "http request",
        "z": "c702b495.9cc2f8",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost/reporting_unit/{{{rid}}}/validate",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            },
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoor"
            }
        ],
        "x": 630,
        "y": 120,
        "wires": [
            [
                "178d7efeebb1045e",
                "21a1c9af.ba91a6"
            ]
        ]
    },
    {
        "id": "c775ecaa.a9813",
        "type": "function",
        "z": "c702b495.9cc2f8",
        "name": "Set HTTP Get Variable",
        "func": "// msg.rid = msg.req.params.rid\nmsg.limit = 100;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 240,
        "wires": [
            [
                "2bb5276.49b45d8"
            ]
        ]
    },
    {
        "id": "178d7efeebb1045e",
        "type": "json",
        "z": "c702b495.9cc2f8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 810,
        "y": 60,
        "wires": [
            [
                "abe91f1e.21df",
                "fd7db6633a9cb081"
            ]
        ]
    },
    {
        "id": "8bc8887358552ee6",
        "type": "http in",
        "z": "c702b495.9cc2f8",
        "name": "",
        "url": "/validate/:rid",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "fd7db6633a9cb081",
        "type": "http response",
        "z": "c702b495.9cc2f8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1070,
        "y": 220,
        "wires": []
    },
    {
        "id": "49d75074.37303",
        "type": "function",
        "z": "c702b495.9cc2f8",
        "name": "Assigning rid in msg",
        "func": "msg.rid=global.get('rid') ;\n// msg.b=global.get('b') ;\nmsg.payload = msg.rid\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 360,
        "wires": [
            [
                "c775ecaa.a9813"
            ]
        ]
    },
    {
        "id": "1373611.8d85b9f",
        "type": "inject",
        "z": "c702b495.9cc2f8",
        "name": "Initial Value",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "33",
        "payloadType": "num",
        "x": 170,
        "y": 480,
        "wires": [
            [
                "29981141.09dd9e"
            ]
        ]
    },
    {
        "id": "29981141.09dd9e",
        "type": "ui_text_input",
        "z": "c702b495.9cc2f8",
        "d": true,
        "name": "rid",
        "label": "Enter Reporting ID",
        "tooltip": "3449842849",
        "group": "1f48566b.e8958a",
        "order": 2,
        "width": 6,
        "height": 3,
        "passthru": true,
        "mode": "number",
        "delay": "0",
        "topic": "validate",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 390,
        "y": 480,
        "wires": [
            [
                "7894de12.4ed5f"
            ]
        ]
    },
    {
        "id": "7894de12.4ed5f",
        "type": "function",
        "z": "c702b495.9cc2f8",
        "name": "Store to Global Variable rid",
        "func": "global.set('rid',msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "21a1c9af.ba91a6",
        "type": "ui_text",
        "z": "c702b495.9cc2f8",
        "d": true,
        "group": "1f48566b.e8958a",
        "order": 9,
        "width": 23,
        "height": 9,
        "name": "",
        "label": "Result",
        "format": "{{msg.payload}} ",
        "layout": "row-spread",
        "className": "",
        "x": 990,
        "y": 440,
        "wires": []
    },
    {
        "id": "d433feb1.6365e",
        "type": "http in",
        "z": "7d4690e10f209584",
        "name": "",
        "url": "/index",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 160,
        "wires": [
            [
                "98b6cece.37871"
            ]
        ]
    },
    {
        "id": "98b6cece.37871",
        "type": "template",
        "z": "7d4690e10f209584",
        "name": "web-template",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n   <head>\n      <!-- The jQuery library is a prerequisite for all jqSuite products -->\n      <script type=\"text/ecmascript\" src=\"http://www.guriddo.net/demo/js/jquery.min.js\"></script> \n      <!-- We support more than 40 localizations -->\n      <script type=\"text/ecmascript\" src=\"http://www.guriddo.net/demo/js/trirand/i18n/grid.locale-en.js\"></script>\n      <!-- This is the Javascript file of jqGrid -->   \n      <script type=\"text/ecmascript\" src=\"http://www.guriddo.net/demo/js/trirand/jquery.jqGrid.min.js\"></script>\n      <!-- This is the localization file of the grid controlling messages, labels, etc.\n      <!-- A link to a jQuery UI ThemeRoller theme, more than 22 built-in and many more custom -->\n      <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"http://struts.jgeppert.com/struts2-jquery-grid-showcase/themes/showcase/jquery-ui.css\" />\n      <!-- The link to the CSS that the grid needs -->\n      <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"http://www.guriddo.net/demo/css/trirand/ui.jqgrid.css\" />\n      <meta charset=\"utf-8\" />\n      <title>Demo CRUD with jqGrid</title>\n      <script type=\"text/javascript\"></script>\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"http://www.guriddo.net/B1D671CF-E532-4481-99AA-19F420D90332/netdefender/hui/ndhui.css\" />\n   </head>\n   <body>\n      <script type=\"text/javascript\" language=\"javascript\" src=\"http://www.guriddo.net/B1D671CF-E532-4481-99AA-19F420D90332/netdefender/hui/ndhui.js?0=0&0=0&0=0\"></script>\n      <table id=\"jqGrid\"></table>\n      <div id=\"jqGridPager\"></div>\n      <script type=\"text/javascript\"> \n         $(document).ready(function () {\n             $(\"#jqGrid\").jqGrid({\n                 url: '/search',\n                 mtype: \"GET\",\n                 datatype: \"json\",\n                 colModel: [\n                     { label: 'ID', name: 'id', key: true, search: false, width: 75 },\n                     { label: 'Name', name: 'name', width: 150, editable: true, formoptions: { colpos: 1, rowpos: 1 }  },\n                     { label: 'Last Name', name: 'lastname', width: 150, editable: true, edittype: \"select\", formoptions: { colpos: 1, rowpos: 2 },\n                       editoptions: {\n                            dataUrl:'/search/lastname',\n                            type:\"GET\",\n                            buildSelect: function(data) {\n                                var response = jQuery.parseJSON(data); //JSON data\n                                var s = '<select>';\n                                if (response && response.length) {\n                                    s += '<option hidden=\"true\">--- Select Lastname ---</option>';\n                                    for (var i = 0, l=response.length; i<l ; i++) {\n                                    var id = response[i].id;\n                                    var val = response[i].value; \n                                    // You can concatenate ID or any other string here\n                                    //For example: var ri = response[i].id + response[i].value; \n                                        s += '<option value=\"'+id+'\">'+val+'</option>';\n                                    }\n                                }\n                                return s + \"</select>\";\n                            } \n                         } \n                     },\n                     { label: 'Code', name: 'code', width: 150, editable: true, formoptions: { colpos: 2, rowpos: 1 } },  \n                     { label: 'Married', name: 'married', width: 150, align: \"center\", search: false, editable: true, edittype: \"checkbox\", formatter: \"checkbox\", editoptions: { value: \"1:0\" }, formoptions: { colpos: 2, rowpos: 2 } }\n                 ],\n                 width: 500,\n                 height: 260,\n                 rowNum: 10,\n                 loadonce: true,\n                 viewrecords: true,\n                 pager: \"#jqGridPager\"\n             });\n             \n             $('#jqGrid').navGrid('#jqGridPager',\n                 // The buttons to appear on the toolbar of the grid\n                 { edit: true, add: true, del: true, search: true, refresh: true, view: true, position: \"left\", cloneToTop: true },\n                 \n                 // Options for the Edit Dialog\n                 {\n                     url: '/update',\n                     editCaption: \"The Edit Dialog\",\n                     recreateForm: true,\n\t\t\t\t\t //checkOnUpdate : true,\n\t\t\t\t\t //checkOnSubmit : true,\n\t\t\t\t\t beforeSubmit : function( postdata, form , oper) {\n\t\t\t\t\t\t if(confirm('Are you sure you want to update this information?') ) {\n\t\t\t\t\t\t\t // Do something\n\t\t\t\t\t\t \t return [true,'/update'];\n\t\t\t\t\t\t } else {\n\t\t\t\t\t\t\treturn [false, 'Update failed!'];\n\t\t\t\t\t\t }\n\t\t\t\t\t },\n                     afterSubmit: function () {\n                         $(this).jqGrid(\"setGridParam\", {datatype: 'json'});\n                         return [true];\n                     },\n                     closeAfterEdit: true,\n                     errorTextFormat: function (data) {\n                         return 'Error: ' + data.responseText\n                     }\n                 },\n                 // Options for the Add Dialog\n                 {\n                     url: '/insert',\n                     addCaption: \"Add Dialog\",\n                     afterSubmit: function () {\n                         $(this).jqGrid(\"setGridParam\", {datatype: 'json'});\n                         return [true];\n                     },\n                     closeAfterAdd: true,\n                     recreateForm: true,\n                     errorTextFormat: function (data) {\n                         return 'Error: ' + data.responseText\n                     }\n                 },\n                 // Options for the Delete Dialog\n                 {   \n                     url: '/delete',\n                     errorTextFormat: function (data) {\n                         return 'Error: ' + data.responseText\n                     }\n             });\n             $(\"#jqGrid\").jqGrid('filterToolbar', { stringResult: true, searchOnEnter: true });\n         });\n      </script>\n   </body>\n</html>",
        "output": "str",
        "x": 360,
        "y": 160,
        "wires": [
            [
                "3c1830eb.33b9"
            ]
        ]
    },
    {
        "id": "3c1830eb.33b9",
        "type": "http response",
        "z": "7d4690e10f209584",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1080,
        "y": 160,
        "wires": []
    },
    {
        "id": "ef285826.0e9738",
        "type": "http in",
        "z": "7d4690e10f209584",
        "name": "",
        "url": "/search",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "e396f56a.dcda38"
            ]
        ]
    },
    {
        "id": "e396f56a.dcda38",
        "type": "function",
        "z": "7d4690e10f209584",
        "name": "search-query",
        "func": "//msg.topic=\"SELECT CONCAT('M00','',test.id) AS id,test.name AS name,lastname.lastname AS lastname,test.code AS code,test.married AS married FROM test INNER JOIN lastname ON lastname.id = test.lastname ORDER BY test.id DESC\";\nmsg.query=\"SELECT * from response_variables  order by rvname\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 220,
        "wires": [
            [
                "37bbae99e2515339"
            ]
        ]
    },
    {
        "id": "458b0528.a4d98c",
        "type": "http response",
        "z": "7d4690e10f209584",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1080,
        "y": 220,
        "wires": []
    },
    {
        "id": "d84f16f7.3d9698",
        "type": "function",
        "z": "7d4690e10f209584",
        "name": "search-response",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 745,
        "y": 220,
        "wires": [
            [
                "2b952c3a.f63884",
                "054e18b51109bc59"
            ]
        ]
    },
    {
        "id": "2b952c3a.f63884",
        "type": "json",
        "z": "7d4690e10f209584",
        "name": "",
        "property": "payload.rows",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 220,
        "wires": [
            [
                "458b0528.a4d98c"
            ]
        ]
    },
    {
        "id": "c91568f0.c3f2f8",
        "type": "http in",
        "z": "7d4690e10f209584",
        "name": "",
        "url": "/insert",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 340,
        "wires": [
            [
                "81bb8cdf.93e5b"
            ]
        ]
    },
    {
        "id": "e4b82091.b8e9a",
        "type": "function",
        "z": "7d4690e10f209584",
        "name": "insert-response",
        "func": "msg.payload=msg.result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 735,
        "y": 340,
        "wires": [
            [
                "c224cbcf.e3e718"
            ]
        ]
    },
    {
        "id": "81bb8cdf.93e5b",
        "type": "function",
        "z": "7d4690e10f209584",
        "name": "insert-query",
        "func": "msg.topic=\"INSERT INTO test (name,lastname,code,married,timestamp) VALUES ('\" + msg.payload.name + \"','\" + msg.payload.lastname + \"','\" + msg.payload.code + \"','\" + msg.payload.married + \"',CURRENT_TIMESTAMP)\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "c224cbcf.e3e718",
        "type": "http response",
        "z": "7d4690e10f209584",
        "name": "",
        "x": 1080,
        "y": 340,
        "wires": []
    },
    {
        "id": "9929a22b.66471",
        "type": "function",
        "z": "7d4690e10f209584",
        "name": "lastname-query",
        "func": "msg.topic=\"SELECT id, lastname as value FROM lastname\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 360,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "4bfc0ef6.e8511",
        "type": "function",
        "z": "7d4690e10f209584",
        "name": "lastname-response",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 745,
        "y": 280,
        "wires": [
            [
                "7b9f8d8b.c6d4e4"
            ]
        ]
    },
    {
        "id": "c70c0833.831ab8",
        "type": "http in",
        "z": "7d4690e10f209584",
        "name": "",
        "url": "/search/lastname",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 280,
        "wires": [
            [
                "9929a22b.66471"
            ]
        ]
    },
    {
        "id": "f92b07.fa8e84f8",
        "type": "http response",
        "z": "7d4690e10f209584",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1080,
        "y": 280,
        "wires": []
    },
    {
        "id": "7b9f8d8b.c6d4e4",
        "type": "json",
        "z": "7d4690e10f209584",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 280,
        "wires": [
            [
                "f92b07.fa8e84f8"
            ]
        ]
    },
    {
        "id": "857ff60c.da9078",
        "type": "http in",
        "z": "7d4690e10f209584",
        "name": "",
        "url": "/delete",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 460,
        "wires": [
            [
                "5b19502.0bae0b"
            ]
        ]
    },
    {
        "id": "9a8b3fa.c0817c",
        "type": "function",
        "z": "7d4690e10f209584",
        "name": "delete-response",
        "func": "msg.payload=msg.result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 735,
        "y": 460,
        "wires": [
            [
                "4520409.a2751c"
            ]
        ]
    },
    {
        "id": "5b19502.0bae0b",
        "type": "function",
        "z": "7d4690e10f209584",
        "name": "delete-query",
        "func": "msg.topic=\"DELETE FROM test WHERE id='\" + msg.payload.id + \"'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "4520409.a2751c",
        "type": "http response",
        "z": "7d4690e10f209584",
        "name": "",
        "x": 1080,
        "y": 460,
        "wires": []
    },
    {
        "id": "b9aef47c.8f0938",
        "type": "http in",
        "z": "7d4690e10f209584",
        "name": "",
        "url": "/update",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 400,
        "wires": [
            [
                "930f03c1.94bd5"
            ]
        ]
    },
    {
        "id": "ece93a93.ebc878",
        "type": "function",
        "z": "7d4690e10f209584",
        "name": "update-response",
        "func": "msg.payload=msg.result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 745,
        "y": 400,
        "wires": [
            [
                "e51fe384.1db73"
            ]
        ]
    },
    {
        "id": "930f03c1.94bd5",
        "type": "function",
        "z": "7d4690e10f209584",
        "name": "update-query",
        "func": "msg.topic=\"UPDATE test SET name='\" + msg.payload.name + \"', lastname='\" + msg.payload.lastname + \"', code='\" + msg.payload.code + \"', married='\" + msg.payload.married + \"' WHERE id='\" + msg.payload.id + \"'\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "e51fe384.1db73",
        "type": "http response",
        "z": "7d4690e10f209584",
        "name": "",
        "x": 1080,
        "y": 400,
        "wires": []
    },
    {
        "id": "37bbae99e2515339",
        "type": "digitaloak-postgresql-query",
        "z": "7d4690e10f209584",
        "name": "PG-AIES",
        "server": "ea3e0b5d6b96f47a",
        "inputs": 1,
        "outputs": 1,
        "x": 540,
        "y": 220,
        "wires": [
            [
                "d84f16f7.3d9698"
            ]
        ]
    },
    {
        "id": "054e18b51109bc59",
        "type": "debug",
        "z": "7d4690e10f209584",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 80,
        "wires": []
    },
    {
        "id": "ee4d312b.cc342",
        "type": "ui_template",
        "z": "7d4690e10f209584",
        "group": "18e6e44c.b0561c",
        "name": "Search Sortable Table",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<style>\n\n<!--\n{\n      \"rvid\": \"165\",\n      \"rvname\": \"ACTV_MIO\",\n      \"mu_flag\": \"YES\",\n      \"kau_flag\": \"YES\",\n      \"estab_flag\": \"YES\",\n      \"rv_description\": \"Active months in operation - STG\",\n      \"qdm_flag\": \"YES\",\n      \"data_type\": \"STRING\",\n      \"visible\": \"1\",\n      \"created_by\": \"DATALOAD\",\n      \"created_date\": \"2022-05-23T15:49:23.000Z\",\n      \"last_modified_by\": \"faker001\",\n      \"last_modified_date\": \"2022-08-16T20:58:59.000Z\",\n      \"variable_type_id\": \"2\",\n      \"control_group_id\": \"22\"\n    },\n\n\n  -->\ntable {\n    color: #333;\n    font-family: Helvetica, Arial, sans-serif;\n    width: 100%;\n    border-collapse: collapse;\n    border-spacing: 0;\n}\ntd, th {\n    border: 1px solid transparent;\n    /* No more visible border */\n    height: 30px;\n    transition: all 0.3s;\n    /* Simple transition for hover effect */\n}\nth {\n    background: #DFDFDF;\n    /* Darken header a bit */\n    font-weight: bold;\n}\ntd {\n    background: #FAFAFA;\n}\n\n/* Cells in even rows (2,4,6...) are one color */\n\ntr:nth-child(even) td {\n    background: #F1F1F1;\n}\n\n/* Cells in odd rows (1,3,5...) are another (excludes header cells)  */\n\ntr:nth-child(odd) td {\n    background: #FEFEFE;\n}\ntr td:hover {\n    background: #666;\n    color: #FFF;\n}\n\n/* Hover cell effect! */\n    \n.animate-enter, \n.animate-leave\n{ \n    -webkit-transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n    -moz-transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n    -ms-transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n    -o-transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n    transition: 400ms cubic-bezier(0.250, 0.250, 0.750, 0.750) all;\n    position: relative;\n    display: block;\n} \n\n.animate-enter.animate-enter-active, \n.animate-leave {\n    opacity: 1;\n    top: 0;\n    height: 30px;\n}\n\n.animate-leave.animate-leave-active,\n.animate-enter {\n    opacity: 0;\n    top: -50px;\n    height: 0px;\n}\n    \n.container\n{\n    max-height: 450px;\n    overflow-y: scroll;\n    overflow-x: hidden;\n}\n</style>\n\n<div>\n     <form>\n      <span class=\"input-group\">\n          <i class=\"fa fa-search\"></i>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search\" ng-model=\"search\">\n      </span>      \n  </form>\n  <div class=\"container\" ng-app=\"sortApp\">\n\n      <table>\n        <thead>\n        <tr style=\"width:100%\">\n            <td>\n          <a href=\"#\">\n            Index\n          </a>\n        </td>\n        <td>\n          <a href=\"#\" ng-click=\"sortType = 'firstname'; sortReverse = !sortReverse\">\n            First Name \n            <span ng-show=\"sortType == 'firstname' && !sortReverse\" class=\"fa fa-caret-down\"></span>\n            <span ng-show=\"sortType == 'firstname' && sortReverse\" class=\"fa fa-caret-up\"></span>\n          </a>\n        </td>\n        <td>\n          <a href=\"#\" ng-click=\"sortType = 'lastname'; sortReverse = !sortReverse\">\n          Last Name \n            <span ng-show=\"sortType == 'lastname' && !sortReverse\" class=\"fa fa-caret-down\"></span>\n            <span ng-show=\"sortType == 'lastname' && sortReverse\" class=\"fa fa-caret-up\"></span>\n          </a>\n        </td>\n        <td>\n          <a href=\"#\" ng-click=\"sortType = '(age -0)'; sortReverse = !sortReverse\">\n            Age\n            <span ng-show=\"sortType == '(age -0)' && !sortReverse\" class=\"fa fa-caret-down\"></span>\n            <span ng-show=\"sortType == '(age -0)' && sortReverse\" class=\"fa fa-caret-up\"></span>\n          </a>\n        </td>\n\n          </tr>\n          </thead>\n          <tbody>\n        <tr ng-repeat=\"user in msg.options | orderBy:sortType:sortReverse | filter:search track by $index\" ng-click=\"msg.payload = user;send(msg);\" style=\"width:100%\" flex>\n                <td><b ng-bind=\"$index+1\"></b></td>\n               <td ng-bind=\"user.firstname\"></td>\n               <td ng-bind=\"user.lastname\"></td>\n               <td ng-bind=\"user.age\"></td>\n         </tr>\n        </tbody>\n      </table>\n\n</div>\n</div>\n</body></html>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 600,
        "y": 640,
        "wires": [
            [
                "e91124.de6c3ee"
            ]
        ]
    },
    {
        "id": "a60a7430.d10bd8",
        "type": "inject",
        "z": "7d4690e10f209584",
        "name": "Go",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 210,
        "y": 640,
        "wires": [
            [
                "bece8dfc.55e45"
            ]
        ]
    },
    {
        "id": "e91124.de6c3ee",
        "type": "debug",
        "z": "7d4690e10f209584",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 640,
        "wires": []
    },
    {
        "id": "bece8dfc.55e45",
        "type": "change",
        "z": "7d4690e10f209584",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "[{\"firstname\":\"Paul\",\"lastname\":\"Doe\",\"age\":24},{\"firstname\":\"Greg\",\"lastname\":\"Jones\",\"age\":31},{\"firstname\":\"Able\",\"lastname\":\"Smith\",\"age\":29}]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 640,
        "wires": [
            [
                "ee4d312b.cc342"
            ]
        ]
    },
    {
        "id": "3aece19508694869",
        "type": "ui_button",
        "z": "4821a41b2fd327fb",
        "name": "Button",
        "group": "d68e7be3.88f088",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Button",
        "tooltip": "",
        "color": "#fffff",
        "bgcolor": "",
        "icon": "fa-star",
        "payload": "true",
        "payloadType": "bool",
        "topic": "Button",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "71ec6c626243f535"
            ]
        ]
    },
    {
        "id": "bb213dd9d74c4713",
        "type": "ui_dropdown",
        "z": "4821a41b2fd327fb",
        "name": "Choice",
        "label": "Choose what you want ",
        "tooltip": "",
        "place": "",
        "group": "d68e7be3.88f088",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [
            {
                "label": "Choice 1 : String",
                "value": "String",
                "type": "str"
            },
            {
                "label": "Choice 2 : Number",
                "value": 4,
                "type": "num"
            },
            {
                "label": "Choice 3 :Boolean",
                "value": true,
                "type": "bool"
            }
        ],
        "payload": "",
        "topic": "Choice ",
        "x": 160,
        "y": 140,
        "wires": [
            [
                "71ec6c626243f535"
            ]
        ]
    },
    {
        "id": "bfd61d2bb51bb7d3",
        "type": "debug",
        "z": "4821a41b2fd327fb",
        "name": "Dashboard Log",
        "active": true,
        "tosidebar": true,
        "console": false,
        "complete": "payload",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 200,
        "wires": []
    },
    {
        "id": "e6fb6f269c616c1e",
        "type": "ui_switch",
        "z": "4821a41b2fd327fb",
        "name": "Light Switch",
        "label": "switch",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "Light Switch ",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 150,
        "y": 180,
        "wires": [
            [
                "71ec6c626243f535"
            ]
        ]
    },
    {
        "id": "e666116ddc314a9d",
        "type": "ui_slider",
        "z": "4821a41b2fd327fb",
        "name": "Slider",
        "label": "slider",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "Slider",
        "min": 0,
        "max": 10,
        "step": 1,
        "x": 170,
        "y": 220,
        "wires": [
            [
                "71ec6c626243f535"
            ]
        ]
    },
    {
        "id": "d6620b9a7fdd152f",
        "type": "ui_numeric",
        "z": "4821a41b2fd327fb",
        "name": "",
        "label": "numeric",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "Numérique",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": "",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "71ec6c626243f535"
            ]
        ]
    },
    {
        "id": "f3c2c582f77fb627",
        "type": "ui_text_input",
        "z": "4821a41b2fd327fb",
        "name": "",
        "label": "Text Entry Field ",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "Text Entry Feild",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "71ec6c626243f535"
            ]
        ]
    },
    {
        "id": "c053339d3d485845",
        "type": "ui_form",
        "z": "4821a41b2fd327fb",
        "name": "",
        "label": "Form in Node-RED ",
        "group": "54bca71e.4287f",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "Name",
                "type": "text",
                "required": true
            },
            {
                "label": "Number",
                "value": "Number",
                "type": "number",
                "required": false
            },
            {
                "label": "Email",
                "value": "Email",
                "type": "email",
                "required": false
            },
            {
                "label": "Password",
                "value": "Password",
                "type": "password",
                "required": false
            },
            {
                "label": "Check Box",
                "value": "Check Box",
                "type": "checkbox",
                "required": false
            },
            {
                "label": "Light Switch",
                "value": "Light Switch",
                "type": "switch",
                "required": false
            }
        ],
        "formValue": {
            "Name": "",
            "Number": "",
            "Email": "",
            "Password": "",
            "Check Box": false,
            "Light Switch": false
        },
        "payload": "",
        "submit": "Submit",
        "cancel": "Cancle",
        "topic": "Form",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "71ec6c626243f535"
            ]
        ]
    },
    {
        "id": "71ec6c626243f535",
        "type": "function",
        "z": "4821a41b2fd327fb",
        "name": "Save Events",
        "func": "\n// initialise the counter to 0 if it doesn't exist already\nvar dashboardLog = context.get('dashboardLog')|| [];\n\ndashboardLog.push(msg);\nif (dashboardLog.length > 20){\n    // Delete oldest message if > 20\n    dashboardLog.shift();\n    dashboardLog.length = 20;\n} \n\n\n// store the value back\ncontext.set('dashboardLog',dashboardLog);\n\n// make it part of the outgoing msg object\nmsg = {};\nmsg.payload = dashboardLog;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 260,
        "wires": [
            [
                "bfd61d2bb51bb7d3",
                "2851e691d3bfa1a6"
            ]
        ]
    },
    {
        "id": "2851e691d3bfa1a6",
        "type": "ui_template",
        "z": "4821a41b2fd327fb",
        "group": "785c383535b14b7d",
        "name": "Dashboard Event Log ",
        "order": 1,
        "width": "8",
        "height": "10",
        "format": "<ul>\n <li ng-repeat=\"x in msg.payload\">\n <font color=\"red\">{{x.topic}}</font>\n    <ul>\n        <li>{{x.payload}}</li>\n    </ul>\n </li>\n</ul>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 780,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "971963f55e94c5ec",
        "type": "ui_text_input",
        "z": "4821a41b2fd327fb",
        "name": "",
        "label": "Email Field",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "email",
        "delay": 300,
        "topic": "Email Field",
        "x": 150,
        "y": 340,
        "wires": [
            [
                "71ec6c626243f535"
            ]
        ]
    },
    {
        "id": "3cc9c2ca3da31eef",
        "type": "ui_text_input",
        "z": "4821a41b2fd327fb",
        "name": "",
        "label": "Password Field",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "password",
        "delay": 300,
        "topic": "Password ",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "71ec6c626243f535"
            ]
        ]
    },
    {
        "id": "864b89d6485ddac4",
        "type": "ui_text_input",
        "z": "4821a41b2fd327fb",
        "name": "",
        "label": "Select a color",
        "tooltip": "",
        "group": "d68e7be3.88f088",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "color",
        "delay": 300,
        "topic": "Select a color",
        "x": 140,
        "y": 420,
        "wires": [
            [
                "71ec6c626243f535"
            ]
        ]
    },
    {
        "id": "cffb599fd51d0200",
        "type": "http in",
        "z": "813a171cf0470b24",
        "name": "Test Input Point",
        "url": "/test",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 140,
        "wires": [
            [
                "3cc51bee5b3acd4c"
            ]
        ]
    },
    {
        "id": "0d49c1e77a91ecc4",
        "type": "debug",
        "z": "813a171cf0470b24",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 140,
        "wires": []
    },
    {
        "id": "3cc51bee5b3acd4c",
        "type": "function",
        "z": "813a171cf0470b24",
        "name": "function 6",
        "func": "msg.payload = \"Service called\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 140,
        "wires": [
            [
                "0d49c1e77a91ecc4"
            ]
        ]
    },
    {
        "id": "751ee28017f82114",
        "type": "function",
        "z": "ebc615704b7e2ae8",
        "name": "SUM(DET)>0 and TOT=0",
        "func": "msg.payload = {\n    \"facts\": {\n        \"failure\": 1,\n        \"SUM(DET)\": 1,\n        \"TOT\": 0\n    },\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 560,
        "wires": [
            [
                "11de8bde4637a9a8"
            ]
        ]
    },
    {
        "id": "3fc2c4e0ee9964c4",
        "type": "inject",
        "z": "ebc615704b7e2ae8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 880,
        "y": 460,
        "wires": [
            [
                "1527a2966802760b"
            ]
        ]
    },
    {
        "id": "1527a2966802760b",
        "type": "function",
        "z": "ebc615704b7e2ae8",
        "name": "Failure not present",
        "func": "msg.payload = {\n    \"facts\": {\n        \"failure\": 0,\n        \"SUM(DET)\": 1,\n        \"TOT\": 1\n    },\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 460,
        "wires": [
            [
                "11de8bde4637a9a8"
            ]
        ]
    },
    {
        "id": "04a24b4e62ec2c9f",
        "type": "inject",
        "z": "ebc615704b7e2ae8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 880,
        "y": 560,
        "wires": [
            [
                "751ee28017f82114"
            ]
        ]
    },
    {
        "id": "299c20ed5761987a",
        "type": "function",
        "z": "ebc615704b7e2ae8",
        "name": "SUM(DET)=0 and TOT>0",
        "func": "msg.payload = {\n    \"facts\": {\n        \"failure\": 1,\n        \"SUM(DET)\": 0,\n        \"TOT\": 1\n    },\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 660,
        "wires": [
            [
                "11de8bde4637a9a8"
            ]
        ]
    },
    {
        "id": "b6b113a3e3a05e13",
        "type": "inject",
        "z": "ebc615704b7e2ae8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 880,
        "y": 660,
        "wires": [
            [
                "299c20ed5761987a"
            ]
        ]
    },
    {
        "id": "c74c908267123db7",
        "type": "function",
        "z": "ebc615704b7e2ae8",
        "name": "SUM(DET)>0 and TOT>0",
        "func": "msg.payload = {\n    \"facts\": {\n        \"failure\": 1,\n        \"SUM(DET)\": 1,\n        \"TOT\": 1\n    },\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 760,
        "wires": [
            [
                "11de8bde4637a9a8"
            ]
        ]
    },
    {
        "id": "ad3a56ce27aeeeed",
        "type": "inject",
        "z": "ebc615704b7e2ae8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 880,
        "y": 760,
        "wires": [
            [
                "c74c908267123db7"
            ]
        ]
    },
    {
        "id": "1cc8638f5c3e5c18",
        "type": "function",
        "z": "ebc615704b7e2ae8",
        "name": "SUM(DET)=0 and TOT=0",
        "func": "msg.payload = {\n    \"facts\": {\n        \"failure\": 1,\n        \"SUM(DET)\": 0,\n        \"TOT\": 0\n    },\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 860,
        "wires": [
            [
                "11de8bde4637a9a8"
            ]
        ]
    },
    {
        "id": "1dfbf9ccaf916433",
        "type": "inject",
        "z": "ebc615704b7e2ae8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 880,
        "y": 860,
        "wires": [
            [
                "1cc8638f5c3e5c18"
            ]
        ]
    },
    {
        "id": "c3511da9c0380ee2",
        "type": "inject",
        "z": "ebc615704b7e2ae8",
        "name": "Inject Worfklow ID",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SPAD",
        "payload": "29028",
        "payloadType": "num",
        "x": 230,
        "y": 100,
        "wires": [
            [
                "43fa7108ad5731fb"
            ]
        ]
    },
    {
        "id": "92528f916a9d42e9",
        "type": "ui_text_input",
        "z": "ebc615704b7e2ae8",
        "name": "Input Workflow ID",
        "label": "Workflow ID",
        "tooltip": "Enter a Workflow ID from the SPAD",
        "group": "48c415689cc2322d",
        "order": 2,
        "width": 7,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 230,
        "y": 160,
        "wires": [
            [
                "43fa7108ad5731fb"
            ]
        ]
    },
    {
        "id": "8f07215339b32651",
        "type": "subflow:c5ce2d38887016b2",
        "z": "ebc615704b7e2ae8",
        "name": "",
        "x": 1030,
        "y": 120,
        "wires": [
            [
                "3b24e0953c2b9c64"
            ],
            []
        ]
    },
    {
        "id": "43fa7108ad5731fb",
        "type": "http request",
        "z": "ebc615704b7e2ae8",
        "name": "Get Workflow by ID",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://localhost/spad/{{{payload}}}?DEBUG=true",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "X-JBID",
                "valueType": "other",
                "valueValue": "kapoo"
            },
            {
                "keyType": "other",
                "keyValue": "X-API-KEY",
                "valueType": "other",
                "valueValue": "x5nDCpvGTkvHniq8wJ9m"
            }
        ],
        "x": 450,
        "y": 120,
        "wires": [
            [
                "10ed8cae4434227a"
            ]
        ]
    },
    {
        "id": "10ed8cae4434227a",
        "type": "function",
        "z": "ebc615704b7e2ae8",
        "name": "Get Facts from SPAD (WorkflowID)",
        "func": "msg.payload.facts = msg.payload.data[0].facts\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 120,
        "wires": [
            [
                "8f07215339b32651"
            ]
        ]
    },
    {
        "id": "c26c18b504bdf465",
        "type": "function",
        "z": "ebc615704b7e2ae8",
        "name": "Get Facts from DB",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 240,
        "wires": [
            [
                "8f07215339b32651"
            ]
        ]
    },
    {
        "id": "43ed29bdfec959cc",
        "type": "function",
        "z": "ebc615704b7e2ae8",
        "name": "Get Facts from Spreadsheet",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 340,
        "wires": [
            [
                "8f07215339b32651"
            ]
        ]
    },
    {
        "id": "3b24e0953c2b9c64",
        "type": "function",
        "z": "ebc615704b7e2ae8",
        "name": "function 11",
        "func": "\nmsg.payload.facts.failure = 1\nmsg.payload.facts[\"SUM(DET)\"] = 1\nmsg.payload.facts[\"TOT\"] = 0\n\nmsg.payload.csv = [{}]\nmsg.payload.csv[0] = msg.payload.facts\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 320,
        "wires": [
            [
                "92069d020a645ba5",
                "11de8bde4637a9a8"
            ]
        ]
    },
    {
        "id": "92069d020a645ba5",
        "type": "debug",
        "z": "ebc615704b7e2ae8",
        "name": "debug 44",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 240,
        "wires": []
    },
    {
        "id": "d43d98523cecf095",
        "type": "link in",
        "z": "ebc615704b7e2ae8",
        "name": "link in 14",
        "links": [
            "7520a5a2d8404846",
            "1d6882431fd8622b"
        ],
        "x": 1435,
        "y": 500,
        "wires": [
            [
                "11de8bde4637a9a8",
                "6461700eed93af3c"
            ]
        ]
    },
    {
        "id": "9b085224f1089d53",
        "type": "debug",
        "z": "ebc615704b7e2ae8",
        "name": "Go To: Company Additivity Check",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2060,
        "y": 520,
        "wires": []
    },
    {
        "id": "11de8bde4637a9a8",
        "type": "switch",
        "z": "ebc615704b7e2ae8",
        "name": "Failure Present?",
        "property": "payload.csv[0].failure",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1560,
        "y": 660,
        "wires": [
            [
                "d4dbcb211cdb2e13"
            ],
            [
                "7aeadf48809a024a",
                "d631b7c1b3f67b00"
            ]
        ]
    },
    {
        "id": "d4dbcb211cdb2e13",
        "type": "function",
        "z": "ebc615704b7e2ae8",
        "name": "Failure is not present",
        "func": "msg.payload.csv[0].action = \"Go To: Company Additivity Check\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1800,
        "y": 520,
        "wires": [
            [
                "9b085224f1089d53",
                "4e52903910e4d97b"
            ]
        ]
    },
    {
        "id": "7aeadf48809a024a",
        "type": "switch",
        "z": "ebc615704b7e2ae8",
        "name": "SUM(DET) = 0 || SUM(DET) > 0",
        "property": "payload.csv[0][\"SUM(DET)\"]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1830,
        "y": 840,
        "wires": [
            [
                "594d1934dd5ccf1b"
            ],
            [
                "0784305320700a40"
            ]
        ]
    },
    {
        "id": "594d1934dd5ccf1b",
        "type": "switch",
        "z": "ebc615704b7e2ae8",
        "name": "SUM(DET)=0 && [TOT = 0 || TOT >0]",
        "property": "payload.csv[0][\"TOT\"]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2170,
        "y": 760,
        "wires": [
            [
                "8b52f2e03f6b0b70"
            ],
            [
                "795397987b2a49b7"
            ]
        ]
    },
    {
        "id": "0784305320700a40",
        "type": "switch",
        "z": "ebc615704b7e2ae8",
        "name": "SUM(DET)=0 && [TOT = 0 || TOT >0]",
        "property": "payload.csv[0][\"TOT\"]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2170,
        "y": 920,
        "wires": [
            [
                "9ff33c64e58ec21f"
            ],
            [
                "98f3fa50f4e3cd02"
            ]
        ]
    },
    {
        "id": "9ff33c64e58ec21f",
        "type": "function",
        "z": "ebc615704b7e2ae8",
        "name": "SUM(DET)>0 and TOT=0",
        "func": "msg.payload.csv[0][\"TOT\"] = msg.payload.csv[0][\"SUM(DET)\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 900,
        "wires": [
            [
                "d6c96ee5ed2662fa",
                "4e52903910e4d97b"
            ]
        ]
    },
    {
        "id": "795397987b2a49b7",
        "type": "function",
        "z": "ebc615704b7e2ae8",
        "name": "SUM(DET)=0 and TOT>0",
        "func": "msg.payload.csv[0].action = \"Proate data based on X(DET) = TOT\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 780,
        "wires": [
            [
                "54f845d7783dae6d",
                "4e52903910e4d97b"
            ]
        ]
    },
    {
        "id": "8b52f2e03f6b0b70",
        "type": "function",
        "z": "ebc615704b7e2ae8",
        "name": "SUM(DET)=0 and TOT=0",
        "func": "msg.payload.csv[0].action = \"Impute?\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 740,
        "wires": [
            [
                "3eb1863692f174b0",
                "4e52903910e4d97b"
            ]
        ]
    },
    {
        "id": "98f3fa50f4e3cd02",
        "type": "function",
        "z": "ebc615704b7e2ae8",
        "name": "SUM(DET)>0 and TOT>0",
        "func": "msg.payload.csv[0][\"ESMD\"] = msg.payload.csv[0][\"SUM(DET)\"] / msg.payload.csv[0][\"TOT\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2450,
        "y": 1020,
        "wires": [
            [
                "117f7620efb84422",
                "4e52903910e4d97b"
            ]
        ]
    },
    {
        "id": "3eb1863692f174b0",
        "type": "debug",
        "z": "ebc615704b7e2ae8",
        "name": "balance output 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2670,
        "y": 740,
        "wires": []
    },
    {
        "id": "54f845d7783dae6d",
        "type": "debug",
        "z": "ebc615704b7e2ae8",
        "name": "balance output 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2670,
        "y": 780,
        "wires": []
    },
    {
        "id": "d6c96ee5ed2662fa",
        "type": "debug",
        "z": "ebc615704b7e2ae8",
        "name": "balance output 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2670,
        "y": 900,
        "wires": []
    },
    {
        "id": "117f7620efb84422",
        "type": "switch",
        "z": "ebc615704b7e2ae8",
        "name": "msg.payload[\"ESMD\"]",
        "property": "payload.csv[0][\"ESMD\"]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "btwn",
                "v": "0.8",
                "vt": "num",
                "v2": "1.2",
                "v2t": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2680,
        "y": 1020,
        "wires": [
            [
                "25247c97a53e8d68"
            ],
            [
                "1c783596898c8467"
            ]
        ]
    },
    {
        "id": "25247c97a53e8d68",
        "type": "function",
        "z": "ebc615704b7e2ae8",
        "name": "Set TOTAL = SUM(DET)",
        "func": "msg.payload.csv[0][\"TOTAL\"] = msg.payload.csv[0][\"SUM(DET)\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2930,
        "y": 980,
        "wires": [
            [
                "b1d071a4c7595931",
                "4e52903910e4d97b"
            ]
        ]
    },
    {
        "id": "1c783596898c8467",
        "type": "switch",
        "z": "ebc615704b7e2ae8",
        "name": "INDP(ind and geo)>1?",
        "property": "payload.csv[0].INDP",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2920,
        "y": 1080,
        "wires": [
            [
                "e57d82407e9255e7"
            ],
            [
                "c3405e214ce0544a"
            ]
        ]
    },
    {
        "id": "b1d071a4c7595931",
        "type": "debug",
        "z": "ebc615704b7e2ae8",
        "name": "balance output 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3150,
        "y": 980,
        "wires": []
    },
    {
        "id": "9831d99463f98853",
        "type": "debug",
        "z": "ebc615704b7e2ae8",
        "name": "balance output 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3370,
        "y": 1060,
        "wires": []
    },
    {
        "id": "7b38443176fcdeba",
        "type": "debug",
        "z": "ebc615704b7e2ae8",
        "name": "balance output 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 3330,
        "y": 1100,
        "wires": []
    },
    {
        "id": "e57d82407e9255e7",
        "type": "function",
        "z": "ebc615704b7e2ae8",
        "name": "SET IMPUTATION FLAG",
        "func": "msg.payload.csv[0].action = \"SET IMPUTATION FLAG?\"\nmsg.payload.csv[0][\"Varx-IMBALANCE\"] = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3150,
        "y": 1060,
        "wires": [
            [
                "9831d99463f98853",
                "4e52903910e4d97b"
            ]
        ]
    },
    {
        "id": "c3405e214ce0544a",
        "type": "function",
        "z": "ebc615704b7e2ae8",
        "name": "Rake (DET) = TOT",
        "func": "msg.payload.csv[0][\"Rake(DET)\"] = msg.payload.csv[0][\"TOT\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 3130,
        "y": 1100,
        "wires": [
            [
                "7b38443176fcdeba",
                "4e52903910e4d97b"
            ]
        ]
    },
    {
        "id": "4e52903910e4d97b",
        "type": "link out",
        "z": "ebc615704b7e2ae8",
        "name": "link out 16",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9"
        ],
        "x": 2825,
        "y": 360,
        "wires": []
    },
    {
        "id": "d631b7c1b3f67b00",
        "type": "debug",
        "z": "ebc615704b7e2ae8",
        "name": "debug 46",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1840,
        "y": 660,
        "wires": []
    },
    {
        "id": "6461700eed93af3c",
        "type": "debug",
        "z": "ebc615704b7e2ae8",
        "name": "debug 57",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1580,
        "y": 400,
        "wires": []
    },
    {
        "id": "2c6bccf874de19c8",
        "type": "link in",
        "z": "01f5b46ca228a07e",
        "name": "link in 16",
        "links": [
            "dbbcb48515f896cb"
        ],
        "x": 185,
        "y": 80,
        "wires": [
            [
                "80a0b818fdf305bc"
            ]
        ]
    },
    {
        "id": "80a0b818fdf305bc",
        "type": "function",
        "z": "01f5b46ca228a07e",
        "name": "NONNORM module",
        "func": "if (msg.payload.csv[0].OPSTATS === \"Y\") {\n    if (msg.payload.csv[0].SURVUTYP === \"MU\" && msg.payload.csv[0].ACTVMIO < 12 && (msg.payload.csv[0].ACTVMIO_F === \"L\" || msg.payload.csv[0].EPPAYANN === 0)) {\n        msg.payload.csv[0].NONNORM = \"B\";\n        msg.payload.csv[0].NONNORM_F = \"J\";\n    } else {\n        if (msg.payload.csv[0].ACTVMIO < 12) {\n            msg.payload.csv[0].NONNORM = \"S\";\n            msg.payload.csv[0].NONNORM_F = \"J\";\n        }\n    }\n} else {\n    msg.payload.csv[0].NONNORM = \"D\";\n    msg.payload.csv[0].NONNORM_F = \"J\";\n}\nmsg.payload.csv[0].A = true\nmsg.payload.csv[0].action = \"Return to RWS NonNORM Routing\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 140,
        "wires": [
            [
                "3327d8455cf7e97b",
                "b37e6545ddd4e8be"
            ]
        ]
    },
    {
        "id": "3327d8455cf7e97b",
        "type": "debug",
        "z": "01f5b46ca228a07e",
        "name": "Set_NONNORM output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 140,
        "wires": []
    },
    {
        "id": "b37e6545ddd4e8be",
        "type": "link out",
        "z": "01f5b46ca228a07e",
        "name": "link out 13",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9"
        ],
        "x": 445,
        "y": 200,
        "wires": []
    },
    {
        "id": "7d91540d69ac16c1",
        "type": "link in",
        "z": "b658ecf4c9aae708",
        "name": "link in 17",
        "links": [
            "02482c164222726b",
            "434436c270b7f283",
            "4e52903910e4d97b",
            "a6ab628560a7c8c9",
            "b37e6545ddd4e8be",
            "bad79e5ee645cc24",
            "eb575c3f71964e1e",
            "edf06df5cb8410e9",
            "f7e7a2a2e4eb195a",
            "d6c45ec5ceb3d90d",
            "2e09b853297763c9",
            "05e1e9f94e92a19d",
            "62e629bde644c4ac",
            "312be7f6e10bbadc",
            "b6899b0c09b0259e",
            "1550efeda1667825",
            "7dae0df881453eeb",
            "45908235e45f6dfd",
            "eda519aa8a1db303",
            "8b699616f9c5a9b5",
            "d9030a8fd1f031b8",
            "63e57e09491e405e",
            "fcf92106d34fe5ff",
            "aafa3aaec7fae7e6",
            "d167c6cf7b89444d",
            "ca558b1ab669675d"
        ],
        "x": 205,
        "y": 260,
        "wires": [
            [
                "9ef8d3c13114fdf5"
            ]
        ]
    },
    {
        "id": "9ef8d3c13114fdf5",
        "type": "function",
        "z": "b658ecf4c9aae708",
        "name": "Post Data Format",
        "func": "// let arr = []\n\n// if (msg.payload.csv) {\n//     msg.payload = msg.payload.csv\n// }\n\n// for (let prop in msg.payload[0]) {\n//     if (msg.payload[0].hasOwnProperty(prop)) {\n//         arr.push(\n//             {\n//                 \"postData\": JSON.stringify(prop) + \": \" + JSON.stringify(msg.payload[0][prop])\n//             }\n//         )\n//     }\n// }\n\n// msg.payload = arr\n// return msg;\n\n// ------\n\n// let postDataObj = {};\n\n// if (msg.payload.csv) {\n//     msg.payload = msg.payload.csv;\n// }\n\n// for (let prop in msg.payload[0]) {\n//     if (msg.payload[0].hasOwnProperty(prop)) {\n//         postDataObj[prop] = msg.payload[0][prop];\n//     }\n// }\n\n// msg.topic = \"post\"; // Add a topic to help the join node distinguish between pre and post data\n// msg.payload = postDataObj; // The payload is now an object containing all the post-data variables\n// return msg;\n\n\n// --------\n\n// Initialize postDataObj to an empty object\nlet postDataObj = {};\n\n// Check if msg.payload.csv exists and if so, use it\nif (msg.payload.csv) {\n    msg.payload = msg.payload.csv;\n}\n\n// Check if msg.payload[0] exists\n\n// get the global pointer in the csv\nlet ptr = global.get(\"ptrModuleFacts\") || 0\n\n\nif (msg.payload[ptr]) {\n    // Loop through the properties of msg.payload[0]\n    for (let prop in msg.payload[ptr]) {\n        if (msg.payload[ptr].hasOwnProperty(prop)) {\n            postDataObj[prop] = msg.payload[ptr][prop];\n        }\n    }\n} else {\n    // If msg.payload[0] doesn't exist, postDataObj remains an empty object\n    postDataObj = {};\n}\n\nmsg.topic = \"post\";  // Add a topic to help the join node distinguish between pre and post data\nmsg.payload = {\n    \"post\": postDataObj  // The payload is now an object containing all the post-data variables\n}\nreturn msg;  // Return the modified message object\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 260,
        "wires": [
            [
                "5f0e9f1e3f037661"
            ]
        ]
    },
    {
        "id": "617d768f3414b52e",
        "type": "link in",
        "z": "b658ecf4c9aae708",
        "name": "link in 19",
        "links": [
            "500b5d417bd3a1ee",
            "8fc8da4acdeb51a4"
        ],
        "x": 75,
        "y": 240,
        "wires": [
            [
                "02d678f5c34fe438",
                "ceeca7b3bb06c2d8"
            ]
        ]
    },
    {
        "id": "ceeca7b3bb06c2d8",
        "type": "function",
        "z": "b658ecf4c9aae708",
        "name": "PreData Format",
        "func": "let preDataObj = {};\n\nif (msg.payload.csv) {\n    msg.payload = msg.payload.csv;\n}\nlet ptr = global.get(\"ptrModuleFacts\") || 0\n\nfor (let prop in msg.payload[ptr]) {\n    if (msg.payload[ptr].hasOwnProperty(prop)) {\n        preDataObj[prop] = msg.payload[ptr][prop];\n    }\n}\n\nmsg.topic = \"pre\"; // Add a topic to help the join node distinguish between pre and post data\n// msg.payload = preDataObj; // The payload is now an object containing all the pre-data variables\nmsg.payload = {\n    'pre': global.get(\"originalData\")// preDataObj // NK\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 200,
        "wires": [
            [
                "dcc989e7a52a4892",
                "5f0e9f1e3f037661"
            ]
        ]
    },
    {
        "id": "fe9f3d905539c784",
        "type": "function",
        "z": "b658ecf4c9aae708",
        "name": "Table Display Pre/Post/Changes",
        "func": "// Retrieve existing tableData from context, or initialize to an empty array if it doesn't exist\nvar tableData = flow.get(\"tableData\") || [];\n\n// var tableData = global.get(\"tableData\") || []; // NK added\n\n// Function to find an existing row based on \"Variable\" field\nfunction findRow(variable) {\n    return tableData.find(r => r.Variable === variable);\n}\n\n// Handle \"pre\" data\nif (msg.topic === \"pre\") {\n    let preData = msg.payload.pre;\n\n    // Update existing rows and/or add new rows\n    for (let key in preData) {\n        if (preData.hasOwnProperty(key)) {\n            let row = findRow(key);\n            if (!row) {\n                row = {\n                    \"Variable\": key,\n                    \"Pre\": preData[key],\n                    \"Post\": \"Not Available\",\n                    \"Changed_Indicator\": \"\"\n                };\n                tableData.push(row);\n            } else {\n                row.Pre = preData[key];\n            }\n        }\n    }\n\n    // Handle \"post\" data\n} else if (msg.topic === \"post\") {\n    let postData = msg.payload.post;\n\n    // Update existing rows with post data\n    tableData.forEach(function (row) {\n        if (postData.hasOwnProperty(row.Variable)) {\n            row.Post = postData[row.Variable];\n            if (row.Pre !== \"Not Available\" && row.Pre !== row.Post) {\n                row.Changed_Indicator = \"Y\";\n            }\n        }\n    });\n\n    // Add new rows for new post data variables\n    for (let key in postData) {\n        if (postData.hasOwnProperty(key)) {\n            let row = findRow(key);\n            if (!row) {\n                row = {\n                    \"Variable\": key,\n                    \"Pre\": \"Not Available\",\n                    \"Post\": postData[key],\n                    \"Changed_Indicator\": \"Y\"\n                };\n                tableData.push(row);\n            }\n        }\n    }\n}\n\n// Save the updated tableData back into the context\nflow.set(\"tableData\", tableData);\n\n// Return the updated tableData as the message payload\nmsg.payload = tableData;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 220,
        "wires": [
            [
                "2b372b60778aab71"
            ]
        ]
    },
    {
        "id": "06c0561ca1caaf86",
        "type": "function",
        "z": "b658ecf4c9aae708",
        "name": "Insert Edits to Original Data",
        "func": "let variable = msg.payload.Pre.updates.Variable;\nlet preValue = msg.payload.Pre.updates.Pre;\n\n// Get the original data from the flow context, initialize to empty object if undefined\nlet original = flow.get('originalData') || {}; // commented NK\n// let original = global.get('originalData') || {}; // Added\n// Check if preValue can be converted to a number\nif (!isNaN(parseFloat(preValue)) && isFinite(preValue)) {\n    preValue = Number(preValue); // Convert to number\n}\n\noriginal[variable] = preValue; // Update the value in the object\n// global.set('originalData', original); //HF\n\n// flow.set('originalData', original); // Save the updated object back to flow context\n// flow.set('moduleFacts', original); // Save the updated object back to flow context\n\nconsole.log('original after', original);\nmsg.payload = [original]; // Update msg.payload to send the object further down the flow\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 140,
        "wires": [
            [
                "60931347e15bc805"
            ]
        ]
    },
    {
        "id": "8dee06773380424f",
        "type": "join",
        "z": "b658ecf4c9aae708",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1510,
        "y": 140,
        "wires": [
            [
                "06c0561ca1caaf86"
            ]
        ]
    },
    {
        "id": "dcc989e7a52a4892",
        "type": "function",
        "z": "b658ecf4c9aae708",
        "name": "Capture Original Data",
        "func": "msg.payload = {\n    original: msg.payload\n};\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 140,
        "wires": [
            [
                "8dee06773380424f"
            ]
        ]
    },
    {
        "id": "6b789f06055f6c99",
        "type": "function",
        "z": "b658ecf4c9aae708",
        "name": "Capture Table Edits",
        "func": "let p = msg.payload\n\nlet dataPtr = global.get(\"ptrModuleFacts\") || 0\n\nlet facts = global.get(\"moduleFacts\") || []\nlet fact = facts[dataPtr] || {}\n// get the key and value of the msg.payload.updates\nfact[p.Variable] = p.Pre\n\nfacts[dataPtr] = fact\nglobal.set(\"moduleFacts\", facts)\n// global.set(\"originalData\", facts[dataPtr]) //Hf\n\nmsg.payload = facts\nmsg.payload.updates = p\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 400,
        "wires": [
            [
                "8dee06773380424f",
                "88fa3b7e9e7044fd"
            ]
        ]
    },
    {
        "id": "5f0e9f1e3f037661",
        "type": "join",
        "z": "b658ecf4c9aae708",
        "name": "join",
        "mode": "custom",
        "build": "merged",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 550,
        "y": 220,
        "wires": [
            [
                "fe9f3d905539c784"
            ]
        ]
    },
    {
        "id": "02d678f5c34fe438",
        "type": "function",
        "z": "b658ecf4c9aae708",
        "name": "Table Display PreData Only",
        "func": "// Initialize tableData array to store rows\nvar tableData = [];\n\nlet preDataObj = {};\nif (msg.payload.csv) {\n    msg.payload = msg.payload.csv;\n}\nelse {\n    msg.payload = global.get(\"moduleFacts\")\n}\n\n// get the global pointer in the csv\nlet ptr = global.get(\"ptrModuleFacts\") || 0\n\nfor (let prop in msg.payload[ptr]) {\n    if (msg.payload[ptr].hasOwnProperty(prop)) {\n        preDataObj[prop] = msg.payload[ptr][prop];\n    }\n}\n\n// Prepare the payload for ui_table\nfor (let key in preDataObj) {\n    if (preDataObj.hasOwnProperty(key)) {\n        let row = {\n            \"Variable\": key,\n            \"Pre\": preDataObj[key],\n            \"Post\": \"\",  // Empty since Post data is not available\n            \"Changed_Indicator\": \"\"  // Empty since Post data is not available\n        };\n        tableData.push(row);\n    }\n}\n\nmsg.payload = tableData;  // Replace the payload with the array of table rows\nflow.set(\"tableData\", tableData);\nflow.set(\"originalData\", msg.payload[ptr]);\n\n\nreturn msg;  // Send the message for ui_table to display\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 400,
        "wires": [
            [
                "2b372b60778aab71",
                "f0f155bfff8415a5"
            ]
        ]
    },
    {
        "id": "2b372b60778aab71",
        "type": "ui_etable",
        "z": "b658ecf4c9aae708",
        "payload": "[{\"field\":\"Variable\",\"title\":\"Variable\",\"width\":250,\"align\":\"left\",\"formatter\":\"plaintext\"},{\"field\":\"Pre\",\"title\":\"Pre\",\"width\":150,\"align\":\"left\",\"formatter\":\"plaintext\",\"editor\":\"input\"},{\"field\":\"Post\",\"title\":\"Post\",\"width\":150,\"align\":\"left\",\"formatter\":\"plaintext\"},{\"field\":\"Changed_Indicator\",\"title\":\"Changed\",\"width\":100,\"align\":\"left\",\"formatter\":\"plaintext\"}]",
        "payloadType": "json",
        "options": "{}",
        "group": "1d1a43b7179c848f",
        "name": "Results",
        "order": 4,
        "width": 12,
        "height": 12,
        "columns": [],
        "outputs": 1,
        "cts": false,
        "x": 1040,
        "y": 400,
        "wires": [
            [
                "6b789f06055f6c99"
            ]
        ]
    },
    {
        "id": "60931347e15bc805",
        "type": "link out",
        "z": "b658ecf4c9aae708",
        "name": "link out 55",
        "mode": "link",
        "links": [
            "ca8be9e1afb53866"
        ],
        "x": 1915,
        "y": 140,
        "wires": []
    },
    {
        "id": "88fa3b7e9e7044fd",
        "type": "debug",
        "z": "b658ecf4c9aae708",
        "name": "Display Edited Data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1570,
        "y": 400,
        "wires": []
    },
    {
        "id": "f0f155bfff8415a5",
        "type": "debug",
        "z": "b658ecf4c9aae708",
        "name": "Checking for Select Record ptr",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 360,
        "wires": []
    },
    {
        "id": "665f97ef69efc31f",
        "type": "ui_text_input",
        "z": "b658ecf4c9aae708",
        "name": "",
        "label": "Search",
        "tooltip": "Enter text for search...",
        "group": "1d1a43b7179c848f",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 380,
        "y": 580,
        "wires": [
            [
                "2b40a9d2b73972ba"
            ]
        ]
    },
    {
        "id": "2b40a9d2b73972ba",
        "type": "function",
        "z": "b658ecf4c9aae708",
        "name": "Pass search data for tabledata",
        "func": "// msg.payload = {\n//     command: \"searchData\",\n//     arguments: [msg.payload],  // search term from ui_text_input\n//     returnPromise: true\n// };\n\n\n\n// Sample data (replace with your actual data source or previous payload)\nvar data = flow.get(\"tableData\")\n\n// Filter the data based on the search term\nvar searchTerm = msg.payload;\nvar filteredData = data.filter(row => {\n    return Object.values(row).some(value => String(value).toLowerCase().includes(searchTerm.toLowerCase()));\n});\n\nmsg.payload = filteredData;\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 580,
        "wires": [
            [
                "2b372b60778aab71",
                "57f21802ddfb06f5"
            ]
        ]
    },
    {
        "id": "57f21802ddfb06f5",
        "type": "debug",
        "z": "b658ecf4c9aae708",
        "name": "debug 92",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 580,
        "wires": []
    },
    {
        "id": "f21a93fafc0f5662",
        "type": "ui_button",
        "z": "5e1c7c0d7569a4cb",
        "name": "",
        "group": "ef4f9868d6da5e21",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Generate",
        "tooltip": "",
        "color": "blue",
        "bgcolor": "",
        "className": "",
        "icon": "send",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 240,
        "y": 320,
        "wires": [
            [
                "112195b8c626c5d5"
            ]
        ]
    },
    {
        "id": "32db157c82a77669",
        "type": "ui_text_input",
        "z": "5e1c7c0d7569a4cb",
        "name": "",
        "label": "Prompt Input",
        "tooltip": "",
        "group": "a54754fb1b7c0694",
        "order": 1,
        "width": 16,
        "height": 2,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 230,
        "y": 400,
        "wires": [
            [
                "3391b53461b573fb"
            ]
        ]
    },
    {
        "id": "67f9148a915473ca",
        "type": "join",
        "z": "5e1c7c0d7569a4cb",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 650,
        "y": 340,
        "wires": [
            [
                "90f2ba4ed97317e5",
                "6ac31ee306c88d7e"
            ]
        ]
    },
    {
        "id": "b02686cfec3ca4ab",
        "type": "chatgpt",
        "z": "5e1c7c0d7569a4cb",
        "name": "ChatGPT API",
        "API_KEY": "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",
        "Organization": "org-pIsSU8akeKm4icKTYZaBQXqM",
        "topic": "__EMPTY__",
        "BaseUrl": "https://api.openai.com",
        "x": 830,
        "y": 340,
        "wires": [
            [
                "4e99a0f541ed2aa4",
                "cd54c5f7cbcd9b46"
            ]
        ]
    },
    {
        "id": "4e99a0f541ed2aa4",
        "type": "debug",
        "z": "5e1c7c0d7569a4cb",
        "name": "gpt output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 340,
        "wires": []
    },
    {
        "id": "112195b8c626c5d5",
        "type": "change",
        "z": "5e1c7c0d7569a4cb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "completion",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "complete",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 320,
        "wires": [
            [
                "67f9148a915473ca"
            ]
        ]
    },
    {
        "id": "3391b53461b573fb",
        "type": "change",
        "z": "5e1c7c0d7569a4cb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "prompt",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 400,
        "wires": [
            [
                "67f9148a915473ca"
            ]
        ]
    },
    {
        "id": "90f2ba4ed97317e5",
        "type": "debug",
        "z": "5e1c7c0d7569a4cb",
        "name": "Topic",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 540,
        "wires": []
    },
    {
        "id": "6ac31ee306c88d7e",
        "type": "function",
        "z": "5e1c7c0d7569a4cb",
        "name": "function 19",
        "func": "msg.payload=msg.payload.prompt\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 560,
        "wires": [
            [
                "b02686cfec3ca4ab"
            ]
        ]
    },
    {
        "id": "cd54c5f7cbcd9b46",
        "type": "ui_text",
        "z": "5e1c7c0d7569a4cb",
        "group": "ef4f9868d6da5e21",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1090,
        "y": 540,
        "wires": []
    },
    {
        "id": "57c75bd58af75621",
        "type": "link in",
        "z": "475c4bbdee672833",
        "name": "link in 20",
        "links": [
            "4a50e74e63590ec7",
            "6cd6c27ee7f2bd7d"
        ],
        "x": 165,
        "y": 260,
        "wires": [
            [
                "310c654aa32dd481"
            ]
        ]
    },
    {
        "id": "310c654aa32dd481",
        "type": "function",
        "z": "475c4bbdee672833",
        "name": "geography function",
        "func": "const validationChart = [{ \"STFIPS\": \"01\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"02\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"04\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"05\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"06\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"08\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"09\", \"GEOREG\": \"01\" }, { \"STFIPS\": \"10\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"11\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"12\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"13\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"15\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"16\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"17\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"18\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"19\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"20\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"21\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"22\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"23\", \"GEOREG\": \"01\" }, { \"STFIPS\": \"24\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"25\", \"GEOREG\": \"01\" }, { \"STFIPS\": \"26\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"27\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"28\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"29\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"30\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"31\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"32\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"33\", \"GEOREG\": \"01\" }, { \"STFIPS\": \"34\", \"GEOREG\": \"01\" }, { \"STFIPS\": \"35\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"36\", \"GEOREG\": \"01\" }, { \"STFIPS\": \"37\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"38\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"39\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"40\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"41\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"42\", \"GEOREG\": \"01\" }, { \"STFIPS\": \"44\", \"GEOREG\": \"01\" }, { \"STFIPS\": \"45\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"46\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"47\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"48\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"49\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"50\", \"GEOREG\": \"01\" }, { \"STFIPS\": \"51\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"53\", \"GEOREG\": \"04\" }, { \"STFIPS\": \"54\", \"GEOREG\": \"03\" }, { \"STFIPS\": \"55\", \"GEOREG\": \"02\" }, { \"STFIPS\": \"56\", \"GEOREG\": \"04\" }]\nlet validation = false\n\nfor (let i = 0; i < validationChart.length; i++) {\n    const element = validationChart[i];\n    let parsedSTFIPS = parseInt(element[\"STFIPS\"]);\n    let parsedGEOREG = parseInt(element[\"GEOREG\"]);\n\n    if (parsedSTFIPS === parseInt(msg.payload.csv[0].STFIPS) && parsedGEOREG === parseInt(msg.payload.csv[0].GEOREG)) {\n        validation = true\n        break;\n    }\n}\n\nif (validation) {\n    msg.payload.csv[0].action = \"Go to Calculate Best Admin Receipts\"\n} else {\n    if (msg.payload.csv[0].STFIPS == \"97\" ) {\n        if (msg.payload.csv[0].NAICS_SECTOR_OLD == \"21\" && (msg.payload.csv[0].STATE_PHY == \"PC\" || msg.payload.csv[0].STATE_PHY == \"NG\" || msg.payload.csv[0].STATE_PHY == \"AT\")) {\n            msg.payload.csv[0].action = \"Go to Calculate Best Admin Receipts\"\n        } else {\n            msg.payload.csv[0].TABSTAT = \"N\"\n            msg.payload.csv[0].NONTABFL = \"Y\"\n        }\n    } else {\n        msg.payload.csv[0].flag = \"GEO_Invalid\"\n        msg.payload.csv[0].action = \"Go to Calculate Best Admin Receipts\"\n    }\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 260,
        "wires": [
            [
                "1c8d9d938796f4db",
                "bad79e5ee645cc24"
            ]
        ]
    },
    {
        "id": "1c8d9d938796f4db",
        "type": "debug",
        "z": "475c4bbdee672833",
        "name": "debug geography",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 530,
        "y": 160,
        "wires": []
    },
    {
        "id": "bad79e5ee645cc24",
        "type": "link out",
        "z": "475c4bbdee672833",
        "name": "link out 17",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9"
        ],
        "x": 505,
        "y": 260,
        "wires": []
    },
    {
        "id": "2eee0041d9d93424",
        "type": "link in",
        "z": "2245e192a734f1bb",
        "name": "link in 21",
        "links": [
            "81f5d75ffbcd549e",
            "55c9e7195d7f2786"
        ],
        "x": 95,
        "y": 300,
        "wires": [
            [
                "fb06bfc8575a00fd"
            ]
        ]
    },
    {
        "id": "fb06bfc8575a00fd",
        "type": "function",
        "z": "2245e192a734f1bb",
        "name": "best admin function",
        "func": "if (msg.payload.csv[0].REPORTING_ID_TYP == 'SU') {\n    if (msg.payload.csv[0].FORM_CODE_IRS == ' ' || msg.payload.csv[0].FORM_CODE_IRS == 'C1') {\n        msg.payload.csv[0].ECRCPTOT = msg.payload.csv[0].RCPT_NET_IRS_CURR\n    } else if ((parseInt(msg.payload.csv[0].FORM_CODE_IRS) >= 1 && parseInt(msg.payload.csv[0].FORM_CODE_IRS) <= 13) && ['52','53','55'].includes(msg.payload.csv[0].NAICS_SECTOR.toString())) {\n        if (['01', '02', '03', '04', '05'].includes(msg.payload.csv[0].FORM_CODE_IRS.toString())) {\n            msg.payload.csv[0].ECRCPTOT = parseInt(msg.payload.csv[0].RCPT_NET_IRS_CURR) + parseInt(msg.payload.csv[0].RCPT_INTEREST_IRS_CURR) + parseInt(msg.payload.csv[0].RCPT_GROSSRENT_IRS_CURR) + parseInt(msg.payload.csv[0].RCPT_OTHINCOME_IRS_CURR);\n        } else if (['06', '07'].includes(msg.payload.csv[0].FORM_CODE_IRS.toString())) {\n            msg.payload.csv[0].ECRCPTOT = parseInt(msg.payload.csv[0].RCPT_GROSSINC_IRS_CURR) + parseInt(msg.payload.csv[0].RCPT_INTEREST_IRS_CURR);\n        } else if (msg.payload.csv[0].FORM_CODE_IRS == 8) {\n            msg.payload.csv[0].ECRCPTOT = parseInt(msg.payload.csv[0].RCPT_TOTINC_IRS_CURR);\n        } else if (['09', '10', '11'].includes(msg.payload.csv[0].FORM_CODE_IRS.toString())) {\n            msg.payload.csv[0].ECRCPTOT = parseInt(msg.payload.csv[0].RCPT_TOTREV_IRS_CURR);\n        } else if (msg.payload.csv[0].FORM_CODE_IRS == 12) {\n            msg.payload.csv[0].ECRCPTOT = parseInt(msg.payload.csv[0].RCPT_NET_IRS_CURR);\n        } else if (msg.payload.csv[0].FORM_CODE_IRS == 13) {\n            msg.payload.csv[0].ECRCPTOT = parseInt(msg.payload.csv[0].RCPT_TOTINC_IRS_CURR) + parseInt(msg.payload.csv[0].RCPT_INTEREST_IRS_CURR) + parseInt(msg.payload.csv[0].RCPT_GROSSRENT_IRS_CURR);\n        }\n    } else if ((msg.payload.csv[0].FORM_CODE_IRS.toString() == '06' || msg.payload.csv[0].FORM_CODE_IRS.toString() == '07') && !['52', '53', '55'].includes(msg.payload.csv[0].NAICS_SECTOR.toString())) {\n        msg.payload.csv[0].ECRCPTOT = 0\n    } else if ((['01', '02', '03', '04', '05', '08', '09', '10', '11', '12', '13'].includes(msg.payload.csv[0].FORM_CODE_IRS.toString())) && (['51', '54', '56', '61', '62', '71', '81'].includes(msg.payload.csv[0].NAICS_SECTOR.toString()))) {\n        if (['01', '02', '03', '04', '05', '12'].includes(msg.payload.csv[0].FORM_CODE_IRS.toString())) {\n            msg.payload.csv[0].ECRCPTOT = msg.payload.csv[0].RCPT_NET_IRS_CURR;\n        } else if (['08', '13'].includes(msg.payload.csv[0].FORM_CODE_IRS.toString())) {\n            msg.payload.csv[0].ECRCPTOT = msg.payload.csv[0].RCPT_TOTINC_IRS_CURR;\n        } else if (['09', '10'].includes(msg.payload.csv[0].FORM_CODE_IRS.toString())) {\n            msg.payload.csv[0].ECRCPTOT = msg.payload.csv[0].RCPT_TOTREV_IRS_CURR + msg.payload.csv[0].COST_GOODSOLD_IRS_CURR;\n        } else if (msg.payload.csv[0].FORM_CODE_IRS.toString() == '11') {\n            msg.payload.csv[0].ECRCPTOT = msg.payload.csv[0].RCPT_TOTREV_IRS_CURR;\n        }\n    } else if (['01', '02', '03', '04', '05', '08', '09', '10', '11', '12', '13'].includes(msg.payload.csv[0].FORM_CODE_IRS.toString()) && !['21', '23', '31', '33', '42', '44', '45', '51', '52', '53', '55', '54', '56', '61', '62', '71', '72', '81'].includes(msg.payload.csv[0].NAICS_SECTOR.toString())) {\n        if (['01', '02', '03', '04', '05', '12'].includes(msg.payload.csv[0].FORM_CODE_IRS.toString())) {\n            msg.payload.csv[0].ECRCPTOT = msg.payload.csv[0].RCPT_NET_IRS_CURR;\n        } else if (['08', '13'].includes(msg.payload.csv[0].FORM_CODE_IRS.toString())) {\n            msg.payload.csv[0].ECRCPTOT = msg.payload.csv[0].RCPT_TOTINC_IRS_CURR;\n        } else if (['09', '10', '11'].includes(msg.payload.csv[0].FORM_CODE_IRS.toString())) {\n            msg.payload.csv[0].ECRCPTOT = msg.payload.csv[0].RCPT_TOTREV_IRS_CURR;\n        }\n    }\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 300,
        "wires": [
            [
                "c1f2b22127d09e78",
                "eb575c3f71964e1e"
            ]
        ]
    },
    {
        "id": "c1f2b22127d09e78",
        "type": "debug",
        "z": "2245e192a734f1bb",
        "name": "debug best admin",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 180,
        "wires": []
    },
    {
        "id": "eb575c3f71964e1e",
        "type": "link out",
        "z": "2245e192a734f1bb",
        "name": "link out 18",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9"
        ],
        "x": 455,
        "y": 300,
        "wires": []
    },
    {
        "id": "e37d1480a526c577",
        "type": "inject",
        "z": "6f369789c773517d",
        "name": "Incoming Data from QBES",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"csv\":[{\"failure\":1,\"SUM(DET)\":1,\"TOT\":1,\"REPORTING_ID_TYP\":\"SU\",\"FORM_CODE_IRS\":\"01\",\"NAICS_SECTOR\":51,\"RCPT_NET_IRS_CURR\":100,\"RCPT_INTEREST_IRS_CURR\":10,\"RCPT_GROSSRENT_IRS_CURR\":20,\"RCPT_OTHINCOME_IRS_CURR\":30,\"RCPT_GROSSINC_IRS_CURR\":40,\"RCPT_TOTINC_IRS_CURR\":50,\"RCPT_TOTREV_IRS_CURR\":60,\"COST_GOODSOLD_IRS_CURR\":70,\"AIES_SCOPE\":\"Y\",\"BR_STAT\":\"Y\",\"NAICS_CODE_OLD\":4821,\"NAICS_WRITIN_TEXT\":\"na\",\"KAU_NAICS\":6221101,\"COVCHGCD\":111,\"COVCHGDT\":\"2022-12-31\",\"Data\":0,\"PDIV\":\"S\",\"ANAIC\":1151234,\"EDTROUTE\":1,\"NAICOLD\":2151234,\"NAICSDSG\":3151234,\"NAICMAIL\":4151234,\"TRADCODE\":\"M\",\"STFIPS\":\"01\",\"GEOREG\":\"03\",\"ACTV_MIO_NUM\":8,\"ACTV_MIO_NUM_FLG\":\"RC\",\"OPSTATS\":\"\",\"OPSTATS_FLG\":\"R\",\"COV_CHG_CODE\":791,\"ACTVMIO_R\":10,\"COV_CHG_DATE\":\"2022-12-31\",\"OPSTAT\":5,\"OPSTAT_FLAG\":\"R\",\"RECORD_TYP\":89,\"BMF_FR941\":3,\"EPPAYANN\":0,\"NONNORM_FLG\":\"\",\"NONNORM\":\"\",\"PAY_QTR1_VAL\":0,\"EMP_MAR12_NUM\":0,\"OPSTATS_F\":\"RC\",\"TEMPMIO\":0,\"ECPAYQ1\":0,\"ACTV_MIO_VAL\":0,\"ACTV_MIO_VAL_FLG\":\"L\",\"ECPAYQ2\":3,\"ECPAYQ3\":4,\"ECPAYQ4\":5,\"ECPAYQ4_F\":\"\",\"REFPER\":\"2023A1\",\"MADBPAYANN\":0,\"EMP_MAR12_NUM_F\":\"RG\",\"PAY_ANN_VAL\":1,\"PAY_QTR1_VAL_R\":0,\"PAY_QTR1_VAL_FLG\":\"R\",\"EMP_MAR12_NUM_FLG\":\"R\",\"CY_PAY_QTR1_VAL\":1,\"ECPAYQ1ZERO\":\"\",\"CY_EMP_MAR12_NUM\":1,\"ECEMPQ1\":1}]}",
        "payloadType": "json",
        "x": 150,
        "y": 60,
        "wires": [
            [
                "bf0c4cfa8872661e"
            ]
        ]
    },
    {
        "id": "bf0c4cfa8872661e",
        "type": "switch",
        "z": "6f369789c773517d",
        "name": "AIES_SCOPE = Y?",
        "property": "payload.csv[0].AIES_SCOPE",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Y",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "Y",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 60,
        "wires": [
            [
                "d8c14aa141036a2f"
            ],
            [
                "84a1f619dc333f6f"
            ]
        ]
    },
    {
        "id": "84a1f619dc333f6f",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "No, go to KAU to Company Additivity Check",
        "x": 670,
        "y": 40,
        "wires": [
            [
                "53749bc75b1dfefd"
            ]
        ]
    },
    {
        "id": "4ee1acdd5f25eedf",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "PV Prep",
        "x": 1360,
        "y": 200,
        "wires": [
            [
                "ec5fe14247aedef2"
            ]
        ]
    },
    {
        "id": "ec5fe14247aedef2",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Call PV",
        "x": 1470,
        "y": 120,
        "wires": [
            [
                "d33c05b3903dd607"
            ]
        ]
    },
    {
        "id": "d33c05b3903dd607",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "PV Unload",
        "x": 1580,
        "y": 200,
        "wires": [
            [
                "350185b801143687"
            ]
        ]
    },
    {
        "id": "350185b801143687",
        "type": "http request",
        "z": "6f369789c773517d",
        "name": "Hot Deck Imputation for Estab Core",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1790,
        "y": 120,
        "wires": [
            [
                "224ebed81db4d417"
            ]
        ]
    },
    {
        "id": "224ebed81db4d417",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Derived Items",
        "x": 1990,
        "y": 200,
        "wires": [
            [
                "2ec08aae604e8496"
            ]
        ]
    },
    {
        "id": "2ec08aae604e8496",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Logical Checks",
        "x": 380,
        "y": 300,
        "wires": [
            [
                "e28f7745010476f6"
            ]
        ]
    },
    {
        "id": "e28f7745010476f6",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Unit Balance",
        "x": 570,
        "y": 300,
        "wires": [
            [
                "8365a07470601995"
            ]
        ]
    },
    {
        "id": "8365a07470601995",
        "type": "http request",
        "z": "6f369789c773517d",
        "name": "MFG Imputation for Estab Non- Core/Raking",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 870,
        "y": 300,
        "wires": [
            [
                "5c34a139ed514d2a"
            ]
        ]
    },
    {
        "id": "5c34a139ed514d2a",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Derived Items",
        "x": 1150,
        "y": 300,
        "wires": [
            [
                "ff19d31c6a2b2466"
            ]
        ]
    },
    {
        "id": "ff19d31c6a2b2466",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Post Edit/Set Donor Stat",
        "x": 1370,
        "y": 300,
        "wires": [
            [
                "a6d9bbd9d7de92d6"
            ]
        ]
    },
    {
        "id": "a6d9bbd9d7de92d6",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Classification",
        "x": 370,
        "y": 420,
        "wires": [
            [
                "ddb465088b8f229f"
            ]
        ]
    },
    {
        "id": "b26e87d4c3c7d83a",
        "type": "comment",
        "z": "6f369789c773517d",
        "name": "Yes, Estab",
        "info": "Create decision point\nCheck if record_typ_txt in (20,90)",
        "x": 120,
        "y": 140,
        "wires": []
    },
    {
        "id": "26906fbefd3e1105",
        "type": "comment",
        "z": "6f369789c773517d",
        "name": "KAU",
        "info": "Check if record_typ_txt = 30",
        "x": 110,
        "y": 420,
        "wires": []
    },
    {
        "id": "ddb465088b8f229f",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Completeness Check / Core Variables",
        "x": 610,
        "y": 420,
        "wires": [
            [
                "13fe8441e829301b"
            ]
        ]
    },
    {
        "id": "13fe8441e829301b",
        "type": "http request",
        "z": "6f369789c773517d",
        "name": "HB Edits/Error localization/ Industry Av Imputation for KAU Core",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1010,
        "y": 420,
        "wires": [
            [
                "8c74ba923194419e"
            ]
        ]
    },
    {
        "id": "8c74ba923194419e",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Derived Items",
        "x": 1330,
        "y": 420,
        "wires": [
            [
                "3592468b7a37a4e5"
            ]
        ]
    },
    {
        "id": "3592468b7a37a4e5",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Logical Checks",
        "x": 1500,
        "y": 420,
        "wires": [
            [
                "d841a19d43f75a4d"
            ]
        ]
    },
    {
        "id": "d841a19d43f75a4d",
        "type": "http request",
        "z": "6f369789c773517d",
        "name": "HB Edits/Error localization/ Industry Av Imputation for KAU Totals",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1840,
        "y": 420,
        "wires": [
            [
                "ba41a6d6bbadf123"
            ]
        ]
    },
    {
        "id": "ba41a6d6bbadf123",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Unit Balance",
        "x": 2170,
        "y": 420,
        "wires": [
            [
                "93d3a3bb2bc7fe51"
            ]
        ]
    },
    {
        "id": "93d3a3bb2bc7fe51",
        "type": "http request",
        "z": "6f369789c773517d",
        "name": "HDI Imputation for KAU Non- Totals",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2400,
        "y": 420,
        "wires": [
            [
                "d304099f5907aeda"
            ]
        ]
    },
    {
        "id": "d304099f5907aeda",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Derived Items",
        "x": 2630,
        "y": 420,
        "wires": [
            [
                "5e55a24b5e76bb41"
            ]
        ]
    },
    {
        "id": "5e55a24b5e76bb41",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Post Edit",
        "x": 2620,
        "y": 480,
        "wires": [
            [
                "c85e165158b85de6"
            ]
        ]
    },
    {
        "id": "c85e165158b85de6",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Estab to KAU Additivity Check",
        "x": 420,
        "y": 540,
        "wires": [
            [
                "e1e45eb7e0325db3"
            ]
        ]
    },
    {
        "id": "24c0de35cd825782",
        "type": "comment",
        "z": "6f369789c773517d",
        "name": "Company",
        "info": "Check if record_typ_txt = 10",
        "x": 120,
        "y": 620,
        "wires": []
    },
    {
        "id": "e1e45eb7e0325db3",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Derived Items",
        "x": 370,
        "y": 620,
        "wires": [
            [
                "f56806d39ee1ec63"
            ]
        ]
    },
    {
        "id": "f56806d39ee1ec63",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Logical Checks",
        "x": 540,
        "y": 620,
        "wires": [
            [
                "cc3b9239a087da4e"
            ]
        ]
    },
    {
        "id": "cc3b9239a087da4e",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Unit Balance",
        "x": 710,
        "y": 620,
        "wires": [
            [
                "650789b4359cdb2f"
            ]
        ]
    },
    {
        "id": "650789b4359cdb2f",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Derived Items",
        "x": 870,
        "y": 620,
        "wires": [
            [
                "76f7c8d52c791e39"
            ]
        ]
    },
    {
        "id": "76f7c8d52c791e39",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Post Edit",
        "x": 1020,
        "y": 620,
        "wires": [
            [
                "c77ef0698bfb465b"
            ]
        ]
    },
    {
        "id": "41a709043abe1e2b",
        "type": "http request",
        "z": "6f369789c773517d",
        "name": "Company verification and possible use of data",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1360,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "c77ef0698bfb465b",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "KAU to Company Additivity Check",
        "x": 440,
        "y": 700,
        "wires": [
            [
                "5e1163b33bca81bc"
            ]
        ]
    },
    {
        "id": "5e1163b33bca81bc",
        "type": "switch",
        "z": "6f369789c773517d",
        "name": "Changes made?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Y",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "Y",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 680,
        "y": 700,
        "wires": [
            [
                "a052cfcdea9284e3"
            ],
            [
                "9a3177f2d2f508f3"
            ]
        ]
    },
    {
        "id": "a052cfcdea9284e3",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Yes, go to BR stat evaluation",
        "x": 920,
        "y": 700,
        "wires": [
            [
                "d6c3ae19808aee07"
            ]
        ]
    },
    {
        "id": "9a3177f2d2f508f3",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Company Complete",
        "x": 710,
        "y": 780,
        "wires": [
            [
                "0d24eb67498d5cdd"
            ]
        ]
    },
    {
        "id": "0d24eb67498d5cdd",
        "type": "http request",
        "z": "6f369789c773517d",
        "name": "Send to HDI/Imputation/Estimation  Night run",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1010,
        "y": 780,
        "wires": [
            [
                "3ca182248e494d75"
            ]
        ]
    },
    {
        "id": "3ca182248e494d75",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6f369789c773517d",
        "name": "Rerun data prep edits or just Derived Items?",
        "x": 1390,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "53749bc75b1dfefd",
        "type": "link out",
        "z": "6f369789c773517d",
        "name": "go to KAU additivity check",
        "mode": "link",
        "links": [
            "e269a48b71e0ab14"
        ],
        "x": 885,
        "y": 40,
        "wires": []
    },
    {
        "id": "e269a48b71e0ab14",
        "type": "link in",
        "z": "6f369789c773517d",
        "name": "link in 25",
        "links": [
            "53749bc75b1dfefd"
        ],
        "x": 285,
        "y": 700,
        "wires": [
            [
                "c77ef0698bfb465b"
            ]
        ]
    },
    {
        "id": "d6c3ae19808aee07",
        "type": "link out",
        "z": "6f369789c773517d",
        "name": "go to BR stat eval",
        "mode": "link",
        "links": [
            "dcf620309c0b3c92"
        ],
        "x": 1075,
        "y": 700,
        "wires": []
    },
    {
        "id": "dcf620309c0b3c92",
        "type": "link in",
        "z": "6f369789c773517d",
        "name": "link in 26",
        "links": [
            "d6c3ae19808aee07"
        ],
        "x": 275,
        "y": 120,
        "wires": [
            [
                "d8c14aa141036a2f"
            ]
        ]
    },
    {
        "id": "d8c14aa141036a2f",
        "type": "subflow:120ad61b88a550e6",
        "z": "6f369789c773517d",
        "name": "BR Stat Evaluation",
        "x": 430,
        "y": 120,
        "wires": [
            [
                "e119a71c2152c6d1"
            ]
        ]
    },
    {
        "id": "ba03caac1e9d4066",
        "type": "subflow:a08711b1cedb891d",
        "z": "6f369789c773517d",
        "name": "NONNORM",
        "x": 810,
        "y": 120,
        "wires": [
            [
                "8feedc3d66066cd5"
            ]
        ]
    },
    {
        "id": "e119a71c2152c6d1",
        "type": "subflow:a3136c877b98e237",
        "z": "6f369789c773517d",
        "name": "Critical Error",
        "x": 630,
        "y": 120,
        "wires": [
            [
                "ba03caac1e9d4066"
            ]
        ]
    },
    {
        "id": "8feedc3d66066cd5",
        "type": "subflow:a3d425ba6d3b6a6a",
        "z": "6f369789c773517d",
        "name": "Classification",
        "x": 370,
        "y": 200,
        "wires": [
            [
                "4bfa93860450cdbf"
            ]
        ]
    },
    {
        "id": "4bfa93860450cdbf",
        "type": "subflow:4ed21c9150f5597a",
        "z": "6f369789c773517d",
        "name": "Geography",
        "x": 560,
        "y": 200,
        "wires": [
            [
                "fbfbcb247130a726"
            ]
        ]
    },
    {
        "id": "fbfbcb247130a726",
        "type": "subflow:a0bced2e224712c4",
        "z": "6f369789c773517d",
        "name": "Calculate Best Admin Receipts",
        "x": 790,
        "y": 200,
        "wires": [
            [
                "6ecf88b269cef917"
            ]
        ]
    },
    {
        "id": "6ecf88b269cef917",
        "type": "subflow:1e75121bac78652a",
        "z": "6f369789c773517d",
        "name": "Completeness Check / Core Variables",
        "x": 1110,
        "y": 200,
        "wires": [
            [
                "4ee1acdd5f25eedf"
            ]
        ]
    },
    {
        "id": "2ef7b6af2d61c69b",
        "type": "comment",
        "z": "6f369789c773517d",
        "name": "param file required",
        "info": "",
        "x": 1050,
        "y": 160,
        "wires": []
    },
    {
        "id": "49b8c4d94cef7ff7",
        "type": "link in",
        "z": "a1c50a528dd6cf36",
        "name": "link in 23",
        "links": [
            "32b24311da4a3220",
            "dfab7d8648324af5"
        ],
        "x": 165,
        "y": 220,
        "wires": [
            [
                "bf5eb8d7072f98cb"
            ]
        ]
    },
    {
        "id": "bf5eb8d7072f98cb",
        "type": "function",
        "z": "a1c50a528dd6cf36",
        "name": "completeness function",
        "func": "if (msg.payload.csv[0].PAYANN && msg.payload.csv[0].EMPQ1 && msg.payload.csv[0].PAYQTR1 && msg.payload.csv[0].RCPTOT) {\n    msg.payload.csv[0].PAYANN = 0\n    msg.payload.csv[0].EMPQ1 = 0\n    msg.payload.csv[0].PAYQTR1 = 0\n    msg.payload.csv[0].RCPTOT = 0\n    msg.payload.csv[0].action = \"Go to Balance Module\"\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 220,
        "wires": [
            [
                "1f14aeb67b1e6666",
                "a6ab628560a7c8c9"
            ]
        ]
    },
    {
        "id": "1f14aeb67b1e6666",
        "type": "debug",
        "z": "a1c50a528dd6cf36",
        "name": "debug completeness",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 120,
        "wires": []
    },
    {
        "id": "a6ab628560a7c8c9",
        "type": "link out",
        "z": "a1c50a528dd6cf36",
        "name": "link out 20",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9"
        ],
        "x": 495,
        "y": 220,
        "wires": []
    },
    {
        "id": "d97e7c0dec380b3d",
        "type": "function",
        "z": "a51d10c50d9dbbe0",
        "name": "nonnorm function",
        "func": "// Assign sample values to variables\n//setinit variables (first appearance)\nvar ACTV_MIO_NUM = msg.payload.csv[0].ACTV_MIO_NUM\nvar ACTV_MIO_NUM_FLG = msg.payload.csv[0].ACTV_MIO_NUM_FLG\nvar OPSTATS = msg.payload.csv[0].OPSTATS\nvar OPSTATS_FLG = msg.payload.csv[0].OPSTATS_FLG\nvar COV_CHG_CODE = msg.payload.csv[0].COV_CHG_CODE\nvar ACTVMIO_R = msg.payload.csv[0].ACTVMIO_R\nvar COV_CHG_DATE = new Date(msg.payload.csv[0].COV_CHG_DATE)\nvar OPSTAT = msg.payload.csv[0].OPSTAT\nvar OPSTAT_FLAG = msg.payload.csv[0].OPSTAT_FLAG\n\n//nonorm router Variables (first appearance)\nvar RECORD_TYP = msg.payload.csv[0].RECORD_TYP\nvar BMF_FR941 = msg.payload.csv[0].BMF_FR941\nvar EPPAYANN = msg.payload.csv[0].EPPAYANN\nvar NONNORM_FLG = msg.payload.csv[0].NONNORM_FLG\nvar NONNORM = msg.payload.csv[0].NONNORM\nvar PAY_QTR1_VAL = msg.payload.csv[0].PAY_QTR1_VAL\nvar EMP_MAR12_NUM = msg.payload.csv[0].EMP_MAR12_NUM\nvar OPSTATS_F = msg.payload.csv[0].OPSTATS_F\n\n// Flow: set_OPSTATS_ACTIV_MIO_NUM (first appearance)\nvar TEMPMIO = msg.payload.csv[0].TEMPMIO\nvar ECPAYQ1 = msg.payload.csv[0].ECPAYQ1\nvar EPPAYANN = msg.payload.csv[0].EPPAYANN\nvar ACTV_MIO_VAL = msg.payload.csv[0].ACTV_MIO_VAL\nvar ACTV_MIO_VAL_FLG = msg.payload.csv[0].ACTV_MIO_VAL_FLG\nvar BMF_FR941 = msg.payload.csv[0].BMF_FR941\nvar ECPAYQ2 = msg.payload.csv[0].ECPAYQ2\nvar ECPAYQ3 = msg.payload.csv[0].ECPAYQ3\nvar ECPAYQ4 = msg.payload.csv[0].ECPAYQ4\nvar ECPAYQ4_F = msg.payload.csv[0].ECPAYQ4_F\n\n// Flow: set_NONNORM (first appearance)\nvar REFPER = msg.payload.csv[0].REFPER\nvar MADBPAYANN = msg.payload.csv[0].MADBPAYANN\nvar EMP_MAR12_NUM_F = msg.payload.csv[0].EMP_MAR12_NUM_F\nvar PAY_ANN_VAL = msg.payload.csv[0].PAY_ANN_VAL\n\n// Flow: set_BASIC_0 (first appearance)\nvar PAY_QTR1_VAL_R = msg.payload.csv[0].PAY_QTR1_VAL_R\nvar PAY_QTR1_VAL_FLG = msg.payload.csv[0].PAY_QTR1_VAL_FLG\nvar EMP_MAR12_NUM = msg.payload.csv[0].EMP_MAR12_NUM\nvar EMP_MAR12_NUM_FLG = msg.payload.csv[0].EMP_MAR12_NUM_FLG\n\n// Flow: SPECIAL_SEASON (first appearance)\nvar CY_PAY_QTR1_VAL = msg.payload.csv[0].CY_PAY_QTR1_VAL\nvar ECPAYQ1ZERO = msg.payload.csv[0].ECPAYQ1ZERO\nvar CY_EMP_MAR12_NUM = msg.payload.csv[0].CY_EMP_MAR12_NUM\nvar ECEMPQ1 = msg.payload.csv[0].ECEMPQ1\n\n// Function to process the payload\nfunction processPayload() {\n    var result = {}\n    function pathX() {\n        if (OPSTATS === '') {\n            return pathY();\n        } else {\n            return pathF();\n        }\n    }\n    // Main logic flow\n    if (ACTV_MIO_NUM < 0 || ACTV_MIO_NUM > 12) {\n        ACTV_MIO_NUM = 12;\n        ACTV_MIO_NUM_FLG = ACTV_MIO_NUM_FLG.substring(1, 2) + 'J' + ACTV_MIO_NUM_FLG.substring(2, 3);\n        result.payload = pathX();\n        result.ACTV_MIO_NUM = ACTV_MIO_NUM;\n        result.ACTV_MIO_NUM_FLG = ACTV_MIO_NUM_FLG;\n        result.OPSTATS = OPSTATS;\n        result.OPSTATS_FLG = OPSTATS_FLG;\n        result.COV_CHG_CODE = COV_CHG_CODE;\n        result.ACTVMIO_R = ACTVMIO_R;\n        result.COV_CHG_DATE = COV_CHG_DATE;\n        result.OPSTAT = OPSTAT;\n        result.OPSTAT_FLAG = OPSTAT_FLAG;\n        result.RECORD_TYP = RECORD_TYP;\n        result.BMF_FR941 = BMF_FR941;\n        result.EPPAYANN = EPPAYANN;\n        result.NONNORM_FLG = NONNORM_FLG;\n        result.NONNORM = NONNORM;\n        result.PAY_QTR1_VAL = PAY_QTR1_VAL;\n        result.EMP_MAR12_NUM = EMP_MAR12_NUM;\n        result.OPSTATS_F = OPSTATS_F\n        result.TEMPMIO = TEMPMIO ;\n        result.ECPAYQ1 = ECPAYQ1;\n        result.EPPAYANN = EPPAYANN;\n        result.ACTV_MIO_VAL = ACTV_MIO_VAL;\n        result.ACTV_MIO_VAL_FLG = ACTV_MIO_VAL_FLG;\n        result.BMF_FR941 = BMF_FR941;\n        result.ECPAYQ2 = ECPAYQ2;\n        result.ECPAYQ3 = ECPAYQ3;\n        result.ECPAYQ4 = ECPAYQ4;\n        result.ECPAYQ4_F = ECPAYQ4_F;\n        result.REFPER = REFPER;\n        result.MADBPAYANN = MADBPAYANN;\n        result.EMP_MAR12_NUM_F = EMP_MAR12_NUM_F;\n        result.PAY_ANN_VAL = PAY_ANN_VAL;\n        result.PAY_QTR1_VAL_R = PAY_QTR1_VAL_R;\n        result.PAY_QTR1_VAL_FLG = PAY_QTR1_VAL_FLG;\n        result.EMP_MAR12_NUM = EMP_MAR12_NUM;\n        result.EMP_MAR12_NUM_FLG = EMP_MAR12_NUM_FLG;\n        result.CY_PAY_QTR1_VAL = CY_PAY_QTR1_VAL;\n        result.ECPAYQ1ZERO = ECPAYQ1ZERO;\n        result.CY_EMP_MAR12_NUM = CY_EMP_MAR12_NUM;\n        result.ECEMPQ1 = ECEMPQ1;\n    } else {\n        result.payload = pathX();\n        result.ACTV_MIO_NUM = ACTV_MIO_NUM;\n        result.ACTV_MIO_NUM_FLG = ACTV_MIO_NUM_FLG;\n        result.OPSTATS = OPSTATS;\n        result.OPSTATS_FLG = OPSTATS_FLG;\n        result.COV_CHG_CODE = COV_CHG_CODE;\n        result.ACTVMIO_R = ACTVMIO_R;\n        result.COV_CHG_DATE = COV_CHG_DATE;\n        result.OPSTAT = OPSTAT;\n        result.OPSTAT_FLAG = OPSTAT_FLAG;\n        result.RECORD_TYP = RECORD_TYP;\n        result.BMF_FR941 = BMF_FR941;\n        result.EPPAYANN = EPPAYANN;\n        result.NONNORM_FLG = NONNORM_FLG;\n        result.NONNORM = NONNORM;\n        result.PAY_QTR1_VAL = PAY_QTR1_VAL;\n        result.EMP_MAR12_NUM = EMP_MAR12_NUM;\n        result.OPSTATS_F = OPSTATS_F\n        result.TEMPMIO = TEMPMIO;\n        result.ECPAYQ1 = ECPAYQ1;\n        result.EPPAYANN = EPPAYANN;\n        result.ACTV_MIO_VAL = ACTV_MIO_VAL;\n        result.ACTV_MIO_VAL_FLG = ACTV_MIO_VAL_FLG;\n        result.BMF_FR941 = BMF_FR941;\n        result.ECPAYQ2 = ECPAYQ2;\n        result.ECPAYQ3 = ECPAYQ3;\n        result.ECPAYQ4 = ECPAYQ4;\n        result.ECPAYQ4_F = ECPAYQ4_F;\n        result.REFPER = REFPER;\n        result.MADBPAYANN = MADBPAYANN;\n        result.EMP_MAR12_NUM_F = EMP_MAR12_NUM_F;\n        result.PAY_ANN_VAL = PAY_ANN_VAL;\n        result.PAY_QTR1_VAL_R = PAY_QTR1_VAL_R;\n        result.PAY_QTR1_VAL_FLG = PAY_QTR1_VAL_FLG;\n        result.EMP_MAR12_NUM = EMP_MAR12_NUM;\n        result.EMP_MAR12_NUM_FLG = EMP_MAR12_NUM_FLG;\n        result.CY_PAY_QTR1_VAL = CY_PAY_QTR1_VAL;\n        result.ECPAYQ1ZERO = ECPAYQ1ZERO;\n        result.CY_EMP_MAR12_NUM = CY_EMP_MAR12_NUM;\n        result.ECEMPQ1 = ECEMPQ1;\n    }\n    return result;\n}\nfunction pathF() {\n    if (OPSTATS_FLG.substring(0, 2) !== 'R ' && OPSTATS_FLG.substring(1, 2) !== 'C') {\n        return pathY();\n    } else {\n        return nonNormRouter();\n    }\n}\n\nfunction pathY() {\n    if ((COV_CHG_CODE === 111 || COV_CHG_CODE === 131 || (COV_CHG_CODE === 791 && ACTVMIO_R < 12)) && COV_CHG_DATE < new Date('2024-01-01')) {\n        return pathA();\n    } else if (OPSTAT_FLAG.substring(0, 1) === 'R') {\n        return pathZ();\n    } else {\n        return pathB();\n    }\n}\n\nfunction pathA() {\n    OPSTATS = 'N';\n    return pathD();\n}\n\nfunction pathZ() {\n    if (OPSTAT === 4) {\n        return pathA();\n    } else if (OPSTAT === 5) {\n        return pathE();\n    } else {\n        return pathB();\n    }\n}\n\nfunction pathE() {\n    if (ACTV_MIO_NUM === 12) {\n        return pathB();\n    } else {\n        return pathA();\n    }\n}\n\nfunction pathB() {\n    OPSTATS = 'Y';\n    return pathD();\n}\n\nfunction pathD() {\n    if (OPSTAT_FLAG.substring(0, 1) === 'R') {\n        OPSTATS_FLG = 'R' + OPSTATS_FLG.substring(1);\n        return nonNormRouter();\n    } else {\n        OPSTATS_FLG = OPSTATS_FLG.substring(0, 1) + 'J' + OPSTATS_FLG.substring(2);\n        return nonNormRouter();\n    }\n}\n\nfunction nonNormRouter() {\n    if (ACTV_MIO_NUM_FLG.substring(0, 1) === 'R') {\n        return pathG();\n    } else {\n        return pathH();\n    }\n}\n\n\nfunction pathG() {\n    if (RECORD_TYP === 90) {\n        return pathI();\n    } else {\n        return pathH();\n    }\n}\n\nfunction pathH() {\n    if (BMF_FR941 === 97 || BMF_FR941 === 98 || BMF_FR941 === 99) {\n        return pathA1();\n    } else {\n        return pathL();\n    }\n}\n\nfunction pathI() {\n    if (ACTV_MIO_NUM < 12 && EPPAYANN === 0) {\n        NONNORM = 'B';\n        NONNORM_FLG = NONNORM_FLG.substring(0, 1) + 'L';\n        return pathA1();\n    } else {\n        return pathA1();\n    }\n}\n\nfunction pathL() {\n    if (ACTV_MIO_NUM_FLG.substring(1, 2) !== 'C' && OPSTATS_F.substring(1, 2) !== 'C') {\n        return set_OPSTATS_ACTIV_MIO_NUM() + pathA1();\n    } else {\n        return pathA1();\n    }\n}\n\nfunction pathA1() {\n    if (NONNORM_FLG === '' || NONNORM_FLG.substring(1, 2) === 'J') {\n        return set_NONNORM();\n    } else {\n        return pathN();\n    }\n}\n\nfunction pathN() {\n    if (NONNORM === 'B') {\n        return set_BASIC_0();\n    } else {\n        return pathO();\n    }\n}\n\nfunction pathO() {\n    if (NONNORM === 'S' && ACTV_MIO_NUM < 10 && PAY_QTR1_VAL === 0 && EMP_MAR12_NUM === 0) {\n        return SPECIAL_SEASON();\n    } else {\n        return (\"Exit to AEIS main\");\n    }\n}\n\n// Flow: set_OPSTATS_ACTIV_MIO_NUM\nfunction set_OPSTATS_ACTIV_MIO_NUM() {\n    if (RECORD_TYP === 90) {\n        TEMPMIO = 0;\n        return pathP();\n    } else if (OPSTATS_FLG === 'R ' && ACTV_MIO_NUM_FLG === 'R ') {\n        return pathA2();\n    } else {\n        return pathQ();\n    }\n}\n\n\nfunction pathP() {\n    if (PAY_QTR1_VAL + ECPAYQ1 > 0) {\n        TEMPMIO += 3;\n        return pathD1();\n    } else if (EPPAYANN > 0) {\n        return pathD1();\n    } else {\n        NONNORM = 'B';\n        NONNORM_FLG = NONNORM_FLG.substring(0, 1) + 'L';\n        return pathD1();\n    }\n}\n\nfunction pathA2() {\n    return nonNormRouter();\n}\n\nfunction pathQ() {\n    if ([211, 221, 241, 311, 321, 341, 401, 511, 741].includes(COV_CHG_CODE)) {\n        return pathR();\n    } else if ([111, 131, 791].includes(COV_CHG_CODE)) {\n        return pathS();\n    } else {\n        return pathA2();\n    }\n}\n\nfunction pathD1() {\n    if (ECPAYQ2 > 0) {\n        TEMPMIO += 3;\n        return pathT();\n    } else {\n        return pathT();\n    }\n}\n\nfunction pathT() {\n    if (ECPAYQ3 > 0) {\n        TEMPMIO += 3;\n        return pathU();\n    } else {\n        return pathU();\n    }\n}\n\nfunction pathU() {\n    if (ECPAYQ4 > 0 || ECPAYQ4_F === '') {\n        TEMPMIO += 3;\n        return pathV();\n    } else if (OPSTATS_FLG === 'R ') {\n        return pathB1();\n    } else {\n        return pathC1();\n    }\n}\n\nfunction pathV() {\n    if ([3, 51, 0].includes(BMF_FR941)) {\n        return pathC1();\n    } else {\n        return pathB1();\n    }\n}\n\nfunction pathB1() {\n    ACTV_MIO_NUM = TEMPMIO;\n    ACTV_MIO_NUM_FLG = ACTV_MIO_NUM_FLG.substring(0, 1) + 'L ';\n    return pathA2();\n}\n\nfunction pathC1() {\n    OPSTATS = 'N';\n    OPSTATS_FLG = OPSTATS_FLG.substring(0, 1) + 'L ';\n    return pathB1();\n}\n\nfunction pathR() {\n    if (COV_CHG_DATE > new Date('2023-01-31') && COV_CHG_DATE < new Date('2024-01-01')) {\n        ACTV_MIO_VAL = 13 - new Date(COV_CHG_DATE).getMonth();\n        ACTV_MIO_VAL_FLG = ACTV_MIO_VAL_FLG.substring(0, 1) + 'L ';\n        return pathA2();\n    } else {\n        return pathA2();\n    }\n}\n\nfunction pathS() {\n    if (COV_CHG_DATE < new Date('2024-01-01')) {\n        ACTV_MIO_NUM = new Date(COV_CHG_DATE).getMonth() + 1;\n        ACTV_MIO_NUM_FLG = ACTV_MIO_NUM_FLG.substring(0, 1) + 'L ';\n        OPSTATS = 'N';\n        OPSTATS_FLG = OPSTATS_FLG.substring(0, 1) + 'L ';\n        return pathA2();\n    } else {\n        return pathA2();\n    }\n}\n\n\n// Flow: set_NONNORM\nfunction set_NONNORM() {\n    NONNORM = '';\n    if (OPSTATS === 'Y') {\n        return pathW();\n    } else {\n        NONNORM = 'D';\n        NONNORM_FLG = NONNORM_FLG.substring(0, 1) + 'J';\n        return pathA2();\n    }\n}\n\n\nfunction pathW() {\n    if (REFPER > '2023A1') {\n        return path1();\n    } else if (RECORD_TYP === 20 && ACTV_MIO_NUM < 12 && (ACTV_MIO_NUM_FLG.substring(1, 2) === 'L' || (MADBPAYANN === 0 && REFPER === '2022U1'))) {\n        return pathB2();\n    } else {\n        return path2();\n    }\n}\n\nfunction path1() {\n    if (RECORD_TYP === 20 && ACTV_MIO_NUM < 12 && (ACTV_MIO_NUM_FLG.substring(1, 2) === 'L' || (PAY_ANN_VAL === 0 && REFPER === 'REFPER - 1'))) {\n        return pathB2();\n    } else {\n        return path2();\n    }\n}\n\nfunction pathB2() {\n    NONNORM = 'B';\n    NONNORM_FLG = NONNORM_FLG.substring(0, 1) + 'J';\n    return pathA2();\n}\n\nfunction path2() {\n    if (ACTV_MIO_NUM < 12) {\n        NONNORM = 'S';\n        NONNORM_FLG = NONNORM_FLG.substring(0, 1) + 'J';\n        return pathA2();\n    } else {\n        return pathA2();\n    }\n}\n\n\n// Flow: set_BASIC_0\nfunction set_BASIC_0() {\n    if (ACTV_MIO_NUM < 10) {\n        path3();\n    } else if (PAY_QTR1_VAL_R === 0 && PAY_QTR1_VAL_FLG.substring(0, 1) === 'R' && !['C', 'G'].includes(PAY_QTR1_VAL_FLG.substring(1, 2))) {\n        PAY_QTR1_VAL = 0;\n        PAY_QTR1_VAL_FLG = PAY_QTR1_VAL_FLG.substring(0, 1) + 'Z ';\n        EMP_MAR12_NUM = 0;\n        EMP_MAR12_NUM_FLG = EMP_MAR12_NUM_FLG.substring(0, 1) + 'Z ';\n        return pathA2();\n    } else {\n        return pathA2();\n    }\n}\n\n\nfunction path3() {\n    if (PAY_QTR1_VAL_FLG.substring(1, 2) === 'G') {\n        return pathB3();\n    } else {\n        PAY_QTR1_VAL = 0;\n        PAY_QTR1_VAL_FLG = PAY_QTR1_VAL_FLG.substring(0, 1) + 'Z ';\n        return pathB3();\n    }\n}\n\nfunction pathB3() {\n    if (EMP_MAR12_NUM_F.substring(1, 2) === 'G') {\n        return pathA2();\n    } else {\n        EMP_MAR12_NUM = 0;\n        EMP_MAR12_NUM_FLG = EMP_MAR12_NUM_FLG.substring(0, 1) + 'Z ';\n        return pathA2();\n    }\n}\n\n\n// Flow: SPECIAL_SEASON\nfunction SPECIAL_SEASON() {\n    if (PAY_QTR1_VAL_FLG.substring(0, 2) !== 'R ' && !['C', 'G', 'L', 'N', 'Z'].includes(PAY_QTR1_VAL_FLG.substring(1, 2))) {\n        return path4();\n    } else {\n        return pathA2();\n    }\n}\n\nfunction path4() {\n    if (RECORD_TYP === 90) {\n        return path5();\n    } else if (CY_PAY_QTR1_VAL === 0) {\n        ECPAYQ1ZERO = 'TRUE';\n        return path6();\n    } else {\n        return pathA2();\n    }\n}\n\nfunction path5() {\n    if (ECPAYQ1 === 0) {\n        ECPAYQ1ZERO = 'TRUE';\n        return path6();\n    } else {\n        return pathA2();\n    }\n}\n\nfunction path6() {\n    if (EMP_MAR12_NUM_FLG.substring(0, 2) !== 'R ' && !['C', 'G', 'L', 'N', 'Z'].includes(EMP_MAR12_NUM_FLG.substring(1, 2)) && ECPAYQ1ZERO === 'TRUE') {\n        return path7();\n    } else {\n        return pathA2();\n    }\n}\n\nfunction path7() {\n    if (RECORD_TYP === 90) {\n        return path8();\n    } else if (CY_EMP_MAR12_NUM === 0) {\n        EMP_MAR12_NUM_FLG = EMP_MAR12_NUM_FLG.substring(0, 1) + 'Z ';\n        PAY_QTR1_VAL_FLG = PAY_QTR1_VAL_FLG.substring(0, 1) + 'Z ';\n        return pathA2();\n    } else {\n        return pathA2();\n    }\n}\n\nfunction path8() {\n    if (ECEMPQ1 === 0) {\n        EMP_MAR12_NUM_FLG = EMP_MAR12_NUM_FLG.substring(0, 1) + 'Z ';\n        PAY_QTR1_VAL_FLG = PAY_QTR1_VAL_FLG.substring(0, 1) + 'Z ';\n        return pathA2();\n    } else {\n        return pathA2();\n    }\n}\n\nmsg.payload.csv[0] = processPayload();\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 180,
        "wires": [
            [
                "106e02af56dc00ee",
                "d6c45ec5ceb3d90d"
            ]
        ]
    },
    {
        "id": "106e02af56dc00ee",
        "type": "debug",
        "z": "a51d10c50d9dbbe0",
        "name": "nonnorm debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 120,
        "wires": []
    },
    {
        "id": "8807ce2046dc8a32",
        "type": "link in",
        "z": "a51d10c50d9dbbe0",
        "name": "link in 27",
        "links": [
            "cd8a05808eedb5f3",
            "9b4f297579e277a4"
        ],
        "x": 295,
        "y": 180,
        "wires": [
            [
                "d97e7c0dec380b3d"
            ]
        ]
    },
    {
        "id": "d6c45ec5ceb3d90d",
        "type": "link out",
        "z": "a51d10c50d9dbbe0",
        "name": "link out 21",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9"
        ],
        "x": 595,
        "y": 180,
        "wires": []
    },
    {
        "id": "f9d1673db51a9648",
        "type": "subflow:120ad61b88a550e6",
        "z": "0d9e5c860a9703c5",
        "name": "BR STAT",
        "x": 240,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "b1b2614afa7a9819",
        "type": "subflow:a08711b1cedb891d",
        "z": "0d9e5c860a9703c5",
        "name": "NONNORM",
        "x": 250,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "0f093fecdb3fb8b7",
        "type": "subflow:a3136c877b98e237",
        "z": "0d9e5c860a9703c5",
        "name": "Critical Error",
        "x": 250,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "353a67bfb86ddc5e",
        "type": "subflow:a3d425ba6d3b6a6a",
        "z": "0d9e5c860a9703c5",
        "name": "Classification",
        "x": 250,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "e3bfa58d95033efb",
        "type": "subflow:4ed21c9150f5597a",
        "z": "0d9e5c860a9703c5",
        "name": "Geography",
        "x": 240,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "f288cd0eda2f62eb",
        "type": "subflow:a0bced2e224712c4",
        "z": "0d9e5c860a9703c5",
        "name": "Calculate Best Admin Receipts",
        "x": 310,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "9b43712ccf6f86b3",
        "type": "subflow:1e75121bac78652a",
        "z": "0d9e5c860a9703c5",
        "name": "Completeness",
        "x": 250,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "470e925ad95178ab",
        "type": "subflow:acd9862f30af144d",
        "z": "0d9e5c860a9703c5",
        "name": "PV",
        "x": 230,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "4273fe96f1205dd1",
        "type": "subflow:ae0faa518ff234d5",
        "z": "0d9e5c860a9703c5",
        "name": "Derived Items",
        "x": 700,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "7f9058d90d572f3a",
        "type": "subflow:473d6735cc46fccd",
        "z": "0d9e5c860a9703c5",
        "name": "Logical Edits",
        "x": 710,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "61fb85368c324e9d",
        "type": "subflow:fd9469a0efbb8a77",
        "z": "0d9e5c860a9703c5",
        "name": "Balance",
        "x": 700,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "8ba47f691cf2e418",
        "type": "subflow:96f29b19e2260e65",
        "z": "0d9e5c860a9703c5",
        "name": "Post Edit",
        "x": 700,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "a464ed1d6f2d6fc2",
        "type": "function",
        "z": "f63af22e81ed47a8",
        "name": "Derived Items function",
        "func": "let csv = msg.payload.csv[0]\ncsv.YEAR_END_DATE = new Date(csv.YEAR_END_DATE)\ncsv.YEAR_START_DATE = new Date(csv.YEAR_START_DATE)\n\nlet items = [\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCP_TOT_VAL_SUM\",\n        \"DESCRIPTION\": \"Sum estabs receipts to KAU\",\n        \"CALCULATION\": \"csv.ESTAB.RCP_TOT_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"EMP_MAR12_VAL_SUM \",\n        \"DESCRIPTION\": \"Sum estabs employment to KAU\",\n        \"CALCULATION\": \"csv.ESTAB.EMP_MAR12_VAL\",\n        \"Temp or Perm\": \"P\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"PAY_QTR1_VAL_SUM\",\n        \"DESCRIPTION\": \"Sum estabs qtr1 payroll to KAU\",\n        \"CALCULATION\": \"csv.ESTAB.PAY_QTR1_VAL\",\n        \"Temp or Perm\": \"P\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"PAY_ANN_VAL_SUM\",\n        \"DESCRIPTION\": \"Sum estabs payroll to KAU\",\n        \"CALCULATION\": \"csv.ESTAB.PAY_ANN_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": ['31', '32', '33'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"CAPEX_NEW_TOT_SUM\",\n        \"DESCRIPTION\": \"Sum estab new capital expenditures to KAU\",\n        \"CALCULATION\": \"csv.ESTAB.CAPEX_NEW_TOT_DVAL\",\n        \"Temp or Perm\": \"P\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"CAPEX_TOT_DVAL_SUM\",\n        \"DESCRIPTION\": \"Sum estab capital expenditures to KAU \",\n        \"CALCULATION\": \"csv.ESTAB.CAPEX_TOT\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"CAPEX_MACH_TOT_SUM \",\n        \"DESCRIPTION\": \"Sum estab machinery capital expenditures to KAU \",\n        \"CALCULATION\": \"csv.ESTAB.CAPEX_MACH_TOT\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"COMPANY\",\n        \"DERIVED ITEM\": \"CAPEX_MACH_TOT_SUM \",\n        \"DESCRIPTION\": \"Sum KAU machinery capital expenditures to  Company\",\n        \"CALCULATION\": \"csv.KAU.CAPEX_MACH_TOT\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"COMPANY\",\n        \"DERIVED ITEM\": \"CAPEX_TOT_DVAL_SUM\",\n        \"DESCRIPTION\": \"Sum KAU capital expenditures to Company \",\n        \"CALCULATION\": \"csv.KAU.CAPEX_TOT\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"COMPANY\",\n        \"DERIVED ITEM\": \"EMP_MAR12_VAL_SUM \",\n        \"DESCRIPTION\": \"Sum KAU employment to Company\",\n        \"CALCULATION\": \"csv.KAU.EMP_MAR12_VAL\",\n        \"Temp or Perm\": \"P\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"COMPANY\",\n        \"DERIVED ITEM\": \"PAY_QTR1_VAL_SUM \",\n        \"DESCRIPTION\": \"Sum estabs qtr1 payroll to KAU\",\n        \"CALCULATION\": \"csv.KAU.PAY_QTR1_VAL\",\n        \"Temp or Perm\": \"P\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"COMPANY\",\n        \"DERIVED ITEM\": \"PAY_ANN_VAL_SUM \",\n        \"DESCRIPTION\": \"Sum estabs payroll to KAU\",\n        \"CALCULATION\": \"csv.KAU.PAY_ANN_VAL\",\n        \"Temp or Perm\": \"P\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"COMPANY\",\n        \"DERIVED ITEM\": \"csv.RCPT_TOT_VAL_SUM \",\n        \"DESCRIPTION\": \"Sum KAU receipts to KAU\",\n        \"CALCULATION\": \"csv.KAU.RCPT_TOT_VAL\",\n        \"Temp or Perm\": \"P\"\n    },\n    {\n        \"NAICS/Tax status\": \"All\",\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"CAPEX_NEW_TOT_SUM \",\n        \"DESCRIPTION\": \"Sum KAU new capital expenditures to Company\",\n        \"CALCULATION\": \"csv.KAU.CAPEX_NEW_TOT_DVAL\",\n        \"Temp or Perm\": \"P\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS4\": ['4251'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_AGBR_REV_DVAL\",\n        \"CALCULATION\": \"csv.RCPT_OWN_VAL + csv.RCPT_COMSN_EARN_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS4\": ['4251'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_COMSN_AVG_RATE_RAT\",\n        \"DESCRIPTION\": \"derived commission rate\",\n        \"CALCULATION\": \"csv.RCPT_COMSN_EARN_VAL/csv.RCPT_COMSN_GSV_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": ['42'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_STOR_DVAL\",\n        \"DESCRIPTION\": \"non-ecommerce (in-store)\",\n        \"CALCULATION\": \"csv.RCPT_TOT_VAL-csv.RCPT_ECOMM_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['423', '424'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"INV_DOM_DVAL\",\n        \"DESCRIPTION\": \"inventory IN the US\",\n        \"CALCULATION\": \"csv.INV_CY_TOT-csv.INV_ENROUTE_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": ['31', '32', '33'] },\n        \"UNIT\": \"Estab/all?\",\n        \"DERIVED ITEM\": \"EXPS_CSTMTOT_DVAL\",\n        \"DESCRIPTION\": \"deriving ASM/EC mfg collected total cost item, needed to make use of VALUE_ADDED item straight-forward in tabbing and disclosure\",\n        \"CALCULATION\": \"csv.EXPS_MAT_V1_VAL + csv.EXP_RESALE_VAL + csv.EXPS_FUEL_VAL + csv.EXPS_ELEC_VAL + csv.EXPS_CONTRACT_VAL\",\n        \"Temp or Perm\": \"p\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": ['31', '32', '33'] },\n        \"UNIT\": \"Estab/all?\",\n        \"DERIVED ITEM\": \"EXPS_RPTOT_DVAL\",\n        \"DESCRIPTION\": \"deriving ASM/EC mfg collected total rental payments \",\n        \"CALCULATION\": \"csv.EXPS_RENT_BUILD_VAL + csv.EXPS_RENT_MACH_VAL\",\n        \"Temp or Perm\": \"p\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": ['31', '32', '33'] },\n        \"UNIT\": \"Estab/all?\",\n        \"DERIVED ITEM\": \"EXPS_PCHTT_DVAL\",\n        \"DESCRIPTION\": \"deriving ASM/EC mfg collected total purchased services\",\n        \"CALCULATION\": \"csv.EXPS_TEMPSTAF_VAL + csv.EXPS_COMPTR_OTHEQ_VAL + csv.EXPS_EXSOFT_VAL + csv.EXPS_COMMSVC_VAL + csv.EXPS_DATAPROC_VAL + csv.EXPS_BUILD_REP_VAL + csv.EXPS_MACH_REP_VAL + csv.EXPS_REFUSE_VAL + csv.EXPS_ADVERT_VAL + csv.EXPS_PROFTECH_VAL + csv.EXPS_TAX_VAL + csv.EXPS_OTHER_VAL\",\n        \"Temp or Perm\": \"p\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": ['31', '32', '33'] },\n        \"UNIT\": \"Estab/all?\",\n        \"DERIVED ITEM\": \"VALUE_ADDED_DVAL\",\n        \"DESCRIPTION\": \"Value Added formula from ASM/EC mfg, uses the recently created derived 'total costs'  Additions and Subtractions can be sequenced differently if needed\",\n        \"CALCULATION\": \"csv.RCPT_TOT_VAL + csv.INV_CY_FINISHED_VAL + csv.INV_CY_WRKPROC_VAL - csv.EXPS_CSTMTOT_DVAL - csv.INV_PY_FINISHED_VAL - csv.INV_PY_WRKPROC_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": ['22'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_AGR_DVAL\",\n        \"DESCRIPTION\": \"Agricultural Products motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_AGR_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_GRAIN_DVAL\",\n        \"DESCRIPTION\": \"Grains, Alcohol, Tobacco Products motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_GRAIN_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_STONE_DVAL\",\n        \"DESCRIPTION\": \"Stone, Nonmetallic minerals motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_STONE_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_FUEL_DVAL\",\n        \"DESCRIPTION\": \"Coal and Petroleum Products motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_FUEL_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_PHARM_DVAL\",\n        \"DESCRIPTION\": \"Pharmaceutical and chemical products motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_PHARM_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_WOOD_DVAL\",\n        \"DESCRIPTION\": \"Wood Products, Textiles, Leather motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_WOOD_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_METAL_DVAL\",\n        \"DESCRIPTION\": \"Base Metal and Machinery motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_METAL_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_ELECT_DVAL\",\n        \"DESCRIPTION\": \"Electronic & Precision motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_ELECT_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_USEDGD_DVAL\",\n        \"DESCRIPTION\": \"Used household and office goods motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_USEDGD_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_NEWFRN_DVAL\",\n        \"DESCRIPTION\": \"New Furniture & Misc. Prods motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_NEWFRN_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_OTH_DVAL\",\n        \"DESCRIPTION\": \"Other motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_OTH_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['484'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_MOTR_HAZRD_DVAL\",\n        \"DESCRIPTION\": \"Hazardous Materials motor carrier revenue\",\n        \"CALCULATION\": \"(csv.RCPT_MOTR_HAZRD_PCT*csv.RCPT_MOTR_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": ['22'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_CUST_RES_DVAL\",\n        \"DESCRIPTION\": \"Residential Customers Revenue\",\n        \"CALCULATION\": \"(csv.RCPT_CUST_RES_PCT*csv.RCPT_TOT_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": ['22'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_CUST_NORES_DVAL\",\n        \"DESCRIPTION\": \"Non-residential consumer revenue\",\n        \"CALCULATION\": \"(csv.RCPT_CUST_NORES_PCT*csv.RCPT_TOT_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['519130', '517210', '517110', '517911'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_CUST_BUS_DVAL\",\n        \"DESCRIPTION\": \"Revenue by Gov & Business\",\n        \"CALCULATION\": \"(csv.RCPT_CUST_BUS_PCT*csv.RCPT_TOT_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['519130', '517210', '517110', '517911'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_CUST_IND_DVAL\",\n        \"DESCRIPTION\": \"SOURCE OF REVENUE - HOUSEHOLD\",\n        \"CALCULATION\": \"(csv.RCPT_CUST_IND_PCT*csv.RCPT_TOT_VAL)/100 \",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['561510', '561599'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_BUS_DVAL \",\n        \"DESCRIPTION\": \"business travel revenue\",\n        \"CALCULATION\": \"(csv.RCPT_BUS_PCT *csv.RCPT_TOT_VAL)/100)\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['561510', '561599', '561520'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_LEISURE_DVAL \",\n        \"DESCRIPTION\": \"leisure revenue\",\n        \"CALCULATION\": \"(csv.RCPT_LEISURE_PCT *csv.RCPT_TOT_VAL)/100)\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_NEWS_PRNT_DVAL\",\n        \"DESCRIPTION\": \"Print newspapers revenue\",\n        \"CALCULATION\": \"(csv.RCPT_NEWS_PRNT_PCT*(csv.RCPT_NEWS_PUB_VAL+csv.RCPT_ADV_SPACE_VAL))/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_NEWS_ONLINE_DVAL\",\n        \"DESCRIPTION\": \"online newspapers revenue\",\n        \"CALCULATION\": \"(csv.RCPT_NEWS_ONLINE_PCT*(csv.RCPT_NEWS_PUB_VAL+csv.RCPT_ADV_SPACE_VAL))/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_NEWS_OTH_DVAL\",\n        \"DESCRIPTION\": \"other media newspaper revenue\",\n        \"CALCULATION\": \"(csv.RCPT_NEWS_OTH_PCT*(csv.RCPT_NEWS_PUB_VAL+csv.RCPT_ADV_SPACE_VAL))/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_ADV_CLASS_DVAL\",\n        \"DESCRIPTION\": \"classified advertising revenue\",\n        \"CALCULATION\": \"(csv.RCPT_ADV_CLASS_PCT*csv.RCPT_ADV_SPACE_VAL/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_ADV_OTH_DVAL\",\n        \"DESCRIPTION\": \"all other advertising revenue\",\n        \"CALCULATION\": \"(csv.RCPT_ADV_OTH_PCT*csv.RCPT_ADV_SPACE_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['517110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_CUST_LOCTEL_BUS_DVAL\",\n        \"DESCRIPTION\": \"Fixed Local Tel - Gov & Business revenue\",\n        \"CALCULATION\": \"(csv.RCPT_CUST_LOCTEL_BUS_PCT*csv.RCPT_LOCTEL_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['517110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_CUST_LOCTEL_IND_DVAL\",\n        \"DESCRIPTION\": \"Household Fixed Local Telephony revenue\",\n        \"CALCULATION\": \"(csv.RCPT_CUST_LOCTEL_IND_PCT*csv.RCPT_LOCTEL_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['517110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_CUST_LNGTEL_BUS_DVAL\",\n        \"DESCRIPTION\": \"Fixed Long Dist - Gov & Business revenue\",\n        \"CALCULATION\": \"(csv.RCPT_CUST_LNGTEL_BUS_PCT*csv.RCPT_LNGTEL_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['517110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_CUST_LNGTEL_IND_DVAL\",\n        \"DESCRIPTION\": \"Household Fixed Long-distance revenue\",\n        \"CALCULATION\": \"(csv.RCPT_CUST_LNGTEL_IND_PCT*csv.RCPT_LNGTEL_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['517110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_CUST_SUBLIN_BUS_DVAL\",\n        \"DESCRIPTION\": \"Subscriber Line - Gov & Business revenue\",\n        \"CALCULATION\": \"(csv.RCPT_CUST_SUBLIN_BUS_PCT*csv.RCPT_SUBLIN_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['517110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_CUST_SUBLIN_IND_DVAL\",\n        \"DESCRIPTION\": \"Household Subscriber Line Charge revenue\",\n        \"CALCULATION\": \"(csv.RCPT_CUST_SUBLIN_IND_PCT*csv.RCPT_SUBLIN_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511120'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_PER_PRNT_DVAL\",\n        \"DESCRIPTION\": \"print periodicals revenue\",\n        \"CALCULATION\": \"(csv.RCPT_PER_PRNT_PCT*(csv.RCPT_PER_PUB_VAL+csv.RCPT_ADV_SPACE_VAL))/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511120'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_PER_ONLINE_DVAL\",\n        \"DESCRIPTION\": \"online periodicals revenue\",\n        \"CALCULATION\": \"(csv.RCPT_PER_ONLINE_PCT*(csv.RCPT_PER_PUB_VA+csv.RCPT_ADV_SPACE_VALL))/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511120'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_PER_OTH_DVAL\",\n        \"DESCRIPTION\": \"other media periodicals revenue\",\n        \"CALCULATION\": \"(csv.RCPT_PER_OTH_PCT*(csv.RCPT_PER_PUB_VAL+csv.RCPT_ADV_SPACE_VAL))/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"511140\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \" csv.RCPT_SYSOFT_PERS_DVAL\",\n        \"DESCRIPTION\": \"Personal Computer System Software revenue\",\n        \"CALCULATION\": \"(csv.RCPT_SYSOFT_PERS_PCT*csv.RCPT_SYSOFT_PUB_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"511140\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \" csv.RCPT_SYSOFT_ENTR_DVALT\",\n        \"DESCRIPTION\": \"Enterprise or Network System Software revenue\",\n        \"CALCULATION\": \"(csv.RCPT_SYSOFT_ENTR_PCTT*csv.RCPT_SYSOFT_PUB_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"511140\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \" csv.RCPT_SYSOFT_MAIN_DVAL\",\n        \"DESCRIPTION\": \"Mainframe Computer System Software revenue\",\n        \"CALCULATION\": \"(csv.RCPT_SYSOFT_MAIN_PCT*csv.RCPT_SYSOFT_PUB_VAL/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"511140\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \" csv.RCPT_SYSOFT_OTH_DVAL\",\n        \"DESCRIPTION\": \"Other System Software revenue\",\n        \"CALCULATION\": \"(csv.RCPT_SYSOFT_OTH_PCT*csv.RCPT_SYSOFT_PUB_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"511140\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"csv.RCPT_APSOFT_PERS_DVAL\",\n        \"DESCRIPTION\": \"Personal Computer Application Software revenue\",\n        \"CALCULATION\": \"(csv.RCPT_APSOFT_PERS_PCT*csv.RCPT_APSOFT_PUB_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"511140\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"csv.RCPT_APSOFT_ENTR_DVAL\",\n        \"DESCRIPTION\": \"Enterprise or Network Application revenue\",\n        \"CALCULATION\": \"(csv.RCPT_APSOFT_ENTR_PCT*csv.RCPT_APSOFT_PUB_VAL/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"511140\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"csv.RCPT_APSOFT_MAIN_DVAL\",\n        \"DESCRIPTION\": \"Mainframe Computer Application Software revenue\",\n        \"CALCULATION\": \"(csv.RCPT_APSOFT_MAIN_PCT*csv.RCPT_APSOFT_PUB_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"511140\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"csv.RCPT_APSOFT_OTH_DVAL\",\n        \"DESCRIPTION\": \"Other Application Software revenue\",\n        \"CALCULATION\": \"(csv.RCPT_APSOFT_OTH_PCT*csv.RCPT_APSOFT_PUB_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511140'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_DIR_PRNT_DVAL\",\n        \"DESCRIPTION\": \"directory/dbase - Print\",\n        \"CALCULATION\": \"(csv.RCPT_DIR_PRNT_PCT*(csv.RCPT_DIR_PUB_VAL,csv.RCPT_ADV_SPACE_VAL))/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511140'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_DIR_ONLINE_DVAL\",\n        \"DESCRIPTION\": \"directory/dbase - Online\",\n        \"CALCULATION\": \"(csv.RCPT_DIR_ONLINE_PCT*(csv.RCPT_DIR_PUB_VAL,csv.RCPT_ADV_SPACE_VAL))/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511140'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_DIR_OTH_DVAL\",\n        \"DESCRIPTION\": \"directory/dbase - Other media\",\n        \"CALCULATION\": \"(csv.RCPT_DIR_OTH_PCT*(csv.RCPT_DIR_PUB_VAL,csv.RCPT_ADV_SPACE_VAL))/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511130'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_BOOK_PRNT_DVAL\",\n        \"DESCRIPTION\": \"print books revenue\",\n        \"CALCULATION\": \"(csv.RCPT_BOOK_PRNT_PCT*csv.RCPT_BOOK_PUB_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511130'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_BOOK_ONLINE_DVAL\",\n        \"DESCRIPTION\": \"online books revenue\",\n        \"CALCULATION\": \"(csv.RCPT_BOOK_ONLINE_PCT*csv.RCPT_BOOK_PUB_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511130'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_BOOK_OTH_DVAL\",\n        \"DESCRIPTION\": \"other media books revenue\",\n        \"CALCULATION\": \"(csv.RCPT_BOOK_OTH_PCT*csv.RCPT_BOOK_PUB_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511110'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_NEWS_PUB_DVAL\",\n        \"DESCRIPTION\": \"Newspaper Publishers revenue\",\n        \"CALCULATION\": \"csv.RCPT_NEWS_PUB_VAL + csv.RCPT_ADV_SPACE_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511120'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_PER_PUB_DVAL\",\n        \"DESCRIPTION\": \"Periodical Publisher revenue\",\n        \"CALCULATION\": \"csv.RCPT_PER_PUB_VAL + csv.RCPT_ADV_SPACE_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS5\": ['72111', '72112'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_TOT_HOTEL_OWN3RD_DVAL\",\n        \"DESCRIPTION\": \"CY Sum Of Firm's Rev & Managed Rev\",\n        \"CALCULATION\": \"csv.RCPT_TOT_VAL + csv.RCPT_TOT_HOTEL_OWN3RD_VAL\",\n        \"Temp or Perm\": \"T\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS5\": ['72111', '72112'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"EXPS_TOT_HOTEL_OWN3RD_DVAL\",\n        \"DESCRIPTION\": \"CY Sum of Hotel's expenses & Managed expenses\",\n        \"CALCULATION\": \"csv.EXPS_TOT_VAL + csv.EXPS_TOT_HOTEL_OWN3RD_VAL\",\n        \"Temp or Perm\": \"T\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS4\": ['622'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_PAT_OUT_DVAL\",\n        \"DESCRIPTION\": \"Outpatient Care Services\",\n        \"CALCULATION\": \"(csv.RCPT_PAT_OUT_PCT*(csv.RCPT_MEDICARE_VAL+ csv.RCPT_MEDICAID_VAL+ csv.RCPT_WORKCOMP_VAL+  csv.RCPT_OTH_GOVPROG_VAL+ csv.RCPT_HLTHCARE_PRVDRS_VAL+ csv.RCPT_PVTHLTH_INS_VAL+ csv.RCPT_PROPCSLTY_INS_VAL+ csv.RCPT_PAT_OUTPCKT_VAL+ csv.RCPT_PATCARE_OTH_VAL))/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS5\": ['72111', '72112'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_ECOMM_DVAL\",\n        \"DESCRIPTION\": \"Electronic Revenue\",\n        \"CALCULATION\": \"csv.RCPT_ECOMM_ES_VAL + csv.RCPT_ECOMM_HOTEL_OWN3RD_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['622'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_PAT_IN_DVAL\",\n        \"DESCRIPTION\": \" Inpatient Care Services\",\n        \"CALCULATION\": \"(csv.RCPT_PAT_IN_PCT * (csv.RCPT_MEDICARE_VAL + csv.RCPT_MEDICAID_VAL + csv.RCPT_WORKCOMP_VAL + csv.RCPT_OTH_GOVPROG_VAL + csv.RCPT_HLTHCARE_PRVDRS_VAL + csv.RCPT_PVTHLTH_INS_VAL + csv.RCPT_PROPCSLTY_INS_VAL + csv.RCPT_PAT_OUTPCKT_VAL + csv.RCPT_PATCARE_OTH_VAL)) / 100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS4\": ['6215'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_NONOP_DVAL\",\n        \"DESCRIPTION\": \"Non-Patient Care Revenue\",\n        \"CALCULATION\": \"csv.RCPT_NONOP_GIFTS_VAL + csv.RCPT_NONOP_INVST_VAL + csv.RCPT_NONPT_HCARE_PRVDRS_VAL + csv.RCPT_NONPT_OTH_VAL\",\n        \"Temp or Perm\": \"T\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['621', '622', '623'], \"_TXRCD00\": ['T'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_NONOP_GIFT_INVST_DVAL\",\n        \"DESCRIPTION\": \"subsidies, Contr., Gifts & Grants+Investment and property income\",\n        \"CALCULATION\": \"csv.RCPT_NONOP_GIFTS_VAL + csv.RCPT_NONOP_INVST_VAL\",\n        \"Temp or Perm\": \"T\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": ['621', '622', '623'], \"NAICS4!\": ['6215', '6219'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_NONTELEMED_DVAL\",\n        \"DESCRIPTION\": \"Non-Telemedicine\",\n        \"CALCULATION\": \"(csv.RCPT_TOT_VAL-csv.RCPT_TELEMED_VAL)\",\n        \"Temp or Perm\": \"T\",\n        \"Order\": 2,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": ['62'], \"NAICS3!\": ['624', '623', '6215'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_PATCARE1_DVAL\",\n        \"DESCRIPTION\": \"Patient Care Revenue\",\n        \"CALCULATION\": \"csv.RCPT_MEDICARE_VAL + csv.RCPT_MEDICAID_VAL + csv.RCPT_WORKCOMP_VAL + csv.RCPT_OTH_GOVPROG_VAL + csv.RCPT_HLTHCARE_PRVDRS_VAL + csv.RCPT_PVTHLTH_INS_VAL + csv.RCPT_PROPCSLTY_INS_VAL + csv.RCPT_PAT_OUTPCKT_VAL + csv.RCPT_PATCARE_OTH_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS3\": [\"623\"] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_PATCARE2_DVAL\",\n        \"DESCRIPTION\": \"Patient Care Revenue\",\n        \"CALCULATION\": \"csv.RCPT_MEDICARE_VAL + csv.RCPT_MEDICAID_VAL + csv.RCPT_WORKCOMP_VAL + csv.RCPT_OTH_GOVPROG_VAL + csv.RCPT_PVTHLTH_INS_VAL + csv.RCPT_PROPCSLTY_INS_VAL + csv.RCPT_PAT_OUTPCKT_VAL + csv.RCPT_PATCARE_OTH_VAL + csv.RCPT_NEWPT_SSBNFTS_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS4\": [\"6215\"] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_PATCARE3_DVAL\",\n        \"DESCRIPTION\": \"Patient Care Revenue\",\n        \"CALCULATION\": \"csv.RCPT_MEDICARE_VAL + csv.RCPT_MEDICAID_VAL + csv.RCPT_WORKCOMP_VAL + csv.RCPT_OTH_GOVPROG_VAL + csv.RCPT_HLTHCARE_PRVDRS_VAL + csv.RCPT_PVTHLTH_INS_VAL + csv.RCPT_PROPCSLTY_INS_VAL + csv.RCPT_PAT_OUTPCKT_VAL + csv.RCPT_PATCARE_OTH_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"561330\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_BILL_PAY_DVAL\",\n        \"DESCRIPTION\": \"all other operating revenue\",\n        \"CALCULATION\": \"(csv.RCPT_BILL_OTHOP_PCT*csv.RCPT_GROSSBILL_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"561330\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_GROSSBILL_PAY_DVAL\",\n        \"DESCRIPTION\": \"Gross Billings x Payroll Services\",\n        \"CALCULATION\": \"(csv.RCPT_BILL_PAY_PCT*csv.RCPT_GROSSBILL_VAL)/100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"511140\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_SYSOFT_DVAL\",\n        \"DESCRIPTION\": \"system software\",\n        \"CALCULATION\": \"csv.RCPT_SYSOFT_PERS_DVAL + csv.RCPT_SYSOFT_ENTR_DVAL + csv.RCPT_SYSOFT_MAIN_DVAL + csv.RCPT_SYSOFT_OTH_DVAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 2,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS6\": [\"511140\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_APSOFT_DVAL\",\n        \"DESCRIPTION\": \"application software\",\n        \"CALCULATION\": \"csv.RCPT_APSOFT_PERS_DVAL + csv.RCPT_APSOFT_ENTR_DVAL + csv.RCPT_APSOFT_MAIN_DVAL + csv.RCPT_APSOFT_OTH_DVAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 2,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": ['511140'] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_DIR_PUB_DVAL\",\n        \"DESCRIPTION\": \"Database and Directory Publisher revenue\",\n        \"CALCULATION\": \"csv.RCPT_DIR_PUB_VAL + csv.RCPT_ADV_SPACE_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS2\": [\"42\", \"44\", \"45\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"PURCHASES_DPCT\",\n        \"DESCRIPTION\": \"purchases percent of sales\",\n        \"CALCULATION\": \"(csv.EXPS_PRCH_RESALE_VAL / csv.RCPT_TOT_VAL) * 100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS2\": [\"42\", \"44\", \"45\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"INVENTORY_DPCT\",\n        \"DESCRIPTION\": \"total inventory percent of sales\",\n        \"CALCULATION\": \"(csv.INV_PREADJ_LIFO_VAL/csv.RCPT_TOT_VAL) * 100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS2\": [\"42\", \"44\", \"45\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"EXP_DPCT\",\n        \"DESCRIPTION\": \"expenses percent of sales\",\n        \"CALCULATION\": \"(csv.EXPS_TOT_VAL/csv.RCPT_TOT_VAL) * 100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS2\": [\"42\", \"44\", \"45\"]},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"ECOMM_DPCT\",\n        \"DESCRIPTION\": \"ecommerce percent of sales\",\n        \"CALCULATION\": \"(csv.RCPT_ECOMM_VAL / csv.RCPT_TOT_VAL) * 100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": [\"42\", \"44\", \"45\"] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"PROFIT_LOSS_DVAL\",\n        \"DESCRIPTION\": \"profit/loss amount\",\n        \"CALCULATION\": \"(csv.RCPT_TOT_VAL - csv.EXPS_PRCH_RESALE_VAL - csv.EXPS_TOT_VAL)\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS2\": [\"42\", \"44\", \"45\"] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"REPORTED_WEEKS_DNUM\",\n        \"DESCRIPTION\": \"number of weeks reported for\",\n        \"CALCULATION\": \"(csv.YEAR_END_DATE - csv.YEAR_START_DATE)/7\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": [\"454110\"] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"MRCH_SALES_DVAL\",\n        \"DESCRIPTION\": \"sum of sales merchandise lines\",\n        \"CALCULATION\": \"csv.RCPT_BOOK_VAL + csv.RCPT_CLOTH_VAL + csv.RCPT_COMP_VAL + csv.RCPT_SOFT_VAL + csv.RCPT_DRUGS_VAL + csv.RCPT_ELAPPL_VAL + csv.RCPT_FDBRWN_VAL + csv.RCPT_FURNTR_VAL + csv.RCPT_JWLRY_VAL + csv.RCPT_AUDVID_VAL + csv.RCPT_OFCEQ_VAL + csv.RCPT_SPTGD_VAL + csv.RCPT_TOYS_VAL + csv.RCPT_OTHMRCH_VAL + csv.RCPT_SHPHDL_VAL + csv.RCPT_ADVERT_VAL + csv.RCPT_NONMRCH_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": [\"454110\"] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"MRCH_NONMERCH_SALES_DVAL\",\n        \"DESCRIPTION\": \"non-merchandise sales derived estimate\",\n        \"CALCULATION\": \"csv.RCPT_SHPHDL_VAL + csv.RCPT_ADVERT_VAL + csv.RCPT_NONMRCH_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": [\"454110\"] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"MRCH_ECOMMERCE_DVAL\",\n        \"DESCRIPTION\": \"sum of ecommerce merchadise lines\",\n        \"CALCULATION\": \"csv.RCPT_ECOMM_BOOK_VAL + csv.RCPT_ECOMM_CLOTH_VAL + csv.RCPT_ECOMM_COMP_VAL + csv.RCPT_ECOMM_SOFT_VAL + csv.RCPT_ECOMM_DRUGS_VAL + csv.RCPT_ECOMM_ELAPPL_VAL + csv.RCPT_ECOMM_FDBRWN_VAL + csv.RCPT_ECOMM_FURNTR_VAL + csv.RCPT_ECOMM_JWLRY_VAL + csv.RCPT_ECOMM_AUDVID_VAL + csv.RCPT_ECOMM_OFCEQ_VAL + csv.RCPT_ECOMM_SPTGD_VAL + csv.RCPT_ECOMM_TOYS_VAL + csv.RCPT_OTHMRCH_VAL + csv.RCPT_ECOMM_SHPHDL_VAL + csv.RCPT_ECOMM_ADVERT_VAL + csv.RCPT_ECOMM_NONMRCH_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": { \"NAICS6\": [\"454110\"] },\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"MRCH_NONMERCH_EC_DVAL\",\n        \"DESCRIPTION\": \"non-merchandise ecommerce derived estimate\",\n        \"CALCULATION\": \"csv.RCPT_ECOMM_SHPHDL_VAL + csv.RCPT_ECOMM_ADVERT_VAL + csv.RCPT_ECOMM_NONMRCH_VAL\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS2\":['42']},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"INV_FOREIGN_DPCT\",\n        \"DESCRIPTION\": \"foreign inventory as a percent of total inventory\",\n        \"CALCULATION\": \"(csv.INV_ENROUTE_VAL / csv.INV_PREADJ_LIFO_VAL) * 100\",\n        \"Temp or Perm\": \"P\",\n        \"Order\": 1,\n        \"Flag\": \"D\"\n    },\n    {\n        \"NAICS/Tax status\": {\"NAICS5\":['72111','72112']},\n        \"UNIT\": \"KAU\",\n        \"DERIVED ITEM\": \"RCPT_TOT_DVAL\",\n        \"DESCRIPTION\": \"Total Revenue\",\n        \"CALCULATION\": \"csv.RCPT_TOT_HOTEL_OWN_VAL + csv.RCPT_TOT_HOTEL_OWN3RD_VAL\"\n    }\n]\n\nfor (const json of items) {\n    const naicsStatus = json[\"NAICS/Tax status\"];\n    const unit = json[\"UNIT\"];\n    const derivedItem = json[\"DERIVED ITEM\"];\n    const calculation = json[\"CALCULATION\"];\n\n    if (\n        naicsStatus &&\n        unit === csv[\"UNIT\"]\n    ) {\n        if (naicsStatus == \"All\") {\n            try {\n                const derivedValue = eval(calculation);\n                csv[derivedItem] = derivedValue;\n                csv.Perm = json[\"Temp or Perm\"] || \"P\";\n                csv.Order = json[\"Order\"] || 1;\n                csv.Flag = json[\"Flag\"] || \"D\";\n            } catch (error) {\n                console.error(\"Missing necessary variables for calculation:\", error);\n            }\n        } else {\n            if ((naicsStatus.NAICS2 && naicsStatus.NAICS2.includes(csv[\"NAICS2\"]?.toString())) || (naicsStatus.NAICS3 && naicsStatus.NAICS3.includes(csv[\"NAICS3\"]?.toString())) || (naicsStatus.NAICS4 && naicsStatus.NAICS4.includes(csv[\"NAICS4\"]?.toString())) || (naicsStatus.NAICS5 && naicsStatus.NAICS5.includes(csv[\"NAICS5\"]?.toString())) || (naicsStatus.NAICS6 && naicsStatus.NAICS6.includes(csv[\"NAICS6\"]?.toString()))) {\n                if ((!naicsStatus[\"NAICS3!\"] && !naicsStatus[\"NAICS4!\"]) || (naicsStatus[\"NAICS3!\"] && !naicsStatus[\"NAICS3!\"].includes(csv[\"NAICS3\"].toString())) || (naicsStatus[\"NAICS4!\"] && !naicsStatus[\"NAICS4!\"].includes(csv[\"NAICS4\"].toString()))) {\n                    if (!naicsStatus[\"_TXRCD00\"] || (naicsStatus[\"_TXRCD00\"] && naicsStatus[\"_TXRCD00\"].includes(csv[\"_TXRCD00\"]))) {\n                        try {\n                            const derivedValue = eval(calculation);\n                            csv[derivedItem] = derivedValue;\n                            csv.Perm = json[\"Temp or Perm\"] || \"P\";\n                            csv.Order = json[\"Order\"] || 1;\n                            csv.Flag = json[\"Flag\"] || \"D\";\n                        } catch (error) {\n                            console.error(\"Missing necessary variables for calculation:\", error);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n// msg.payload.csv[0] = csv\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 280,
        "wires": [
            [
                "d4dec6b719ce7f9d",
                "2e09b853297763c9"
            ]
        ]
    },
    {
        "id": "7a7af6643c8cdc10",
        "type": "link in",
        "z": "f63af22e81ed47a8",
        "name": "link in 28",
        "links": [
            "ff27924ce01b7894",
            "f4fc1424aec01ccf"
        ],
        "x": 135,
        "y": 280,
        "wires": [
            [
                "a464ed1d6f2d6fc2"
            ]
        ]
    },
    {
        "id": "2e09b853297763c9",
        "type": "link out",
        "z": "f63af22e81ed47a8",
        "name": "link out 22",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9"
        ],
        "x": 495,
        "y": 280,
        "wires": []
    },
    {
        "id": "d4dec6b719ce7f9d",
        "type": "debug",
        "z": "f63af22e81ed47a8",
        "name": "debug 47",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 200,
        "wires": []
    },
    {
        "id": "0c4def347547a284",
        "type": "function",
        "z": "0952db06f674f8bc",
        "name": "logical edits function",
        "func": "const items = [\n    {\n        \"VARIABLE\": \"TYPOP_CODE_STAT  RCPT_COMSN_GSV_VAL RCPT_OWN_VAL \\nRCPT_TOT_VAL\",\n        \"UNIT\": \"estab\",\n        \"NAICS\": \"NAICS3='425'\",\n        \"CONDITION \": \"TYPOP_CODE_STAT eq '4X' and RCPT_COMSN_GSV_VAL + RCPT_OWN_VAL ne RCPT_TOT_VAL\",\n        \"ACTION\": \"set review flag\"\n    },\n    {\n        \"VARIABLE\": \"TYPOP_CODE_STAT  RCPT_COMSN_GSV_VAL RCPT_COMSN_EARN_VAL RCPT_COMSN_AVG_RATE \",\n        \"UNIT\": \"estab\",\n        \"NAICS\": \"NAICS3='425'\",\n        \"CONDITION \": \"TYPOP_CODE_STAT eq '4X' and RCPT_COMSN_GSV_VAL not in (0,.) and RCPT_COMSN_EARN_VAL in (0,.) and RCPT_COMSN_AVG_RATE not in (0,.)\",\n        \"ACTION\": \"RCPT_COMSN_EARN_VAL = RCPT_COMSN_GSV_VAL * RCPT_COMSN_AVG_RATE\",\n        \" DESCRIPTION\": \"if they reported a gross selling value from goods gold on commission, and an average commission rate, but didn't provide the amount of commissions (or set to 0), use GSV * average commission rate to derive commission\"\n    },\n    {\n        \"VARIABLE\": \"TYPOP_CODE_STAT  RCPT_COMSN_GSV_VAL RCPT_COMSN_EARN_VAL RCPT_COMSN_AVG_RATE \",\n        \"UNIT\": \"estab\",\n        \"NAICS\": \"NAICS3='425'\",\n        \"CONDITION \": \"TYPOP_CODE_STAT eq '4X' and RCPT_COMSN_GSV_VAL in (0,.) and RCPT_COMSN_EARN_VAL not in (0,.) and RCPT_COMSN_AVG_RATE not in (0,.)\",\n        \"ACTION\": \"RCPT_COMSN_GSV_VAL = RCPT_COMSN_EARN_VAL \\/ RCPT_COMSN_AVG_RATE\",\n        \" DESCRIPTION\": \"if they reported commissions and an average commission rate but no GSV, use the commission and commission rate to calculate GSV\"\n    },\n    {\n        \"VARIABLE\": \"TYPOP_CODE_STAT\\nRCPT_OWN_VAL \\nRCPT_TOT_VAL RCPT_COMSN_GSV_VAL \\n RCPT_COMSN_EARN_VAL\",\n        \"UNIT\": \"estab\",\n        \"NAICS\": \"NAICS3='425'\",\n        \"CONDITION \": \"TYPOP_CODE_STAT = '4X' and RCPT_OWN_VAL eq 0 and RCPT_COMSN_GSV_VAL ne RCPT_TOT_VAL and RCPT_COMSN_GSV_VAL < RCPT_TOT_VAL and RCPT_TOT_VAL eq sum(RCPT_COMSN_GSV_VAL, RCPT_COMSN_EARN_VAL)\",\n        \"ACTION\": \"RCPT_TOT_VAL = RCPT_COMSN_GSV_VAL\",\n        \" DESCRIPTION\": \"if no sales on own account (i.e., all commission-based) and GSV does not equal total sales (which, by definition can't happen, because GSV + OWN = total sales and if OWN = 0, then GSV = SALES) and SALES = the sum of GSV + COMMISSION, set sales to GSV because commissions should not be included in total sales\"\n    },\n    {\n        \"VARIABLE\": \"TYPOP_CODE_STAT\\nRCPT_OWN_VAL \\nRCPT_TOT_VAL RCPT_COMSN_GSV_VAL \\n RCPT_COMSN_EARN_VAL\",\n        \"UNIT\": \"estab\",\n        \"NAICS\": \"NAICS3='425'\",\n        \"CONDITION \": \"TYPOP_CODE_STAT = '4X' and RCPT_OWN_VAL eq 0 and RCPT_COMSN_GSV_VAL ne RCPT_TOT_VAL and RCPT_COMSN_GSV_VAL > RCPT_TOT_VAL and RCPT_TOT_VAL eq RCPT_COMSN_EARN_VAL\",\n        \"ACTION\": \"RCPT_TOT_VAL = RCPT_COMSN_GSV_VAL\",\n        \" DESCRIPTION\": \"if they reported sales as commissions, set sales = GSV\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_ECOMM_VAL\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"42', '44', '45'\",\n        \"CONDITION \": \"RCPT_ECOMM_STAT eq 2 \",\n        \"ACTION\": \"RCPT_ECOMM_VAL = 0\",\n        \" DESCRIPTION\": \"if ecommerce status = 2 (no) then the value for e-commerce should be 0\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_ECOMM_VAL\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"42', '44', '45'\",\n        \"CONDITION \": \"RCPT_ECOMM_VAL gt 0\",\n        \"ACTION\": \"RCPT_ECOMM_STAT = 1\",\n        \" DESCRIPTION\": \"if there's a reliable value for ecommerce, then the e-commerce status variable should be 1\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_MOTR_HAZRD_STAT\\nRCPT_MOTR_HAZRD_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3= '484 '\",\n        \"CONDITION \": \"If  RCPT_MOTR_HAZRD_STAT =2 and RCPT_MOTR_HAZRD_PCT  = missing\",\n        \"ACTION\": \" then RCPT_MOTR_HAZRD_PCT =0.\",\n        \" DESCRIPTION\": \"IF the flag for hazardas materials is reported   and the NAICS is in 484 and the checkbox is a no and % - Hazardous Materials is equal to missing then set the % - Hazardous Materials to 0.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_MOTR_HAZRD_STAT\\nRCPT_MOTR_HAZRD_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3= '484 '\",\n        \"CONDITION \": \"If RCPT_MOTR_HAZRD_STAT = . and RCPT_MOTR_HAZRD_PCT  is >0 \",\n        \"ACTION\": \"then RCPT_MOTR_HAZRD_STAT  =1\",\n        \" DESCRIPTION\": \"IF the flag for hazardas materials is reported   and the NAICS is in 484 and the checkbox is a missing and % - Hazardous Materials is greater than zero then set the hazardous materials checkbox to yes.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_MOTR_HAZRD_STAT\\nRCPT_MOTR_HAZRD_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3= '484 '\",\n        \"CONDITION \": \"If  RCPT_MOTR_HAZRD_STAT = . or 1 and RCPT_MOTR_HAZRD_PCT  is =0 \",\n        \"ACTION\": \"then RCPT_MOTR_HAZRD_STAT=2\",\n        \" DESCRIPTION\": \"IF the flag for hazardas materials is reported  and the NAICS is in 484 and the checkbox is a missing or equal to yes  and % - Hazardous Materials is equal to zero then set the hazardous materials checkbox to no\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_MOTR_HAZRD_STAT\\nRCPT_MOTR_HAZRD_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3= '484 '\",\n        \"CONDITION \": \"If RCPT_MOTR_HAZRD_STAT is 2 and RCPT_MOTR_HAZRD_PCT  is >0 \",\n        \"ACTION\": \"then RCPT_MOTR_HAZRD_STAT= 1\",\n        \" DESCRIPTION\": \"IF the flag for hazardas materials is reported   and the NAICS is in 484 and the checkbox is a  equal to no and % - Hazardous Materials is greater than zero then set the hazardous materials checkbox to yes\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_BILL_PAY_PCT\\nRCPT_BILL_OTHOP_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS6=‘561330’ \",\n        \"CONDITION \": \"If  the sum of RCPT_BILL_PAY_PCT and RCPT_BILL_OTHOP_PCT =0 \",\n        \"ACTION\": \"then RCPT_BILL_PAY_PCT and\\nRCPT_BILL_OTHOP_PCT =.\",\n        \" DESCRIPTION\": \"If status is active and NAICS is 561330 and the sum of % of total gross billings x Payroll srvc and % - All other operating revenue equals zero then set them to missing\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_BUS_PCT\\nRCPT_LEISURE_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS6=‘561510’,’561599’,'561520'\",\n        \"CONDITION \": \"If the sum of RCPT_BUS_PCT and RCPT_LEISURE_PCT =0 \",\n        \"ACTION\": \"then RCPT_BUS_PCT and RCPT_LEISURE_PCT =.\",\n        \" DESCRIPTION\": \"If status is active and NAICS is in 561510 or 561599 and the sum of % - Percent of Revenue from Business and % - Percent of Revenue from Leisure equals zero then set them to missing\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_NEWS_PRNT_PCT\\nRCPT_NEWS_ONLINE_PCT\\nRCPT_NEWS_OTH_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS5='51111' \",\n        \"CONDITION \": \"If sum(RCPT_NEWS_PRNT_PCT,  RCPT_NEWS_ONLINE_PCT, and RCPT_NEWS_OTH_PCT) =0 \",\n        \"ACTION\": \"then RCPT_NEWS_PRNT_PCT,  RCPT_NEWS_ONLINE_PCT, and RCPT_NEWS_OTH_PCT = .\",\n        \" DESCRIPTION\": \"If the status is active and the NAICS is in '51111' and the sum of % Print subscriptions and sales,  % Internet subscriptions and sales and % Newspapers - Other media advertising equals zero, then set them to missing.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_ADV_CLASS_PCT\\nRCPT_ADV_OTH_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS5='51111' \",\n        \"CONDITION \": \"If the sum of RCPT_ADV_CLASS_PCT and RCPT_ADV_OTH_PCT =0 \",\n        \"ACTION\": \"then RCPT_ADV_CLASS_PCT and RCPT_ADV_OTH_PCT =.\",\n        \" DESCRIPTION\": \"If the status is active and the NAICS is in '51111' and the sum of % Print subscriptions and % Advertising Rev - Other Advertising equals zero, then set them to missing.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_PER_PRNT_PCT\\nRCPT_PER_ONLINE_PCT\\nRCPT_PER_OTH_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS5='51112' \",\n        \"CONDITION \": \"If sum(RCPT_PER_PRNT_PCT,  RCPT_PER_ONLINE_PCT, and RCPT_PER_OTH_PCT) =0 \",\n        \"ACTION\": \"then RCPT_NEWS_PRNT_PCT,  RCPT_NEWS_ONLINE_PCT, and RCPT_NEWS_OTH_PCT =.\",\n        \" DESCRIPTION\": \"If the status is active and the NAICS is in '51112' and the sum of % Print subscriptions and sales, % Internet subscriptions and sales, and % Other media advertising is equal to zero then set them to missing.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_BOOK_PRNT_PCT\\nRCPT_BOOK_ONLINE_PCT\\nRCPT_BOOK_OTH_PCT\\n\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS5='51113' \",\n        \"CONDITION \": \"If sum (RCPT_BOOK_PRNT_PCT,  RCPT_BOOK_ONLINE_PCT, and RCPT_BOOK_OTH_PCT) =0\",\n        \"ACTION\": \"then RCPT_BOOK_PRNT_PCT,  RCPT_BOOK_ONLINE_PCT, and RCPT_BOOK_OTH_PCT =.\",\n        \" DESCRIPTION\": \"If the status is active and the NAICS is in '51113' and the sum of % Books - Print,  % Books - Internet, and % Books - other media is equal to zero then set them to missing.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_DIR_PRNT_PCT\\nRCPT_DIR_ONLINE_PCT\\nRCPT_DIR_OTH_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS5='51114' \",\n        \"CONDITION \": \"If sum(RCPT_DIR_PRNT_PCT,  RCPT_DIR_ONLINE_PCT, and RCPT_DIR_OTH_PCT) =0 \",\n        \"ACTION\": \"then RCPT_DIR_PRNT_PCT,  RCPT_DIR_ONLINE_PCT, and RCPT_DIR_OTH_PCT =.\",\n        \" DESCRIPTION\": \"If the status is active and the NAICS is in '51114' and the sum of % Print subscriptions and sales, % Internet subscriptions and sales, and % Other media advertising is equal to zero then set them to missing.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_SYSOFT_PERS_PCT\\nRCPT_SYSOFT_ENTR_PCT\\nRCPT_SYSOFT_MAIN_PCT\\nRCPT_SYSOFT_OTH_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS5='51121' \",\n        \"CONDITION \": \"If sum(RCPT_SYSOFT_PERS_PCT, RCPT_SYSOFT_ENTR_PCT, RCPT_SYSOFT_MAIN_PCT, and RCPT_SYSOFT_OTH_PCT)=0 \",\n        \"ACTION\": \"then RCPT_SYSOFT_PERS_PCT, RCPT_SYSOFT_ENTR_PCT, RCPT_SYSOFT_MAIN_PCT, and RCPT_SYSOFT_OTH_PCT =.\",\n        \" DESCRIPTION\": \"If the status is active and the NAICS is in '51121' and the sum of % rev - Personal computer systems rev, % Enterprise-systems software revenue, % Mainframe computer-Systems software, and % of other systems software revenue is equal to zero then set them to missing.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_APSOFT_PERS_PCT\\nRCPT_APSOFT_ENTR_PCT\\nRCPT_APSOFT_MAIN_PCT\\nRCPT_APSOFT_OTH_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS5='51121' \",\n        \"CONDITION \": \"If the sum of RCPT_APSOFT_PERS_PCT, RCPT_APSOFT_ENTR_PCT, RCPT_APSOFT_MAIN_PCT, and RCPT_APSOFT_OTH_PCT =0 \",\n        \"ACTION\": \"then  RCPT_APSOFT_PERS_PCT, RCPT_APSOFT_ENTR_PCT, RCPT_APSOFT_MAIN_PCT, and RCPT_APSOFT_OTH_PCT =.\",\n        \" DESCRIPTION\": \"If the status is active and the NAICS is in '51121' and the sum of % rev - Personal computer systems rev, % Enterprise-systems software revenue, % Mainframe computer-Systems software, and % of other systems software revenue is equal to zero then set them to missing.\"\n    },\n    {\n        \"VARIABLE\": \"INV_STAT\\nINV_CY_GOODS_TOT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='511','512'\",\n        \"CONDITION \": \"If and INV_STAT =2 and INV_CY_GOODS_TOT_DVAL = .\",\n        \"ACTION\": \"then INV_CY_GOODS_TOT_DVAL =0\",\n        \" DESCRIPTION\": \"If NAICS in 511 or 512 and the flag for Total inventories is reported    and the inventory checkbox is equal to no and the total inventories is missing then set the inventories equal to zero. \"\n    },\n    {\n        \"VARIABLE\": \"INV_STAT\\nINV_CY_GOODS_TOT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='511','512'\",\n        \"CONDITION \": \"If Substr(RECORD_NAICS_NUM,1,3) in ('511','512')  and INV_STAT =. and INV_CY_GOODS_TOT is >0 \",\n        \"ACTION\": \"then INV_STAT =1\",\n        \" DESCRIPTION\": \"If NAICS in 511 or 512 and the flag for Total inventories is reported   and the inventory checkbox is missing and the total inventories is greater than zero, then set the inventories checkbox to yes. \"\n    },\n    {\n        \"VARIABLE\": \"INV_STAT\\nINV_CY_GOODS_TOT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='511','512'\",\n        \"CONDITION \": \"If Substr(RECORD_NAICS_NUM,1,3) in ('511','512') and INV_STAT = . or = 1  and INV_CY_GOODS_TOT is =0 \",\n        \"ACTION\": \"then INV_STAT = 2\",\n        \" DESCRIPTION\": \"If NAICS in 511 or 512 and the flag for Total inventories is reported   the inventory checkbox is missing or equal to yes and the total inventories is equal to zero, then set the inventories checkbox to no.\"\n    },\n    {\n        \"VARIABLE\": \"INV_STAT\\nINV_CY_GOODS_TOT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='511','512'\",\n        \"CONDITION \": \"If Substr(RECORD_NAICS_NUM,1,3) in ('511','512')  and INV_STAT = 2  and INV_CY_GOODS_TOT is > 0 \",\n        \"ACTION\": \"then INV_STAT =1\",\n        \" DESCRIPTION\": \"If NAICS in 511 or 512 and the flag for Total inventories is is reported   , and the inventory checkbox is equal to no and the total inventories is freater than zero, then set the inventories checkbox to yes.\"\n    },\n    {\n        \"VARIABLE\": \"EXPS_EHR_STAT\\nEXPS_EHR_VAL\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS2='62' and NAICS3 \\n<> ('624') \",\n        \"CONDITION \": \"If EXPS_EHR_VAL ne . and EXPS_EHR_STAT =( . or 2) and EXPS_EHR_VAL is >0 \",\n        \"ACTION\": \"then EXPS_EHR_STAT= 1\",\n        \" DESCRIPTION\": \"If the NAICS is in 62, but no in 624, and the flag for Electronic health record expenses is equal is reported   and the electronic health records checkbox is equal to no and the Electronic health records expenses is greater than zero, then set the electronic health records checkbox to yes.\"\n    },\n    {\n        \"VARIABLE\": \"EXPS_EHR_STAT \\nEXPS_EHR_VAL\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS2='62' and NAICS3 \\n<> ('624') \",\n        \"CONDITION \": \"If EXPS_EHR_VAL ne . and EXPS_EHR_STAT = (. or 1) and EXPS_EHR_VAL is =0\",\n        \"ACTION\": \"then   EXPS_EHR_STAT = 2\",\n        \" DESCRIPTION\": \"If the NAICS is in 62, but no in 624, and the flag for Electronic health record expenses is reported   and the electronic health records checkbox is equal to yes  and the Electronic health records expenses is equal to zero, then set the electronic health records checkbox to no.\"\n    },\n    {\n        \"VARIABLE\": \"EXPS_EHR_STAT \\nEXPS_EHR_VAL\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS2='62' and NAICS3 \\n<> '624'\",\n        \"CONDITION \": \"If EXPS_EHR_STAT  ne . and EXPS_EHR_STAT =  2  and EXPS_EHR_VAL is =.\",\n        \"ACTION\": \"then EXPS_EHR_VAL is = 0\",\n        \" DESCRIPTION\": \"If the NAICS is in 62, but no in 624, and the flag for Electronic health record expenses is reported   and the electronic health records checkbox is equal to no  and the Electronic health records expenses is missing, then set the electronic health records to zero.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_ECOMM_ES_VAL\\n RCPT_ECOMM_WEB_STAT  RCPT_ECOMM_THRD_STAT  RCPT_ECOMM_OTH_STAT  \",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS2='22','48','49,'51','52','53','54','55','56,'61','62','71','72,'81'\",\n        \"CONDITION \": \"If RCPT_ECOMM_ES_VAL ne . and RCPT_ECOMM_WEB_STAT  = (. or 1) and RCPT_ECOMM_THRD_STAT =( . or 1) and RCPT_ECOMM_OTH_STAT = (. or 1 )and  RCPT_ECOMM_ES_VAL =0 \",\n        \"ACTION\": \"then RCPT_ECOMM_WEB_STAT  = 2 RCPT_ECOMM_THRD_STAT = 2 RCPT_ECOMM_OTH_STAT  = 2\",\n        \" DESCRIPTION\": \"If the e-commerce flag is reported   or the e-commerce percent flag is reported   and Electronic revenue- company website is missing or yes,  Electronic revenue- third party website is missing or yes, Electronic revenue- electronic system, and e-commerce is zero and the e-commerce percent equals zero then set - company website is missing or yes,  Electronic revenue- third party website is missing or yes, Electronic revenue- electronic system to no.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_ECOMM_ES_VAL\\n RCPT_ECOMM_WEB_STAT  RCPT_ECOMM_THRD_STAT  RCPT_ECOMM_OTH_STAT  \",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS2='22','48','49,'51','52','53','54','55','56,'61','62','71','72,'81'\",\n        \"CONDITION \": \"If RCPT_ECOMM_WEB_STAT = 2, RCPT_ECOMM_THRD_STAT  = 2, and RCPT_ECOMM_OTH_STAT  = 2 and RCPT_ECOMM_ES_VAL = . \",\n        \"ACTION\": \"then RCPT_ECOMM_ES_VAL =0.\",\n        \" DESCRIPTION\": \"If the Electronic revenue- company website flag is reported   and the Electronic revenue- third party website is reported   , Electronic revenue- electronic system, and is reported   and Electronic revenue- company website,  Electronic revenue- third party website, Electronic revenue- electronic system all are set to no and e-commerce is missing and ecommerce percent is missing or zero then set e-commerce to zero.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_ECOMM_ES_VAL\\n RCPT_ECOMM_WEB_STAT  RCPT_ECOMM_THRD_STAT  RCPT_ECOMM_OTH_STAT  \",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS2='22','48','49,'51','52','53','54','55','56,'61','62','71','72,'81'\",\n        \"CONDITION \": \"If RCPT_ECOMM_ES_VAL = . and RCPT_ECOMM_WEB_STAT  = . and RCPT_ECOMM_THRD_STAT = . and RCPT_ECOMM_OTH_STAT = . and  RCPT_ECOMM_ES_VAL  is >0 \",\n        \"ACTION\": \"then RCPT_ECOMM_WEB_STAT  =1\",\n        \" DESCRIPTION\": \"If e-commerce flag is reported   or e-commerce percent is reported   and Electronic revenue- company website,  Electronic revenue- third party website, Electronic revenue- electronic system all are missing and e-commerce is greater than zero or percent e-commerce is greater than zero then set Electronic revenue- company website to yes. \"\n    },\n    {\n        \"VARIABLE\": \"RCPT_ECOMM_ES_VAL\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS2='22','48','49,'51','52','53','54','55','56,'61','62','71','72,'81'\",\n        \"CONDITION \": \"If RCPT_ECOMM_ES_VAL ne . and RCPT_ECOMM_WEB_STAT  is 2 and RCPT_ECOMM_THRD_STAT is 2, and RCPT_ECOMM_OTH_STAT is 2 and  RCPT_ECOMM_ES_VAL  is >0 \",\n        \"ACTION\": \"then RCPT_ECOMM_WEB_STAT  =1\",\n        \" DESCRIPTION\": \"If e-commerce flag  is reported   or e-commerce percent is reported   and Electronic revenue- company website,  Electronic revenue- third party website,  and Electronic revenue- electronic system all are no  and e-commerce is greater than zero or percent e-commerce is greater than zero then set Electronic revenue- company website to yes. \"\n    },\n    {\n        \"VARIABLE\": \"EXPS_TOT_VAL\",\n        \"UNIT\": \"KAU\",\n        \"CONDITION \": \"If _qss00 in ('Y') and E190000 = . AND EQEXPD00 = 0 AND EQEXP00 > 0\",\n        \"ACTION\": \" then E190000 = eqexp00\",\n        \" DESCRIPTION\": \"If Total operating expenses is missing and QSS number of quarters imputed is equal to zero, and qss espense is greater than zero, then set total operating expense to qss expense\"\n    },\n    {\n        \"VARIABLE\": \"TAX_EXEMPT_STAT\",\n        \"UNIT\": \"KAU\",\n        \"CONDITION \": \"If substr(RECORD_NAICS_NUM,1,5) = '51912' and TAX_EXEMPT_STAT = 1\",\n        \"ACTION\": \"then NONPROFT_STAT=1\",\n        \" DESCRIPTION\": \"If NAICS in 51912 and tax recode is equal to exempt, then set not for profit basses to 1.\"\n    },\n    {\n        \"VARIABLE\": \"CPT_CUST_RES_PCT \\nCPT_CUST_NORES_PCT \",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS2='22'\",\n        \"CONDITION \": \"If sum(CPT_CUST_RES_PCT,CPT_CUST_NORES_PCT) = 0\",\n        \"ACTION\": \"then CPT_CUST_RES_PCT = . CPT_CUST_NORES_PCT = .\",\n        \" DESCRIPTION\": \"If NAICS in sector 22 and is active, and the sum of residential customers and non-residential customers is zero then set residential customers and non-residential customers to missing\"\n    },\n    {\n        \"VARIABLE\": \"CAPEX_OTH_NEW_VAL                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       CAPEX_OTH_USED_VAL                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 CAPEX_OTH_TOT\",\n        \"UNIT\": \"industry\",\n        \"CONDITION \": \"Value reported in other\",\n        \"ACTION\": \"set referral flag for analyst review\",\n        \" DESCRIPTION\": \"analyst reclassify value in other to structures or equipment\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_MOTR_AGR_PCT  RCPT_MOTR_GRAIN_PCT  RCPT_MOTR_STONE_PCT RCPT_MOTR_FUEL_PCT  RCPT_MOTR_PHARM_PCT  RCPT_MOTR_WOOD_PCT  RCPT_MOTR_METAL_PCT  RCPT_MOTR_ELECT_PCT  RCPT_MOTR_USEDGD_PCT  RCPT_MOTR_NEWFRN_PCT  RCPT_MOTR_OTH_PCT \",\n        \"UNIT\": \"industry\",\n        \"NAICS\": \"NAICS3='484'\",\n        \"CONDITION \": \"If Sum(RCPT_MOTR_AGR_PCT,RCPT_MOTR_GRAIN_PCT,RCPT_MOTR_STONE_PCT,RCPT_MOTR_FUEL_PCT,RCPT_MOTR_PHARM_PCT,RCPT_MOTR_WOOD_PCT,RCPT_MOTR_METAL_PCT,RCPT_MOTR_ELECT_PCT, RCPT_MOTR_USEDGD_PCT,RCPT_MOTR_NEWFRN_PCT,RCPT_MOTR_OTH_PCT)=0\",\n        \"ACTION\": \"then RCPT_MOTR_AGR_PCT = .; RCPT_MOTR_GRAIN_PCT = .; RCPT_MOTR_STONE_PCT = .; RCPT_MOTR_FUEL_PCT = .; RCPT_MOTR_PHARM_PCT = .; RCPT_MOTR_WOOD_PCT = .; RCPT_MOTR_METAL_PCT = .; RCPT_MOTR_ELECT_PCT = .; RCPT_MOTR_USEDGD_PCT = .; RCPT_MOTR_NEWFRN_PCT = .; RCPT_MOTR_OTH_PCT = .;\",\n        \" DESCRIPTION\": \"If the NAICS is in 484 and active, and the sum of % - Agricultural Products, % - Grains, Alcohol, Tobacco Products, % - Stone, Nonmetallic minerals, % - Coal and Petroleum Products, % - Coal and Petroleum Products, % - Pharmaceutical and chemical products, % - Wood Products, Textiles, Leather, % - Electronic & Precision Instruments,% - Base Metal and Machinery % - Used household and office goods, % - New Furniture & Misc. Prods is zero, then set all to missing\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_CUST_BUS_PCT RCPT_CUST_IND_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS6=('517311','517312','517911', 519130')\",\n        \"CONDITION \": \"If sum(RCPT_CUST_BUS_PCT,RCPT_CUST_IND_PCT)=0\",\n        \"ACTION\": \"then RCPT_CUST_BUS_PCT=.; RCPT_CUST_IND_PCT=.;\",\n        \" DESCRIPTION\": \"If the status is active and the NAICS is in  517110, 517210, 517911, or 519130 and the sum of % Household revenue and % of revenue by Government & Businesses equal zero then set them to missing.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_CUST_LOCTEL_BUS_PCT RCPT_CUST_LOCTEL_IND_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS6='517311' \",\n        \"CONDITION \": \"If sum(RCPT_CUST_LOCTEL_BUS_PCT,RCPT_CUST_LOCTEL_IND_PCT)=0\",\n        \"ACTION\": \"then RCPT_CUST_LOCTEL_BUS_PCT=.; RCPT_CUST_LOCTEL_IND_PCT=.;\",\n        \" DESCRIPTION\": \"If the status is active and the NIACS is in 51711 and the sum of % Household - local telephony and Fixed local Telephone - Gov & Business is equal to zero set them to mising.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_CUST_LNGTEL_BUS_PCT RCPT_CUST_LNGTEL_IND_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS6='517311' \",\n        \"CONDITION \": \"If sum(RCPT_CUST_LNGTEL_BUS_PCT, RCPT_CUST_LNGTEL_IND_PCT)=0\",\n        \"ACTION\": \"then RCPT_CUST_LNGTEL_BUS_PCT=.; RCPT_CUST_LNGTEL_IND_PCT=.;\",\n        \" DESCRIPTION\": \"If the status is active and the NIACS is in 51711 and the sum of  % Fixed Long dist - Gov & Business and % Household-long distance telephony is equal to zero set them to mising.\"\n    },\n    {\n        \"VARIABLE\": \"RCPT_CUST_SUBLIN_BUS_PCT RCPT_CUST_SUBLIN_IND_PCT\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS6='517311' \",\n        \"CONDITION \": \"If sum(RCPT_CUST_SUBLIN_BUS_PCT, RCPT_CUST_SUBLIN_IND_PCT)=0\",\n        \"ACTION\": \"then RCPT_CUST_SUBLIN_BUS_PCT=.; RCPT_CUST_SUBLIN_IND_PCT=.;\",\n        \" DESCRIPTION\": \"If the status is active and the NIACS is in 51711 and the sum of  % Subscriber line charges - Household and % Subscriber Line - Gov & Business is equal to zero set them to mising.\"\n    },\n    {\n        \"VARIABLE\": \"INV_STAT\\nTRUCKTRAC_NUM_TOT_DVAL TRAILER_NUM_TOT_DVAL\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='484'\",\n        \"CONDITION \": \"If INV_STAT = . and (TRUCK_NUM_TOT_DVAL > 0 or TRUCKTRAC_NUM_TOT_DVAL > 0 or TRAILER_NUM_TOT_DVAL > 0)\",\n        \"ACTION\": \"then INV_STAT = 1;\",\n        \" DESCRIPTION\": \"If the flag for total truck inventory, total truck-tractor inventory, or total tralers inventory is reported  (R,A,E,or O) and the NAICS is in 484, and the inventory checkbox is missing and the total truck inventory, total truck-tractor inventory, or total tralers inventory is greater than zero, then set the inventory checkbox to yes. \"\n    },\n    {\n        \"VARIABLE\": \"INV_STAT\\nTRUCKTRAC_NUM_TOT_DVAL TRAILER_NUM_TOT_DVAL\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='484'\",\n        \"CONDITION \": \"If INV_STAT in (.,1) and TRUCK_NUM_TOT_DVAL = 0 and TRUCKTRAC_NUM_TOT_DVAL = 0 and TRAILER_NUM_TOT_DVAL = 0\",\n        \"ACTION\": \"then INV_STAT = 2;\",\n        \" DESCRIPTION\": \"If the flag for total truck inventory, total truck-tractor inventory, or total tralers inventory is reported  (R,A,E,or O)and the NAICS is in 484, and the inventory checkbox is equal to yes and the total truck inventory, total truck-tractor inventory, or total tralers inventory is equal to zero, then set the inventory checkbox to no.\"\n    },\n    {\n        \"VARIABLE\": \"INV_STAT\\nTRUCKTRAC_NUM_TOT_DVAL TRAILER_NUM_TOT_DVAL\",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='484'\",\n        \"CONDITION \": \"If INV_STAT = 2 and (TRUCK_NUM_TOT_DVAL > 0 or TRUCKTRAC_NUM_TOT_DVAL > 0 or TRAILER_NUM_TOT_DVAL > 0)\",\n        \"ACTION\": \"then INV_STAT = 1;\",\n        \" DESCRIPTION\": \"If the flag for total truck inventory, total truck-tractor inventory, or total tralers inventory isreported (R,A,E,or O)and the NAICS is in 484, and the inventory checkbox is equal to no and the total truck inventory, total truck-tractor inventory, or total tralers inventory is greater than zero, then set the inventory checkbox to yes. \"\n    },\n    {\n        \"VARIABLE\": \"HOTEL_OWN3RD_STAT RCPT_TOT_HOTEL_OWN3RD_VAL  RCPT_ECOMM_HOTEL_OWN3RD_VAL\\nEXPS_TOT_HOTEL_OWN3RD_VAL \",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS5='72111','72112'\",\n        \"CONDITION \": \"If EXPS_TOT_HOTEL_OWN3RD_VAL <>2 and RCPT_TOT_HOTEL_OWN3RD_VAL=0 or RCPT_ECOMM_HOTEL_OWN3RD_VA=0  or EXPS_TOT_HOTEL_OWN3RD_VAL is >0\",\n        \"ACTION\": \"then EXPS_TOT_HOTEL_OWN3RD_VAL =2\"\n    },\n    {\n        \"VARIABLE\": \"HOTEL_OWN3RD_STAT RCPT_TOT_HOTEL_OWN3RD_VAL  RCPT_ECOMM_HOTEL_OWN3RD_VAL\\nEXPS_TOT_HOTEL_OWN3RD_VAL \",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS5='72111','72112'\",\n        \"CONDITION \": \"If EXPS_TOT_HOTEL_OWN3RD_VAL <>1 and RCPT_TOT_HOTEL_OWN3RD_VAL > 0  or RCPT_ECOMM_HOTEL_OWN3RD_VAL is > 0  or EXPS_TOT_HOTEL_OWN3RD_VAL is >0 \",\n        \"ACTION\": \"EXPS_TOT_HOTEL_OWN3RD_VAL=2\"\n    },\n    {\n        \"VARIABLE\": \"HOTEL_OWN3RD_STAT RCPT_TOT_HOTEL_OWN3RD_VAL  RCPT_ECOMM_HOTEL_OWN3RD_VAL\\nEXPS_TOT_HOTEL_OWN3RD_VAL \",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS5='72111','72112'\",\n        \"CONDITION \": \"If (HOTEL_OWN3RD_STAT = 2) AND (RCPT_TOT_HOTEL_OWN3RD_VAL = . AND  RCPT_ECOMM_HOTEL_OWN3RD_VAL = . AND EXPS_TOT_HOTEL_OWN3RD_VAL = .)\",\n        \"ACTION\": \"then RCPT_TOT_HOTEL_OWN3RD_VAL = 0; RCPT_ECOMM_HOTEL_OWN3RD_VAL = 0; EXPS_TOT_HOTEL_OWN3RD_VAL = 0;\",\n        \" DESCRIPTION\": \"If the NAICS is in 72111 or 72112 and the hotel management checkbox is set to no and hotel revenue of hotels managed, hotel e-commerce from hotels managed, and operating expense from hotels managed are all missing then set them all to zero. \"\n    },\n    {\n        \"VARIABLE\": \"RCPT_TELEMED_STAT RCPT_TELEMED_VAL  \",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='621','622','623' AND NAICS4 <> ‘6215’,’6219’\",\n        \"CONDITION \": \"If RCPT_TELEMED_STAT = . AND (RCPT_TELEMED_VAL > 0 \",\n        \"ACTION\": \"then RCPT_TELEMED_STAT = 1;\",\n        \" DESCRIPTION\": \"If the flag for Hospitals: Of 2020 total revenues reported, what was the dollar amount from telemedicine is reported (R,A,E,O)  or the flag for Hospitals: Of the total revenues reported, what was the percentage that was from telemedicine is reported (R,A,E,O)  and Hospitals: Did this receive revenues from telemedicine services in 2020 is missing and  total revenues reported, what was the dollar amount from telemedicine is greater than zero or Hospitals: Of the total revenues reported, what was the percentage that was from telemedicine is greater than zero then set Hospitals: Did this receive revenues from telemedicine services in 2020  to yes. \"\n    },\n    {\n        \"VARIABLE\": \"RCPT_TELEMED_STAT RCPT_TELEMED_VAL  \",\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='621','622','623' AND NAICS4 <> ‘6215’,’6219’\",\n        \"CONDITION \": \"RCPT_TELEMED_STAT = (.,1) AND (RCPT_TELEMED_VAL = 0)\",\n        \"ACTION\": \"then RCPT_TELEMED_STAT = 2;\",\n        \" DESCRIPTION\": \"If the flag for Hospitals: Of 2020 total revenues reported, what was the dollar amount from telemedicine is reported (R,A,E,O)  or the flag for Hospitals: Of the total revenues reported, what was the percentage that was from telemedicine is reported (R,A,E,O)  and Hospitals: Did this receive revenues from telemedicine services in 2020 is missing or set to yes and  total revenues reported, what was the dollar amount from telemedicine is zero or Hospitals: Of the total revenues reported, what was the percentage that was from telemedicine is zero then set Hospitals: Did this receive revenues from telemedicine services in 2020  to no \"\n    },\n    {\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS6='721110','721120'\",\n        \"ACTION\": \"then RCPT_ECOMM_ES_TOT_VAL=SUM(RCPT_TOT_VAL,RCPT_TOT_HOTEL_OWN3RD_VAL)\"\n    },\n    {\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS6='561330' \",\n        \"ACTION\": \"then RCPTOT=RCPT_GROSSBILL_VAL\"\n    },\n    {\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS6='721110','721120'\",\n        \"ACTION\": \"then RCPTOT=RCP_TOT_VAL_SUM+RCPT_TOT_HOTEL_OWN3RD_VAL\"\n    },\n    {\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='621','622','623'\",\n        \"CONDITION \": \"and _TXRCD00 <> 'E'\",\n        \"ACTION\": \"then RCPT_NONOP_GIFTS_VAL=0\"\n    },\n    {\n        \"UNIT\": \"KAU\",\n        \"NAICS\": \"NAICS3='621','622','623'\",\n        \"CONDITION \": \"and _TXRCD00 <> 'E'\",\n        \"ACTION\": \"then RCPT_NONOP_INVST_VAL=0\"\n    }\n]\n\nlet csv = msg.payload.csv[0]\n\nfor (let i = 0; i < items.length; i++) {\n    const item = items[i];\n\n    if (item[\"NAICS\"]) {\n        if (item[\"UNIT\"] == csv.UNIT) {\n            if (item.CONDITION) {\n                csv.ACTION = item.ACTION\n            }\n        }\n    }\n}\n\nmsg.payload.csv[0].RCPT_NONOP_GIFTS_VAL = 0\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 280,
        "wires": [
            [
                "05e1e9f94e92a19d",
                "1833eeaacde5d9a4"
            ]
        ]
    },
    {
        "id": "6a660fccf443bde2",
        "type": "link in",
        "z": "0952db06f674f8bc",
        "name": "link in 29",
        "links": [
            "3fd3586e01a6e2dc",
            "6413daba1c8991e2"
        ],
        "x": 215,
        "y": 280,
        "wires": [
            [
                "0c4def347547a284"
            ]
        ]
    },
    {
        "id": "05e1e9f94e92a19d",
        "type": "link out",
        "z": "0952db06f674f8bc",
        "name": "link out 23",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9"
        ],
        "x": 615,
        "y": 280,
        "wires": []
    },
    {
        "id": "1833eeaacde5d9a4",
        "type": "debug",
        "z": "0952db06f674f8bc",
        "name": "Logical Edit debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 180,
        "wires": []
    },
    {
        "id": "aad0ca24d9250f35",
        "type": "function",
        "z": "91e923b1d58a25de",
        "name": "post edit function",
        "func": "if (msg.payload.csv[0].flag) {\n    msg.payload.csv[0].FAIL = true\n    msg.payload.csv[0].TABSTAT = 1\n    msg.payload.csv[0].action = \"Go to: Imputation\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 220,
        "wires": [
            [
                "62e629bde644c4ac",
                "712df2980b334bc5"
            ]
        ]
    },
    {
        "id": "60a8272cfde55a5e",
        "type": "link in",
        "z": "91e923b1d58a25de",
        "name": "link in 30",
        "links": [
            "1597f28db268d317",
            "fa7a570c778cff30"
        ],
        "x": 145,
        "y": 220,
        "wires": [
            [
                "aad0ca24d9250f35"
            ]
        ]
    },
    {
        "id": "712df2980b334bc5",
        "type": "debug",
        "z": "91e923b1d58a25de",
        "name": "post edit debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 140,
        "wires": []
    },
    {
        "id": "62e629bde644c4ac",
        "type": "link out",
        "z": "91e923b1d58a25de",
        "name": "link out 24",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9"
        ],
        "x": 505,
        "y": 220,
        "wires": []
    },
    {
        "id": "e9fa3350f5c93cb6",
        "type": "switch",
        "z": "6e9fd4ed1a3126bb",
        "name": "AIES_SCOPE = Y?",
        "property": "payload.csv[0].AIES_SCOPE",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "Y",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Y",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 60,
        "wires": [
            [
                "0cca7ad92d65e9cb"
            ],
            [
                "d3434a238cbd21e4"
            ]
        ]
    },
    {
        "id": "0cca7ad92d65e9cb",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6e9fd4ed1a3126bb",
        "name": "No, go to KAU to Company Additivity Check",
        "x": 730,
        "y": 60,
        "wires": [
            [
                "91a9fa721bc780a7"
            ]
        ]
    },
    {
        "id": "28d12ec798feff1f",
        "type": "comment",
        "z": "6e9fd4ed1a3126bb",
        "name": "Yes, Estab",
        "info": "",
        "x": 180,
        "y": 120,
        "wires": []
    },
    {
        "id": "3be8086856cf7054",
        "type": "comment",
        "z": "6e9fd4ed1a3126bb",
        "name": "KAU",
        "info": "",
        "x": 190,
        "y": 420,
        "wires": []
    },
    {
        "id": "8308a860a28a667a",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6e9fd4ed1a3126bb",
        "name": "Estab to KAU Additivity Check",
        "x": 430,
        "y": 600,
        "wires": [
            [
                "79ec7e7740105338"
            ]
        ]
    },
    {
        "id": "9a33c9d5fc0da1ac",
        "type": "comment",
        "z": "6e9fd4ed1a3126bb",
        "name": "Company",
        "info": "",
        "x": 180,
        "y": 680,
        "wires": []
    },
    {
        "id": "316698c0494d4e3b",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6e9fd4ed1a3126bb",
        "name": "KAU to Company Additivity Check",
        "x": 440,
        "y": 760,
        "wires": [
            [
                "b0b45ae1f1bdcdbd"
            ]
        ]
    },
    {
        "id": "b0b45ae1f1bdcdbd",
        "type": "switch",
        "z": "6e9fd4ed1a3126bb",
        "name": "Changes made?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Y",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "Y",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 740,
        "y": 760,
        "wires": [
            [
                "3157732f4bf84ecd"
            ],
            [
                "0af56ba421e1a804"
            ]
        ]
    },
    {
        "id": "3157732f4bf84ecd",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6e9fd4ed1a3126bb",
        "name": "Yes, go to BR stat evaluation",
        "x": 980,
        "y": 760,
        "wires": [
            [
                "ae6ad5331182af2d"
            ]
        ]
    },
    {
        "id": "0af56ba421e1a804",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6e9fd4ed1a3126bb",
        "name": "Company Complete",
        "x": 760,
        "y": 840,
        "wires": [
            [
                "93e6d382a25077f2"
            ]
        ]
    },
    {
        "id": "93e6d382a25077f2",
        "type": "subflow:03552ca229e3a7a0",
        "z": "6e9fd4ed1a3126bb",
        "name": "Rerun data prep edits or just Derived Items?",
        "x": 1110,
        "y": 840,
        "wires": [
            [
                "36ac45a273e5509f"
            ]
        ]
    },
    {
        "id": "91a9fa721bc780a7",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "go to KAU additivity check",
        "mode": "link",
        "links": [
            "67f5350a6d95fbeb"
        ],
        "x": 945,
        "y": 60,
        "wires": []
    },
    {
        "id": "67f5350a6d95fbeb",
        "type": "link in",
        "z": "6e9fd4ed1a3126bb",
        "name": "link in 31",
        "links": [
            "91a9fa721bc780a7"
        ],
        "x": 285,
        "y": 760,
        "wires": [
            [
                "316698c0494d4e3b"
            ]
        ]
    },
    {
        "id": "ae6ad5331182af2d",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "go to BR stat eval",
        "mode": "link",
        "links": [
            "86d4c2b68eb247d4"
        ],
        "x": 1115,
        "y": 760,
        "wires": []
    },
    {
        "id": "29da19c4410c4983",
        "type": "subflow:a3d425ba6d3b6a6a",
        "z": "6e9fd4ed1a3126bb",
        "name": "Classification",
        "x": 370,
        "y": 200,
        "wires": [
            [
                "5c9b7f70b971f24b",
                "f2e55b876978ee47"
            ]
        ]
    },
    {
        "id": "5c9b7f70b971f24b",
        "type": "subflow:4ed21c9150f5597a",
        "z": "6e9fd4ed1a3126bb",
        "name": "Geography",
        "x": 570,
        "y": 200,
        "wires": [
            [
                "476a205ff16f82d1",
                "86016fdfc48b4351"
            ]
        ]
    },
    {
        "id": "476a205ff16f82d1",
        "type": "subflow:a0bced2e224712c4",
        "z": "6e9fd4ed1a3126bb",
        "name": "Calculate Best Admin Receipts",
        "x": 830,
        "y": 200,
        "wires": [
            [
                "b941339b73eafbbe",
                "5a039fea024b882c"
            ]
        ]
    },
    {
        "id": "b941339b73eafbbe",
        "type": "subflow:1e75121bac78652a",
        "z": "6e9fd4ed1a3126bb",
        "name": "Completeness Check / Core Variables",
        "x": 1170,
        "y": 200,
        "wires": [
            [
                "2a4d52398bb3d587",
                "0d309d88aeecd224"
            ]
        ]
    },
    {
        "id": "9f944ba2a098566c",
        "type": "function",
        "z": "6e9fd4ed1a3126bb",
        "name": "Append Data",
        "func": "let s = flow.get(\"state\") || []\nlet p = msg.payload.csv[0]\np.inputOrOutput = \"out\"\np.timestamp = generateTimestamp()\ns.unshift(p)\n\nif (s.length > 50) {\n    s = s.slice(0, 50);\n}\n\nflow.set(\"state\", s)\nmsg.payload = s\n\n\nfunction generateTimestamp() {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, '0');\n    const day = String(now.getDate()).padStart(2, '0');\n    let hour = now.getHours();\n    const minute = String(now.getMinutes()).padStart(2, '0');\n    const second = String(now.getSeconds()).padStart(2, '0');\n\n    let period = 'AM';\n    if (hour >= 12) {\n        period = 'PM';\n        hour -= 12;\n    }\n    if (hour === 0) {\n        hour = 12;\n    }\n\n    const timestamp = `${year}-${month}-${day} ${hour}:${minute}:${second} ${period}`;\n    return timestamp;\n}\n\n\nnode.send(msg);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1000,
        "wires": [
            [
                "8adc41f28f4031b3",
                "cb8e966fa360d484"
            ]
        ]
    },
    {
        "id": "8adc41f28f4031b3",
        "type": "ui_table",
        "z": "6e9fd4ed1a3126bb",
        "group": "6414e38571345793",
        "name": "Modules Data",
        "order": 1,
        "width": "18",
        "height": "20",
        "columns": [
            {
                "field": "EPPAYANN",
                "title": "Index",
                "width": "",
                "align": "left",
                "formatter": "rownum",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "timestamp",
                "title": "Created",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "module",
                "title": "Module",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "inputOrOutput",
                "title": "In / Out",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "PAY_ANN_VAL",
                "title": "PAY_ANN_VAL",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "EMP_MAR12_NUM",
                "title": "EMP_MAR12_NUM",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "PAY_QTR1_VAL",
                "title": "PAY_QTR1_VAL",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "RCPT_TOT_VAL",
                "title": "RCPT_TOT_VAL",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 620,
        "y": 1000,
        "wires": []
    },
    {
        "id": "d50a64a5a0668810",
        "type": "link in",
        "z": "6e9fd4ed1a3126bb",
        "name": "link in TABLE",
        "links": [
            "0213c59c5c3e5daa",
            "1728e38a2a40b462",
            "29f9126c35b5deb6",
            "2a4d52398bb3d587",
            "455c8bacb3059701",
            "4b287c6a84b703e2",
            "5a039fea024b882c",
            "5e2818279732d1d4",
            "608e1d25710336f8",
            "86016fdfc48b4351",
            "875ce7d3fc33f058",
            "892b56b0bc650876",
            "97538a9f125810a7",
            "9f74945d93f983f1",
            "b65643afe0093cf5",
            "b73c8d9aecceec59",
            "ba4f6f3992473497",
            "c261422973f8441f",
            "c8729912fca5fc84",
            "d8f39773080a0179",
            "e3b9801fea0e353f",
            "eebe4f43ea98127d",
            "f2e55b876978ee47",
            "f51d8c89650868a3",
            "f8c507b76d49363e",
            "76611ce4593cf7cb"
        ],
        "x": 305,
        "y": 1000,
        "wires": [
            [
                "9f944ba2a098566c"
            ]
        ]
    },
    {
        "id": "f2e55b876978ee47",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 28",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 455,
        "y": 200,
        "wires": []
    },
    {
        "id": "86016fdfc48b4351",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 29",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 655,
        "y": 200,
        "wires": []
    },
    {
        "id": "5a039fea024b882c",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 30",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 975,
        "y": 200,
        "wires": []
    },
    {
        "id": "2a4d52398bb3d587",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 31",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 1335,
        "y": 200,
        "wires": []
    },
    {
        "id": "c261422973f8441f",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 32",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 1695,
        "y": 200,
        "wires": []
    },
    {
        "id": "c8729912fca5fc84",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 33",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 455,
        "y": 300,
        "wires": []
    },
    {
        "id": "892b56b0bc650876",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 34",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 655,
        "y": 300,
        "wires": []
    },
    {
        "id": "97538a9f125810a7",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 35",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 895,
        "y": 300,
        "wires": []
    },
    {
        "id": "f8c507b76d49363e",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 36",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 1115,
        "y": 300,
        "wires": []
    },
    {
        "id": "ba4f6f3992473497",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 37",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 455,
        "y": 420,
        "wires": []
    },
    {
        "id": "4b287c6a84b703e2",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 38",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 815,
        "y": 420,
        "wires": []
    },
    {
        "id": "d8f39773080a0179",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 39",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 1015,
        "y": 420,
        "wires": []
    },
    {
        "id": "5e2818279732d1d4",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 40",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 1215,
        "y": 420,
        "wires": []
    },
    {
        "id": "b65643afe0093cf5",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 41",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 1415,
        "y": 420,
        "wires": []
    },
    {
        "id": "eebe4f43ea98127d",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 42",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 1635,
        "y": 420,
        "wires": []
    },
    {
        "id": "f51d8c89650868a3",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 43",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 1615,
        "y": 480,
        "wires": []
    },
    {
        "id": "875ce7d3fc33f058",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 45",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 455,
        "y": 680,
        "wires": []
    },
    {
        "id": "9f74945d93f983f1",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 46",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 665,
        "y": 680,
        "wires": []
    },
    {
        "id": "1728e38a2a40b462",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 47",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 855,
        "y": 680,
        "wires": []
    },
    {
        "id": "29f9126c35b5deb6",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 48",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 1075,
        "y": 680,
        "wires": []
    },
    {
        "id": "0213c59c5c3e5daa",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 49",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 1255,
        "y": 680,
        "wires": []
    },
    {
        "id": "b73c8d9aecceec59",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 52",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 1495,
        "y": 200,
        "wires": []
    },
    {
        "id": "0d309d88aeecd224",
        "type": "subflow:acd9862f30af144d",
        "z": "6e9fd4ed1a3126bb",
        "name": "PV",
        "x": 1430,
        "y": 200,
        "wires": [
            [
                "b73c8d9aecceec59",
                "611bd7ef087d0ee4"
            ]
        ]
    },
    {
        "id": "611bd7ef087d0ee4",
        "type": "subflow:ae0faa518ff234d5",
        "z": "6e9fd4ed1a3126bb",
        "name": "Derived Items",
        "x": 1610,
        "y": 200,
        "wires": [
            [
                "c261422973f8441f",
                "eab9d1159d0ab151"
            ]
        ]
    },
    {
        "id": "6247de9ac9e28642",
        "type": "subflow:ae0faa518ff234d5",
        "z": "6e9fd4ed1a3126bb",
        "name": "Derived Items",
        "x": 810,
        "y": 300,
        "wires": [
            [
                "97538a9f125810a7",
                "fa428e05926d3d8a"
            ]
        ]
    },
    {
        "id": "7ace8ac968735bb7",
        "type": "subflow:ae0faa518ff234d5",
        "z": "6e9fd4ed1a3126bb",
        "name": "Derived Items",
        "x": 930,
        "y": 420,
        "wires": [
            [
                "d8f39773080a0179",
                "43300b21ac0a44a9"
            ]
        ]
    },
    {
        "id": "bf0ad18b66b393bb",
        "type": "subflow:ae0faa518ff234d5",
        "z": "6e9fd4ed1a3126bb",
        "name": "Derived Items",
        "x": 1550,
        "y": 420,
        "wires": [
            [
                "eebe4f43ea98127d",
                "a813b3bcc9032af7"
            ]
        ]
    },
    {
        "id": "79ec7e7740105338",
        "type": "subflow:ae0faa518ff234d5",
        "z": "6e9fd4ed1a3126bb",
        "name": "Derived Items",
        "x": 370,
        "y": 680,
        "wires": [
            [
                "875ce7d3fc33f058",
                "c63ae1c91226875b"
            ]
        ]
    },
    {
        "id": "9458a5a943e34e9a",
        "type": "subflow:ae0faa518ff234d5",
        "z": "6e9fd4ed1a3126bb",
        "name": "Derived Items",
        "x": 990,
        "y": 680,
        "wires": [
            [
                "29f9126c35b5deb6",
                "054a7fbcddde2975"
            ]
        ]
    },
    {
        "id": "a46e51a6c9772793",
        "type": "subflow:a3d425ba6d3b6a6a",
        "z": "6e9fd4ed1a3126bb",
        "name": "Classification",
        "x": 370,
        "y": 420,
        "wires": [
            [
                "ba4f6f3992473497",
                "e45dbbf96d03fe2b"
            ]
        ]
    },
    {
        "id": "eab9d1159d0ab151",
        "type": "subflow:473d6735cc46fccd",
        "z": "6e9fd4ed1a3126bb",
        "name": "Logical Edits",
        "x": 370,
        "y": 300,
        "wires": [
            [
                "c8729912fca5fc84",
                "faa95fef437a3a8f"
            ]
        ]
    },
    {
        "id": "43300b21ac0a44a9",
        "type": "subflow:473d6735cc46fccd",
        "z": "6e9fd4ed1a3126bb",
        "name": "Logical Edits",
        "x": 1130,
        "y": 420,
        "wires": [
            [
                "5e2818279732d1d4",
                "d1d4ee74592f6469"
            ]
        ]
    },
    {
        "id": "c63ae1c91226875b",
        "type": "subflow:473d6735cc46fccd",
        "z": "6e9fd4ed1a3126bb",
        "name": "Logical Edits",
        "x": 580,
        "y": 680,
        "wires": [
            [
                "9f74945d93f983f1",
                "84eeb0777962ace2"
            ]
        ]
    },
    {
        "id": "faa95fef437a3a8f",
        "type": "subflow:fd9469a0efbb8a77",
        "z": "6e9fd4ed1a3126bb",
        "name": "Unit Balance",
        "x": 570,
        "y": 300,
        "wires": [
            [
                "892b56b0bc650876",
                "6247de9ac9e28642"
            ]
        ]
    },
    {
        "id": "d1d4ee74592f6469",
        "type": "subflow:fd9469a0efbb8a77",
        "z": "6e9fd4ed1a3126bb",
        "name": "Unit Balance",
        "x": 1330,
        "y": 420,
        "wires": [
            [
                "b65643afe0093cf5",
                "bf0ad18b66b393bb"
            ]
        ]
    },
    {
        "id": "84eeb0777962ace2",
        "type": "subflow:fd9469a0efbb8a77",
        "z": "6e9fd4ed1a3126bb",
        "name": "Unit Balance",
        "x": 770,
        "y": 680,
        "wires": [
            [
                "1728e38a2a40b462",
                "9458a5a943e34e9a"
            ]
        ]
    },
    {
        "id": "cb8e966fa360d484",
        "type": "debug",
        "z": "6e9fd4ed1a3126bb",
        "name": "Modules Data to Table",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 1060,
        "wires": []
    },
    {
        "id": "fa428e05926d3d8a",
        "type": "subflow:96f29b19e2260e65",
        "z": "6e9fd4ed1a3126bb",
        "name": "Post Edit",
        "x": 1040,
        "y": 300,
        "wires": [
            [
                "f8c507b76d49363e",
                "a46e51a6c9772793"
            ]
        ]
    },
    {
        "id": "a813b3bcc9032af7",
        "type": "subflow:96f29b19e2260e65",
        "z": "6e9fd4ed1a3126bb",
        "name": "Post Edit",
        "x": 1540,
        "y": 480,
        "wires": [
            [
                "f51d8c89650868a3",
                "8308a860a28a667a"
            ]
        ]
    },
    {
        "id": "054a7fbcddde2975",
        "type": "subflow:96f29b19e2260e65",
        "z": "6e9fd4ed1a3126bb",
        "name": "Post Edit",
        "x": 1180,
        "y": 680,
        "wires": [
            [
                "0213c59c5c3e5daa",
                "316698c0494d4e3b"
            ]
        ]
    },
    {
        "id": "e45dbbf96d03fe2b",
        "type": "subflow:1e75121bac78652a",
        "z": "6e9fd4ed1a3126bb",
        "name": "Completeness Check / Core Variables",
        "x": 650,
        "y": 420,
        "wires": [
            [
                "4b287c6a84b703e2",
                "7ace8ac968735bb7"
            ]
        ]
    },
    {
        "id": "23051ea3268843f2",
        "type": "ui_button",
        "z": "6e9fd4ed1a3126bb",
        "name": "",
        "group": "6414e38571345793",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 390,
        "y": 920,
        "wires": [
            [
                "358bd9e6e520f05e"
            ]
        ]
    },
    {
        "id": "358bd9e6e520f05e",
        "type": "function",
        "z": "6e9fd4ed1a3126bb",
        "name": "Clear Data",
        "func": "flow.set(\"state\", []);\n\nmsg.payload = []\n\nnode.send(msg);",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 920,
        "wires": [
            [
                "8adc41f28f4031b3"
            ]
        ]
    },
    {
        "id": "76611ce4593cf7cb",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 53",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 255,
        "y": 60,
        "wires": []
    },
    {
        "id": "86d4c2b68eb247d4",
        "type": "link in",
        "z": "6e9fd4ed1a3126bb",
        "name": "link in 32",
        "links": [
            "ae6ad5331182af2d"
        ],
        "x": 265,
        "y": 120,
        "wires": [
            [
                "d3434a238cbd21e4"
            ]
        ]
    },
    {
        "id": "d3434a238cbd21e4",
        "type": "subflow:120ad61b88a550e6",
        "z": "6e9fd4ed1a3126bb",
        "name": "BR Stat Evaluation",
        "x": 390,
        "y": 120,
        "wires": [
            [
                "140dbae17afc781d",
                "e3b9801fea0e353f"
            ]
        ]
    },
    {
        "id": "622871bfb97776df",
        "type": "subflow:a08711b1cedb891d",
        "z": "6e9fd4ed1a3126bb",
        "name": "NONNORM",
        "x": 810,
        "y": 120,
        "wires": [
            [
                "29da19c4410c4983",
                "455c8bacb3059701"
            ]
        ]
    },
    {
        "id": "140dbae17afc781d",
        "type": "subflow:a3136c877b98e237",
        "z": "6e9fd4ed1a3126bb",
        "name": "Critical Error",
        "x": 610,
        "y": 120,
        "wires": [
            [
                "622871bfb97776df",
                "608e1d25710336f8"
            ]
        ]
    },
    {
        "id": "e3b9801fea0e353f",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 25",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 495,
        "y": 120,
        "wires": []
    },
    {
        "id": "608e1d25710336f8",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 26",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 695,
        "y": 120,
        "wires": []
    },
    {
        "id": "455c8bacb3059701",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out 27",
        "mode": "link",
        "links": [
            "d50a64a5a0668810"
        ],
        "x": 895,
        "y": 120,
        "wires": []
    },
    {
        "id": "113d3062305ee712",
        "type": "inject",
        "z": "6e9fd4ed1a3126bb",
        "name": "Incoming Data from QBES",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"csv\":[{\"failure\":1,\"SUM(DET)\":1,\"TOT\":1,\"INDP\":1,\"ESMD\":1,\"REPORTING_ID_TYP\":\"SU\",\"FORM_CODE_IRS\":\"01\",\"NAICS_SECTOR\":51,\"RCPT_NET_IRS_CURR\":24041,\"RCPT_INTEREST_IRS_CURR\":10,\"RCPT_GROSSRENT_IRS_CURR\":20,\"RCPT_OTHINCOME_IRS_CURR\":30,\"RCPT_GROSSINC_IRS_CURR\":40,\"RCPT_TOTINC_IRS_CURR\":50,\"RCPT_TOTREV_IRS_CURR\":60,\"COST_GOODSOLD_IRS_CURR\":70,\"AIES_SCOPE\":\"Y\",\"BR_STAT\":\"Y\",\"NAICS_CODE_OLD\":4821,\"NAICS_WRITIN_TEXT\":\"na\",\"KAU_NAICS\":6221101,\"COVCHGCD\":111,\"COVCHGDT\":\"2022-12-31\",\"Data\":0,\"PDIV\":\"S\",\"ANAIC\":1151234,\"EDTROUTE\":1,\"NAICOLD\":2151234,\"NAICSDSG\":3151234,\"NAICMAIL\":4151234,\"TRADCODE\":\"M\",\"STFIPS\":\"01\",\"GEOREG\":\"03\",\"ACTV_MIO_NUM\":8,\"ACTV_MIO_NUM_FLG\":\"RC\",\"OPSTATS\":\"\",\"OPSTATS_FLG\":\"R\",\"COV_CHG_CODE\":791,\"ACTVMIO_R\":10,\"COV_CHG_DATE\":\"2022-12-31\",\"OPSTAT\":5,\"OPSTAT_FLAG\":\"R\",\"RECORD_TYP\":89,\"BMF_FR941\":3,\"EPPAYANN\":0,\"NONNORM_FLG\":\"\",\"NONNORM\":\"\",\"PAY_QTR1_VAL\":0,\"EMP_MAR12_NUM\":0,\"OPSTATS_F\":\"RC\",\"TEMPMIO\":0,\"ECPAYQ1\":0,\"ACTV_MIO_VAL\":0,\"ACTV_MIO_VAL_FLG\":\"L\",\"ECPAYQ2\":3,\"ECPAYQ3\":4,\"ECPAYQ4\":5,\"ECPAYQ4_F\":\"\",\"REFPER\":2023,\"MADBPAYANN\":0,\"EMP_MAR12_NUM_F\":\"RG\",\"PAY_ANN_VAL\":0,\"PAY_QTR1_VAL_R\":0,\"PAY_QTR1_VAL_FLG\":\"R\",\"EMP_MAR12_NUM_FLG\":\"R\",\"CY_PAY_QTR1_VAL\":1,\"ECPAYQ1ZERO\":\"\",\"CY_EMP_MAR12_NUM\":1,\"ECEMPQ1\":1,\"RCPT_TOT_VAL\":0,\"module\":\"Incoming QBES\",\"UNIT\":\"ESTAB\",\"PAY_ANN_LSD\":0,\"EXPS_TEMPSTAF_VAL\":0,\"PROCESS_DIV_CODE\":\"I\",\"PAY_ANN_PRDWRK_VAL\":0,\"PAY_ANN_NONPRDWRK_VAL\":0,\"ECPAYANN\":10900,\"CY_PAY_ANN\":0,\"CY_PAY_ANN_FLG\":\"K123\",\"ESTABS\":1,\"HISTORIC_ECON_CENSUS\":1,\"MADB_2022_PAYANN\":1,\"ECRCPTOT\":1000,\"MONTHLY_data\":1,\"QSS_data\":1,\"MONTHLY_CMON\":1000,\"QUARTERLY_QREV\":1,\"MADB_2022_RCPTOT\":1,\"MADB_2022_PAYQ1\":1,\"RCPT_TOT_VAL_FLG\":\"\",\"PAY_QTR1_PRDWRK_VAL\":400,\"PAY_QTR1_NONPRDWRK_VAL\":12,\"EMP_MAR12_VAL\":0,\"EMP_MAR12_PRDWRK_NUM\":0,\"EMP_MAR12_NONPRDWRK_NUM\":0,\"MADB_2022_EMPQ1\":120,\"CY_EMP_MAR12\":70,\"CY_EMP_MAR12_FLG\":\"B\",\"EMP_MAR12_VAL_FLG\":\"C\"}]}",
        "payloadType": "json",
        "x": 130,
        "y": 60,
        "wires": [
            [
                "e9fa3350f5c93cb6",
                "76611ce4593cf7cb"
            ]
        ]
    },
    {
        "id": "4480a2673228edf6",
        "type": "link in",
        "z": "6e9fd4ed1a3126bb",
        "name": "link in gotQBES",
        "links": [
            "47bbe840e0da7226",
            "3ec01d49fbdfba54"
        ],
        "x": 265,
        "y": 20,
        "wires": [
            [
                "e9fa3350f5c93cb6"
            ]
        ]
    },
    {
        "id": "36ac45a273e5509f",
        "type": "link out",
        "z": "6e9fd4ed1a3126bb",
        "name": "link out to gotFLOW",
        "mode": "link",
        "links": [
            "b982c1cf6a93e62d",
            "8ad2ab7c27d8d248"
        ],
        "x": 1335,
        "y": 840,
        "wires": []
    },
    {
        "id": "7700d41f2bff649a",
        "type": "digitaloak-postgresql-query",
        "z": "d772b64609d590ad",
        "name": "",
        "server": "ea3e0b5d6b96f47a",
        "inputs": 1,
        "outputs": 1,
        "x": 250,
        "y": 80,
        "wires": [
            [
                "6c5c30122a8dd550",
                "75a9736d9a433f4b"
            ]
        ]
    },
    {
        "id": "313558df85cfacfe",
        "type": "inject",
        "z": "d772b64609d590ad",
        "name": "",
        "props": [
            {
                "p": "query",
                "v": "SELECT * FROM product_aies.item_estabs_2023a1 LIMIT 12500;",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 90,
        "y": 80,
        "wires": [
            [
                "7700d41f2bff649a"
            ]
        ]
    },
    {
        "id": "f124df0504a5b2e3",
        "type": "subflow:196c62ada91c222d",
        "z": "d772b64609d590ad",
        "name": "",
        "x": 170,
        "y": 160,
        "wires": [
            [
                "1fb1ac3063737e10"
            ]
        ]
    },
    {
        "id": "1fb1ac3063737e10",
        "type": "subflow:fdb2d8067b333a05",
        "z": "d772b64609d590ad",
        "name": "",
        "x": 370,
        "y": 160,
        "wires": [
            [
                "6216d33d01550da1"
            ]
        ]
    },
    {
        "id": "6c5c30122a8dd550",
        "type": "function",
        "z": "d772b64609d590ad",
        "name": "getSurveyDatefromTableName",
        "func": "let query = msg.query;\nlet parts = query.split('FROM');\nlet fullTableName = parts[1].trim();\n\nlet tableNameParts = fullTableName.split('.');\ntableNameParts = tableNameParts[1].split(' ');\nlet tbNamePartsYear = tableNameParts[0].split('_');\nmsg.surveyYear = parseInt(tbNamePartsYear[2].slice(0,4));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 80,
        "wires": [
            [
                "f124df0504a5b2e3"
            ]
        ]
    },
    {
        "id": "6216d33d01550da1",
        "type": "subflow:bfe1ab19e0cbe2cf",
        "z": "d772b64609d590ad",
        "name": "",
        "x": 550,
        "y": 160,
        "wires": [
            [
                "eec3fe57fae30aa2"
            ]
        ]
    },
    {
        "id": "778188e47f841bef",
        "type": "debug",
        "z": "d772b64609d590ad",
        "name": "DB output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 20,
        "wires": []
    },
    {
        "id": "75a9736d9a433f4b",
        "type": "function",
        "z": "d772b64609d590ad",
        "name": "parse",
        "func": "msg.payload = JSON.parse(JSON.stringify(msg.payload))\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 20,
        "wires": [
            [
                "778188e47f841bef"
            ]
        ]
    },
    {
        "id": "eec3fe57fae30aa2",
        "type": "subflow:a0bced2e224712c4",
        "z": "d772b64609d590ad",
        "name": "Calculate Best Admin Receipts",
        "x": 790,
        "y": 160,
        "wires": [
            [
                "37c87e66e2017ba7"
            ]
        ]
    },
    {
        "id": "37c87e66e2017ba7",
        "type": "subflow:1e75121bac78652a",
        "z": "d772b64609d590ad",
        "name": "Completeness",
        "x": 1040,
        "y": 160,
        "wires": [
            [
                "4e1eb988afc0a7c4"
            ]
        ]
    },
    {
        "id": "4e1eb988afc0a7c4",
        "type": "subflow:ae0faa518ff234d5",
        "z": "d772b64609d590ad",
        "name": "Derived Items",
        "x": 160,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "f6c5a7e7.8b1d28",
        "type": "inject",
        "z": "7904b0afeb2b68c0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"api_key\":\"x5nDCpvGTkvHniq8wJ9m\",\"page\":1,\"itemsPerPage\":10,\"filter\":\"\",\"jobName\":\"New Job\",\"totalRows\":100}",
        "payloadType": "json",
        "x": 190,
        "y": 260,
        "wires": [
            [
                "f3a3d8d2.5b1b98"
            ]
        ]
    },
    {
        "id": "f3a3d8d2.5b1b98",
        "type": "ui_form",
        "z": "7904b0afeb2b68c0",
        "name": "JOB",
        "label": "",
        "group": "eb430edea69b48da",
        "order": 3,
        "width": 24,
        "height": 1,
        "options": [
            {
                "label": "Job Name",
                "value": "jobName",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Records per batch",
                "value": "itemsPerPage",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Where",
                "value": "filters",
                "type": "multiline",
                "required": false,
                "rows": 1
            },
            {
                "label": "Rule Types (csv)",
                "value": "ruleTypes",
                "type": "multiline",
                "required": false,
                "rows": 1
            },
            {
                "label": "Start Page",
                "value": "page",
                "type": "number",
                "required": true,
                "rows": null
            },
            {
                "label": "Time to submit",
                "value": "time_to_submit",
                "type": "time",
                "required": false,
                "rows": null
            },
            {
                "label": "Total Rows",
                "value": "totalRows",
                "type": "number",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "jobName": "",
            "itemsPerPage": "",
            "filters": "",
            "ruleTypes": "",
            "page": "",
            "time_to_submit": "",
            "totalRows": ""
        },
        "payload": "",
        "submit": "Submit",
        "cancel": "Cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": true,
        "className": "",
        "x": 430,
        "y": 260,
        "wires": [
            [
                "f5e5a6d4.7a9c28"
            ]
        ]
    },
    {
        "id": "f5e5a6d4.7a9c28",
        "type": "function",
        "z": "7904b0afeb2b68c0",
        "name": "",
        "func": "flow.set('startTime', new Date())\nlet elapsedTime = 0\nlet startTime = flow.get('startTime')\n\nlet timerInterval = setInterval(() => {\n    const currentTime = Date.now();\n    elapsedTime = currentTime - startTime;\n\n    let milliseconds = parseInt(elapsedTime % 1000);\n    let seconds = parseInt((elapsedTime / 1000) % 60);\n    let minutes = parseInt((elapsedTime / (1000 * 60)) % 60);\n\n    milliseconds = milliseconds < 10 ? \"0\" + milliseconds : milliseconds;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n\n}, 10)\n\nflow.set('interval', timerInterval)\nflow.set('timer', elapsedTime)\n\n// time\nfunction getTime() {\n    const currentDate = new Date();\n    const hours = String(currentDate.getHours()).padStart(2, '0');\n    const minutes = String(currentDate.getMinutes()).padStart(2, '0');\n    const seconds = String(currentDate.getSeconds()).padStart(2, '0');\n    const milliseconds = String(currentDate.getMilliseconds()).padStart(3, '0');\n\n    const formattedDate = ` - ${hours}:${minutes}:${seconds}:${milliseconds}`;\n\n\n    return formattedDate\n}\n\nvar jobName = msg.payload.jobName+getTime();\nvar api_token = msg.payload.api_token;\nvar time_to_submit = msg.payload.time_to_submit;\nvar filterString = msg.payload.filters || \"{}\"\nvar filters = JSON.parse(filterString);//msg.payload.filters);\nvar itemsPerPage = msg.payload.itemsPerPage;\nvar page = msg.payload.page;\nvar totalRows = msg.payload.totalRows;\n\n\n\n\n\n\n\n\nvar ruleTypes = msg.payload.ruleTypes || 'new,estab'\n\nmsg.payload = JSON.stringify({\n    \"jobName\": jobName,\n    \"api_key\": \"x5nDCpvGTkvHniq8wJ9m\",\n    \"time_to_submit\": time_to_submit,\n    \"where\": filters,\n    \"whereClause\": filterString,\n    \"limit\": itemsPerPage,\n    \"offset\": page,\n    \"ruleTypes\": ruleTypes,\n    \"totalRows\": totalRows\n})\n\n\n\n//msg.payload = `{\"filters\":{\"parent_name\":\"\"},\"page\":1,\"itemsPerPage\":5}`\nmsg.topic = \"jobRequest\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 260,
        "wires": [
            [
                "298f0efcfe6e4509"
            ]
        ]
    },
    {
        "id": "f8a3b1e8.ee2b",
        "type": "http request",
        "z": "7904b0afeb2b68c0",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://localhost/companies?api_key=x5nDCpvGTkvHniq8wJ9m&DEBUG=false&filters=' + encodeURIComponent(msg.payload.filters) + '&page=' + encodeURIComponent(msg.payload.page)",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 850,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "e515d6fd.b0b65",
        "type": "inject",
        "z": "7904b0afeb2b68c0",
        "name": "Sample Data",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"id\":1,\"name\":\"John\"},{\"id\":2,\"name\":\"Alice\"},{\"id\":3,\"name\":\"Bob\"},{\"id\":4,\"name\":\"Emma\"},{\"id\":5,\"name\":\"Michael\"},{\"id\":6,\"name\":\"Olivia\"},{\"id\":7,\"name\":\"William\"},{\"id\":8,\"name\":\"Sophia\"},{\"id\":9,\"name\":\"James\"},{\"id\":10,\"name\":\"Charlotte\"},{\"id\":11,\"name\":\"Alexander\"},{\"id\":12,\"name\":\"Emily\"},{\"id\":13,\"name\":\"Daniel\"},{\"id\":14,\"name\":\"Mia\"},{\"id\":15,\"name\":\"Henry\"},{\"id\":16,\"name\":\"Ava\"},{\"id\":17,\"name\":\"Oliver\"},{\"id\":18,\"name\":\"Amelia\"},{\"id\":19,\"name\":\"Benjamin\"},{\"id\":20,\"name\":\"Ella\"},{\"id\":21,\"name\":\"Jacob\"},{\"id\":22,\"name\":\"Grace\"},{\"id\":23,\"name\":\"Matthew\"},{\"id\":24,\"name\":\"Lily\"},{\"id\":25,\"name\":\"Joseph\"},{\"id\":26,\"name\":\"Lucy\"},{\"id\":27,\"name\":\"Samuel\"},{\"id\":28,\"name\":\"Chloe\"},{\"id\":29,\"name\":\"David\"},{\"id\":30,\"name\":\"Abigail\"}]",
        "payloadType": "json",
        "x": 170,
        "y": 620,
        "wires": [
            [
                "4f4b7e54.8b7164"
            ]
        ]
    },
    {
        "id": "4f4b7e54.8b7164",
        "type": "function",
        "z": "7904b0afeb2b68c0",
        "name": "Paging",
        "func": "// Load 10 records per page by default\nvar perPage = 10;\n\n// Retrieve the payload from the input message\nvar payload = msg.payload;\n\n// Retrieve the current page from the input message\nvar page = msg.page || 1;\n\n// Calculate the starting index for the current page\nvar startIndex = (page - 1) * perPage;\n\n// Calculate the ending index for the current page\nvar endIndex = page * perPage;\n\n// Slice the data array to retrieve the records for the current page\nvar pagedData = payload.slice(startIndex, endIndex);\n\n// Create a new message with the paged data\nmsg.payload = pagedData;\n\n// Return the modified message\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 620,
        "wires": [
            [
                "e0ef206c.ae46b8"
            ]
        ]
    },
    {
        "id": "e0ef206c.ae46b8",
        "type": "ui_table",
        "z": "7904b0afeb2b68c0",
        "group": "",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "4",
        "columns": [
            {
                "field": "id",
                "title": "ID",
                "width": "80px",
                "align": "center",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "name",
                "title": "Name",
                "width": "200px",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 560,
        "y": 620,
        "wires": []
    },
    {
        "id": "950bc7a38b7588b2",
        "type": "Kafka Admin",
        "z": "7904b0afeb2b68c0",
        "name": "Connect",
        "broker": "01239f0e2e5d8173",
        "x": 120,
        "y": 500,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f94006127c4e3798",
        "type": "debug",
        "z": "7904b0afeb2b68c0",
        "name": "Debug Facts Requested",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 380,
        "wires": []
    },
    {
        "id": "d9fb626ff6d93c12",
        "type": "inject",
        "z": "7904b0afeb2b68c0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "2",
        "topic": "getFacts",
        "payload": "{\"filters\":{\"parent_name\":\"\"},\"page\":1,\"itemsPerPage\":5}",
        "payloadType": "str",
        "x": 410,
        "y": 220,
        "wires": [
            [
                "298f0efcfe6e4509"
            ]
        ]
    },
    {
        "id": "298f0efcfe6e4509",
        "type": "Kafka Producer",
        "z": "7904b0afeb2b68c0",
        "name": "",
        "broker": "01239f0e2e5d8173",
        "topic": "getFacts15",
        "topicSlash2dot": false,
        "requireAcks": 1,
        "ackTimeoutMs": 100,
        "partitionerType": 0,
        "key": "",
        "partition": 0,
        "attributes": 0,
        "connectionType": "Producer",
        "convertFromJson": false,
        "x": 740,
        "y": 160,
        "wires": []
    },
    {
        "id": "9df7ae035994eeaa",
        "type": "kafka-consumer",
        "z": "7904b0afeb2b68c0",
        "name": "getFactsKafka",
        "broker": "a734a95fe6c7b3dc",
        "outOfRangeOffset": "earliest",
        "fromOffset": "latest",
        "topic": "jobRequest",
        "groupid": "",
        "x": 670,
        "y": 440,
        "wires": [
            [
                "1e011873a5266a77"
            ]
        ]
    },
    {
        "id": "4f09d6b681cf35af",
        "type": "ui_table",
        "z": "7904b0afeb2b68c0",
        "group": "eb430edea69b48da",
        "name": "Submitted JOBS",
        "order": 2,
        "width": 24,
        "height": 8,
        "columns": [
            {
                "field": "timestamp",
                "title": "Index",
                "width": "80",
                "align": "left",
                "formatter": "rownum",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "valueJSON.jobName",
                "title": "JOB Name",
                "width": "180",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "valueJSON.ruleTypes",
                "title": "Rule Types (csv)",
                "width": "120",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "valueJSON.whereClause",
                "title": "Where",
                "width": "120",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "valueJSON.limit",
                "title": "Limit",
                "width": "80",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "valueJSON.offset",
                "title": "Offset",
                "width": "80",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "timestamp",
                "title": "Time",
                "width": "120",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "valueJSON.totalRows",
                "title": "Total Rows",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1290,
        "y": 440,
        "wires": []
    },
    {
        "id": "1e011873a5266a77",
        "type": "function",
        "z": "7904b0afeb2b68c0",
        "name": "Get Submitted JOBs Request",
        "func": "\nlet getFactsRequest =flow.get(\"getFactsRequest\") || []\n\n\n\nmsg.payload.valueJSON = JSON.parse(msg.payload.value)\ngetFactsRequest.unshift(msg.payload)\n\nif(getFactsRequest.length > 50) getFactsRequest.pop()\nflow.set('getFactsRequest', getFactsRequest)\n\nmsg.payload = getFactsRequest\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 440,
        "wires": [
            [
                "f94006127c4e3798",
                "4f09d6b681cf35af"
            ]
        ]
    },
    {
        "id": "2fe66324eaaf88a2",
        "type": "function",
        "z": "7904b0afeb2b68c0",
        "name": "function 1",
        "func": "msg.payload =[\n    {\n\n        \"topic\": \"getFacts2\",\n        \"value\": \"{\\\"filters\\\":{\\\"parent_name\\\":\\\"\\\"},\\\"page\\\":1,\\\"itemsPerPage\\\":5}\",\n        \"offset\": 55,\n        \"partition\": 0,\n        \"highWaterOffset\": 56,\n        \"key\": \"JOB2\",\n        \"timestamp\": \"2023-05-22T17:51:37.915Z\"\n    },\n    {\n        \"topic\": \"getFacts3\",\n        \"value\": \"{\\\"filters\\\":{\\\"parent_name\\\":\\\"\\\"},\\\"page\\\":1,\\\"itemsPerPage\\\":5}\",\n        \"offset\": 55,\n        \"partition\": 0,\n        \"highWaterOffset\": 56,\n        \"key\": \"JOB3\",\n        \"timestamp\": \"2023-05-22T17:51:37.915Z\"\n    }\n]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "efb170aa269caec2",
        "type": "inject",
        "z": "7904b0afeb2b68c0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 840,
        "y": 540,
        "wires": [
            [
                "2fe66324eaaf88a2"
            ]
        ]
    },
    {
        "id": "9f5e64e6da2963a2",
        "type": "kafka-consumer",
        "z": "7904b0afeb2b68c0",
        "name": "getNotification",
        "broker": "a734a95fe6c7b3dc",
        "outOfRangeOffset": "earliest",
        "fromOffset": "latest",
        "topic": "notification",
        "groupid": "",
        "x": 420,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "cc85bb2b1dcd0c22",
        "type": "ui_button",
        "z": "7904b0afeb2b68c0",
        "name": "",
        "group": "eb430edea69b48da",
        "order": 1,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Add",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "fa-plus",
        "payload": "{\"api_key\":\"x5nDCpvGTkvHniq8wJ9m\",\"page\":1,\"itemsPerPage\":10,\"filters\":\"\",\"jobName\":\"New Job\",\"time_to_submit\":\"now\",\"ruleTypes\":\"estab\",\"where\":{},\"totalRows\":100}",
        "payloadType": "json",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 340,
        "wires": [
            [
                "f3a3d8d2.5b1b98"
            ]
        ]
    },
    {
        "id": "e95f3d11.449c1",
        "type": "inject",
        "z": "50e56d1290888d82",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 120,
        "wires": [
            [
                "4ff91880.4d278"
            ]
        ]
    },
    {
        "id": "4ff91880.4d278",
        "type": "function",
        "z": "50e56d1290888d82",
        "name": "Initial Filter",
        "func": "msg.payload = {\n\n    filters:{ \"parent_name1\":\"\"},\n    page: 1,\n    itemsPerPage: 1\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 120,
        "wires": [
            [
                "8d257f7c.160ea"
            ]
        ]
    },
    {
        "id": "8d257f7c.160ea",
        "type": "http request",
        "z": "50e56d1290888d82",
        "name": "API Request",
        "method": "GET",
        "ret": "json",
        "paytoqs": "body",
        "url": "http://localhost/companies?api_token=x5nDCpvGTkvHniq8wJ9m&DEBUG=false&filters={}&page={{payload.page}}&itemsPerPage={{payload.itemsPerPage}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 480,
        "y": 120,
        "wires": [
            [
                "2ee7e10c.eedc26"
            ]
        ]
    },
    {
        "id": "2ee7e10c.eedc26",
        "type": "function",
        "z": "50e56d1290888d82",
        "name": "Data Transformation",
        "func": "// Perform data transformation here\n\ntry {\n    // Parse the response string as JSON\n    var rows = JSON.parse(msg.payload);\n\n    // Assign the parsed JSON to the payload for further processing\n    msg.payload = rows;\n\n    // Return the modified message object\n\n\n    // Calculate the next page number\n    var nextPage = msg.payload.page + 1;\n\n    // // Check if there are more pages to fetch\n    if (nextPage <= msg.payload.totalPages) {\n        msg.payload.page = nextPage;\n        return [msg, null]; // Send the updated filter to fetch more data\n    } else {\n        return [null, msg]; // End the flow\n\n\n\n    }\n\n\n    return msg;\n} catch (error) {\n    // Handle parsing errors\n    node.error(\"Failed to parse JSON: \" + error.message);\n    return null;\n}\n\n\n\n\n// Extract the necessary data from the API response\nvar rows = msg.payload.data;\n\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 420,
        "wires": [
            [],
            [
                "7f7cc704.f4ee0c"
            ]
        ]
    },
    {
        "id": "7f7cc704.f4ee0c",
        "type": "debug",
        "z": "50e56d1290888d82",
        "name": "Final Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 120,
        "wires": []
    },
    {
        "id": "f4f42ec4abed4ed1",
        "type": "debug",
        "z": "50e56d1290888d82",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 580,
        "wires": []
    },
    {
        "id": "dc7fae5b6b8d3247",
        "type": "Kafka Admin",
        "z": "50e56d1290888d82",
        "name": "",
        "broker": "01239f0e2e5d8173",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "f4f42ec4abed4ed1"
            ],
            [
                "f4f42ec4abed4ed1"
            ]
        ]
    },
    {
        "id": "a8eca61a1377607f",
        "type": "kafka-producer",
        "z": "50e56d1290888d82",
        "name": "GetFacts",
        "broker": "a734a95fe6c7b3dc",
        "topic": "getFacts",
        "requireAcks": 1,
        "ackTimeoutMs": 100,
        "attributes": 0,
        "x": 160,
        "y": 440,
        "wires": []
    },
    {
        "id": "f3cdf31a0246456d",
        "type": "json",
        "z": "50e56d1290888d82",
        "name": "",
        "property": "payload.value",
        "action": "obj",
        "pretty": false,
        "x": 390,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "68b02e77b331c7e0",
        "type": "kafka-consumer",
        "z": "5b93d75bf6b1464b",
        "name": "gotFactsAndRules",
        "broker": "a734a95fe6c7b3dc",
        "outOfRangeOffset": "earliest",
        "fromOffset": "latest",
        "topic": "gotFactsAndRules",
        "groupid": "monitor-FactsAndRules",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "d7313916b7f09773"
            ]
        ]
    },
    {
        "id": "2590f66be1246f75",
        "type": "ui_gauge",
        "z": "5b93d75bf6b1464b",
        "name": "gotFactsAndRules",
        "group": "48f7a1eaae28d5a3",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Prep (gotFactsAndRules)",
        "label": "msg/s",
        "format": "{{value}}",
        "min": 0,
        "max": "1000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 870,
        "y": 40,
        "wires": []
    },
    {
        "id": "0e9a705cb36107a9",
        "type": "kafka-consumer",
        "z": "5b93d75bf6b1464b",
        "name": "gotQBES",
        "broker": "a734a95fe6c7b3dc",
        "outOfRangeOffset": "earliest",
        "fromOffset": "latest",
        "topic": "gotQBES",
        "groupid": "monitor-QBES",
        "x": 160,
        "y": 320,
        "wires": [
            [
                "5fbc44228a934cef"
            ]
        ]
    },
    {
        "id": "5fbc44228a934cef",
        "type": "function",
        "z": "5b93d75bf6b1464b",
        "name": "",
        "func": "let count = flow.get('Qcount') || 0\n++count\n\nflow.set('Qcount', count)\nmsg.payload = count\n\n// time\n// const currentDate = new Date();\n// const hours = String(currentDate.getHours()).padStart(2, '0');\n// const minutes = String(currentDate.getMinutes()).padStart(2, '0');\n// const seconds = String(currentDate.getSeconds()).padStart(2, '0');\n// const milliseconds = String(currentDate.getMilliseconds()).padStart(3, '0');\n\n// const formattedDate = `${hours}:${minutes}:${seconds}.${milliseconds}`;\n// console.log(formattedDate);\n\n\n// msg.time = formattedDate\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 320,
        "wires": [
            [
                "736a098e0d89c486",
                "f1e3cc8d17f0d90a"
            ]
        ]
    },
    {
        "id": "cb61f630f72a3a72",
        "type": "ui_gauge",
        "z": "5b93d75bf6b1464b",
        "name": "gotQBES",
        "group": "996eec6072a83356",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gotQBES",
        "label": "msg/s",
        "format": "{{value}}",
        "min": 0,
        "max": "1000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 640,
        "y": 280,
        "wires": []
    },
    {
        "id": "047292666e30524f",
        "type": "ui_chart",
        "z": "5b93d75bf6b1464b",
        "name": "gotFactsAndRules Rate",
        "group": "48f7a1eaae28d5a3",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1500",
        "removeOlder": "20",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 930,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "d7313916b7f09773",
        "type": "function",
        "z": "5b93d75bf6b1464b",
        "name": "function 3",
        "func": "let count = flow.get('FRcount') || 0\n++count\n\nflow.set('FRcount', count)\nmsg.payload = count\n\n// time\nconst currentDate = new Date();\nconst hours = String(currentDate.getHours()).padStart(2, '0');\nconst minutes = String(currentDate.getMinutes()).padStart(2, '0');\nconst seconds = String(currentDate.getSeconds()).padStart(2, '0');\nconst milliseconds = String(currentDate.getMilliseconds()).padStart(3, '0');\n\nconst formattedDate = `${hours}:${minutes}:${seconds}.${milliseconds}`;\nconsole.log(formattedDate);\n\n\nmsg.time = formattedDate\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 120,
        "wires": [
            [
                "209dc2041dfe2c8f",
                "6a35c7156aa8dac8"
            ]
        ]
    },
    {
        "id": "f0a226f43452b982",
        "type": "ui_chart",
        "z": "5b93d75bf6b1464b",
        "name": "gotQBES Rate",
        "group": "996eec6072a83356",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1500",
        "removeOlder": "20",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 920,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "209dc2041dfe2c8f",
        "type": "msg-speed",
        "z": "5b93d75bf6b1464b",
        "name": "Rate of gotFactsAndRules",
        "frequency": "sec",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 580,
        "y": 40,
        "wires": [
            [
                "2590f66be1246f75",
                "662dc610f097b1d5"
            ],
            []
        ]
    },
    {
        "id": "736a098e0d89c486",
        "type": "msg-speed",
        "z": "5b93d75bf6b1464b",
        "name": "Rate of gotQBES",
        "frequency": "sec",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 470,
        "y": 320,
        "wires": [
            [
                "cb61f630f72a3a72",
                "7f56704fac4a07f8"
            ],
            []
        ]
    },
    {
        "id": "f1e3cc8d17f0d90a",
        "type": "ui_text",
        "z": "5b93d75bf6b1464b",
        "group": "996eec6072a83356",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "large-text",
        "x": 490,
        "y": 420,
        "wires": []
    },
    {
        "id": "6a35c7156aa8dac8",
        "type": "ui_text",
        "z": "5b93d75bf6b1464b",
        "group": "48f7a1eaae28d5a3",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": ".num1",
        "x": 490,
        "y": 200,
        "wires": []
    },
    {
        "id": "2435f540dcad5cd3",
        "type": "kafka-consumer",
        "z": "5b93d75bf6b1464b",
        "name": "gotFLOW",
        "broker": "a734a95fe6c7b3dc",
        "outOfRangeOffset": "earliest",
        "fromOffset": "latest",
        "topic": "gotFLOW",
        "groupid": "monitor-FLOW",
        "x": 120,
        "y": 540,
        "wires": [
            [
                "0b818dde7278d861"
            ]
        ]
    },
    {
        "id": "0b818dde7278d861",
        "type": "function",
        "z": "5b93d75bf6b1464b",
        "name": "",
        "func": "let count = flow.get('Flcount') || 0\n++count\n\nflow.set('Flcount', count)\nmsg.payload = count\n\n// time\n// const currentDate = new Date();\n// const hours = String(currentDate.getHours()).padStart(2, '0');\n// const minutes = String(currentDate.getMinutes()).padStart(2, '0');\n// const seconds = String(currentDate.getSeconds()).padStart(2, '0');\n// const milliseconds = String(currentDate.getMilliseconds()).padStart(3, '0');\n\n// const formattedDate = `${hours}:${minutes}:${seconds}.${milliseconds}`;\n// console.log(formattedDate);\n\n\n// msg.time = formattedDate\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 540,
        "wires": [
            [
                "ad770cdd757f61b0",
                "910cda8ecced866a"
            ]
        ]
    },
    {
        "id": "b5b3f3ba092e5086",
        "type": "ui_gauge",
        "z": "5b93d75bf6b1464b",
        "name": "gotFLOW",
        "group": "114d7a8d369bd580",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gotFLOW",
        "label": "msg/s",
        "format": "{{value}}",
        "min": 0,
        "max": "1000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 620,
        "y": 500,
        "wires": []
    },
    {
        "id": "5ffca1f4b79bed35",
        "type": "ui_chart",
        "z": "5b93d75bf6b1464b",
        "name": "gotFLOW Rate",
        "group": "114d7a8d369bd580",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "1500",
        "removeOlder": "20",
        "removeOlderPoints": "",
        "removeOlderUnit": "1",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 800,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "ad770cdd757f61b0",
        "type": "msg-speed",
        "z": "5b93d75bf6b1464b",
        "name": "Rate of gotFLOW",
        "frequency": "sec",
        "interval": 1,
        "estimation": false,
        "ignore": false,
        "pauseAtStartup": false,
        "topicDependent": false,
        "x": 450,
        "y": 540,
        "wires": [
            [
                "b5b3f3ba092e5086",
                "f4a31c78cdd7a7ed"
            ],
            []
        ]
    },
    {
        "id": "910cda8ecced866a",
        "type": "ui_text",
        "z": "5b93d75bf6b1464b",
        "group": "114d7a8d369bd580",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "large-text",
        "x": 470,
        "y": 640,
        "wires": []
    },
    {
        "id": "ef4f0392366d1ebc",
        "type": "ui_button",
        "z": "5b93d75bf6b1464b",
        "name": "",
        "group": "e9f83f755d518ecd",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "replay",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 760,
        "wires": [
            [
                "71bfae055bcddd8c"
            ]
        ]
    },
    {
        "id": "71bfae055bcddd8c",
        "type": "function",
        "z": "5b93d75bf6b1464b",
        "name": "function",
        "func": "flow.set('Flcount', 0)\nflow.set('Qcount', 0)\nflow.set('FRcount', 0)\n\nmsg.payload = 0\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 760,
        "wires": [
            [
                "33715e06582ea903"
            ]
        ]
    },
    {
        "id": "33715e06582ea903",
        "type": "link out",
        "z": "5b93d75bf6b1464b",
        "name": "link out clearbutton",
        "mode": "link",
        "links": [
            "f453bd68030b7579",
            "acfb6194fd1c2634",
            "429686d6c1a3a7c7"
        ],
        "x": 435,
        "y": 760,
        "wires": []
    },
    {
        "id": "429686d6c1a3a7c7",
        "type": "link in",
        "z": "5b93d75bf6b1464b",
        "name": "link in clear text 3",
        "links": [
            "33715e06582ea903"
        ],
        "x": 365,
        "y": 640,
        "wires": [
            [
                "910cda8ecced866a"
            ]
        ]
    },
    {
        "id": "acfb6194fd1c2634",
        "type": "link in",
        "z": "5b93d75bf6b1464b",
        "name": "link in clear text 2",
        "links": [
            "33715e06582ea903"
        ],
        "x": 385,
        "y": 420,
        "wires": [
            [
                "f1e3cc8d17f0d90a"
            ]
        ]
    },
    {
        "id": "f453bd68030b7579",
        "type": "link in",
        "z": "5b93d75bf6b1464b",
        "name": "link in clear text 1",
        "links": [
            "33715e06582ea903"
        ],
        "x": 385,
        "y": 200,
        "wires": [
            [
                "6a35c7156aa8dac8"
            ]
        ]
    },
    {
        "id": "662dc610f097b1d5",
        "type": "rbe",
        "z": "5b93d75bf6b1464b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 730,
        "y": 100,
        "wires": [
            [
                "047292666e30524f"
            ]
        ]
    },
    {
        "id": "7f56704fac4a07f8",
        "type": "rbe",
        "z": "5b93d75bf6b1464b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 320,
        "wires": [
            [
                "f0a226f43452b982"
            ]
        ]
    },
    {
        "id": "f4a31c78cdd7a7ed",
        "type": "rbe",
        "z": "5b93d75bf6b1464b",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 630,
        "y": 540,
        "wires": [
            [
                "5ffca1f4b79bed35"
            ]
        ]
    },
    {
        "id": "7c47572277e0ed15",
        "type": "kafka-consumer",
        "z": "d7d109e0d89be1c6",
        "name": "Listen to QFLOW",
        "broker": "a734a95fe6c7b3dc",
        "outOfRangeOffset": "earliest",
        "fromOffset": "latest",
        "topic": "qflow",
        "groupid": "",
        "x": 100,
        "y": 400,
        "wires": [
            [
                "f9b02de75682c807"
            ]
        ]
    },
    {
        "id": "bed4b9a48e50c41c",
        "type": "debug",
        "z": "d7d109e0d89be1c6",
        "name": "kafka consumer: gotQBES",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 460,
        "wires": []
    },
    {
        "id": "3ec01d49fbdfba54",
        "type": "link out",
        "z": "d7d109e0d89be1c6",
        "name": "link out gotQBES",
        "mode": "link",
        "links": [
            "4480a2673228edf6"
        ],
        "x": 375,
        "y": 360,
        "wires": []
    },
    {
        "id": "8ad2ab7c27d8d248",
        "type": "link in",
        "z": "d7d109e0d89be1c6",
        "name": "link in gotFLOW",
        "links": [
            "36ac45a273e5509f"
        ],
        "x": 85,
        "y": 620,
        "wires": [
            [
                "60346d8f3d1bcd94",
                "e894cadacc02eb73"
            ]
        ]
    },
    {
        "id": "0859e8743c4ceedd",
        "type": "Kafka Producer",
        "z": "d7d109e0d89be1c6",
        "name": "producer qflow",
        "broker": "01239f0e2e5d8173",
        "topic": "qflow",
        "topicSlash2dot": false,
        "requireAcks": 1,
        "ackTimeoutMs": 100,
        "partitionerType": 0,
        "key": "",
        "partition": 0,
        "attributes": 0,
        "connectionType": "Producer",
        "convertFromJson": false,
        "x": 860,
        "y": 620,
        "wires": []
    },
    {
        "id": "f9b02de75682c807",
        "type": "function",
        "z": "d7d109e0d89be1c6",
        "name": "function 25",
        "func": "msg.payload = JSON.parse(msg.payload.value)\n\nconst currentStepIndex = msg.payload.recipe.currentStepIndex;\nconst startTime = new Date().getTime();\n\nmsg.payload.recipe.steps[currentStepIndex].tsStart = startTime;\n\nmsg.payload.facts = [msg.payload.fact]\nmsg.payload.qflowInputFacts = JSON.parse(JSON.stringify(msg.payload.facts))\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 400,
        "wires": [
            [
                "bed4b9a48e50c41c",
                "3ec01d49fbdfba54"
            ]
        ]
    },
    {
        "id": "60346d8f3d1bcd94",
        "type": "debug",
        "z": "d7d109e0d89be1c6",
        "name": "gotFlow",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 140,
        "y": 760,
        "wires": []
    },
    {
        "id": "835bb6358497e67d",
        "type": "digitaloak-postgresql-query",
        "z": "d7d109e0d89be1c6",
        "name": "",
        "server": "ea3e0b5d6b96f47a",
        "inputs": 1,
        "outputs": 1,
        "x": 590,
        "y": 700,
        "wires": [
            [
                "2cb077f36c21965b"
            ]
        ]
    },
    {
        "id": "05fb5a6867d6a53b",
        "type": "function",
        "z": "d7d109e0d89be1c6",
        "name": "Format for spad_2_table",
        "func": "const payload = msg.payload;\n\nconst findChangedKeyValuePairs = (oldObj, newObj) => {\n    const changedKeyValuePairs = [];\n\n    for (const key in newObj) {\n        if (oldObj[key] !== newObj[key]) {\n            changedKeyValuePairs.push({ \n                key, \n                oldValue: oldObj[key], \n                newValue: newObj[key],\n                service: {\n                    name: 'qflow',\n                    timestamp: new Date()\n                }\n            });\n        }\n    }\n\n    return changedKeyValuePairs;\n} \n\nconst qFlowdelta = findChangedKeyValuePairs(payload.qflowInputFacts[0], payload.facts[0]);\n\nlet delta = payload.delta;\ndelta = [...delta, ...qFlowdelta];\npayload.delta = delta;\nconst factID = payload.facts[0].ID;\nconst tableName = payload.tableName;\nconst facts = JSON.stringify(payload.facts[0]).replace(/'/g, \"''\");\nconst results = JSON.stringify({\n    valid: payload.valid,\n    invalid: payload.invalid,\n    delta: delta,\n    jobName: payload.jobName,\n    analytics: payload.analytics,\n    tableName: payload.tableName\n}).replace(/'/g, \"''\");\nconst jobName = payload.jobName;\ndelta = JSON.stringify(delta);\nconst createdBy = \"qFLOW\"\nconst modifiedBy = \"qFlOW\"\n\n\nmsg.query = `INSERT INTO product_aies.spad_2 (factID, jobname, delta, tablename, facts, results, created_by, modified_by, modified_at)`\nmsg.query += ` VALUES (${factID}, '${jobName}', '${delta}', '${tableName}', '${facts}', '${results}', '${createdBy}', '${modifiedBy}', CURRENT_TIMESTAMP);`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 700,
        "wires": [
            [
                "835bb6358497e67d",
                "3ae44470ea5ec6bf"
            ]
        ]
    },
    {
        "id": "3ae44470ea5ec6bf",
        "type": "debug",
        "z": "d7d109e0d89be1c6",
        "name": "spad_2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "query",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 800,
        "wires": []
    },
    {
        "id": "2cb077f36c21965b",
        "type": "debug",
        "z": "d7d109e0d89be1c6",
        "name": "psql",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 820,
        "wires": []
    },
    {
        "id": "e894cadacc02eb73",
        "type": "function",
        "z": "d7d109e0d89be1c6",
        "name": "updateResultToPayload",
        "func": "\nconst findChangedKeyValuePairs = (oldObj, newObj) => {\n    const changedKeyValuePairs = [];\n\n    for (const key in newObj) {\n        if (oldObj[key] !== newObj[key]) {\n            changedKeyValuePairs.push({\n                key,\n                oldValue: oldObj[key],\n                newValue: newObj[key],\n                service: {\n                    name: 'qflow',\n                    timestamp: new Date()\n                }\n            });\n        }\n    }\n\n    return changedKeyValuePairs;\n}\n\nconst qFlowdelta = findChangedKeyValuePairs(msg.payload.qflowInputFacts[0], msg.payload.facts[0]);\n\nmsg.payload.delta.push(...qFlowdelta);\nmsg.payload.fact = msg.payload.facts[0];\ndelete msg.payload.facts;\ndelete msg.payload.qflowInputFacts;\n\nvar currentStepIndex = msg.payload.recipe.currentStepIndex;\nconst startTime = msg.payload.recipe.steps[currentStepIndex].tsStart;\n\nconst endTime = new Date().getTime();\n\nmsg.payload.recipe.steps[currentStepIndex].tsEnd = endTime;\nmsg.payload.recipe.steps[currentStepIndex].processedTime = endTime - startTime;\n\nmsg.payload.recipe.steps[currentStepIndex].delta = qFlowdelta;\nmsg.payload.recipe.currentStepIndex = currentStepIndex + 1\nmsg.topicName = msg.payload.recipe.steps[currentStepIndex+1].msName;\n\nmsg.payload = JSON.stringify(msg.payload)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 600,
        "wires": [
            [
                "65ddc89844c5a58f",
                "3fec20bb8aaae008"
            ]
        ]
    },
    {
        "id": "65ddc89844c5a58f",
        "type": "debug",
        "z": "d7d109e0d89be1c6",
        "name": "debug 53",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 540,
        "wires": []
    },
    {
        "id": "3fec20bb8aaae008",
        "type": "switch",
        "z": "d7d109e0d89be1c6",
        "name": "Switch the topic push",
        "property": "topicName",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "qbes",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "qflow",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "jobOutput",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 600,
        "y": 620,
        "wires": [
            [
                "0a642e0d958b4a23",
                "8b0e07553bb5ee94"
            ],
            [
                "0859e8743c4ceedd"
            ],
            [
                "5c4ee6ee3a7c18b5"
            ]
        ]
    },
    {
        "id": "0a642e0d958b4a23",
        "type": "Kafka Producer",
        "z": "d7d109e0d89be1c6",
        "name": "producer qbes",
        "broker": "01239f0e2e5d8173",
        "topic": "qbes",
        "topicSlash2dot": false,
        "requireAcks": 1,
        "ackTimeoutMs": 100,
        "partitionerType": 0,
        "key": "",
        "partition": 0,
        "attributes": 0,
        "connectionType": "Producer",
        "convertFromJson": false,
        "x": 860,
        "y": 560,
        "wires": []
    },
    {
        "id": "5c4ee6ee3a7c18b5",
        "type": "Kafka Producer",
        "z": "d7d109e0d89be1c6",
        "name": "producer jobOutput",
        "broker": "01239f0e2e5d8173",
        "topic": "jobOutput",
        "topicSlash2dot": false,
        "requireAcks": "0",
        "ackTimeoutMs": 100,
        "partitionerType": "1",
        "key": "",
        "partition": 0,
        "attributes": 0,
        "connectionType": "Producer",
        "convertFromJson": false,
        "x": 870,
        "y": 680,
        "wires": []
    },
    {
        "id": "8b0e07553bb5ee94",
        "type": "debug",
        "z": "d7d109e0d89be1c6",
        "name": "debug 54",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 780,
        "wires": []
    },
    {
        "id": "918f1a6a7f8e0da0",
        "type": "ui_table",
        "z": "762437ab597e66e7",
        "group": "f1ba9b7b3ccb3021",
        "name": "PreData",
        "order": 1,
        "width": 8,
        "height": 13,
        "columns": [
            {
                "field": "preData",
                "title": "PreData",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 720,
        "y": 320,
        "wires": []
    },
    {
        "id": "08499d1a576e8c5e",
        "type": "function",
        "z": "762437ab597e66e7",
        "name": "Edit PreData for table display",
        "func": "let arr = []\n\nif (msg.payload.rows[0]) {\n    msg.payload = msg.payload.rows[0]\n}\n\nfor (let prop in msg.payload) {\n    if (msg.payload.hasOwnProperty(prop)) {\n        arr.push(\n            {\n                \"preData\": JSON.stringify(prop) + \": \" + JSON.stringify(msg.payload[prop])\n            }\n        )\n    }\n}\n\nmsg.payload = arr\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 320,
        "wires": [
            [
                "918f1a6a7f8e0da0"
            ]
        ]
    },
    {
        "id": "3078bbd57bbee057",
        "type": "digitaloak-postgresql-query",
        "z": "762437ab597e66e7",
        "name": "",
        "server": "d25654593e23b264",
        "inputs": 1,
        "outputs": 1,
        "x": 230,
        "y": 260,
        "wires": [
            [
                "56566e824f8876c0"
            ]
        ]
    },
    {
        "id": "d083dbfbcc7f8565",
        "type": "inject",
        "z": "762437ab597e66e7",
        "name": "",
        "props": [
            {
                "p": "query",
                "v": "SELECT *  FROM product_aies.balance",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 170,
        "y": 200,
        "wires": [
            [
                "3078bbd57bbee057"
            ]
        ]
    },
    {
        "id": "56566e824f8876c0",
        "type": "function",
        "z": "762437ab597e66e7",
        "name": "function 26",
        "func": "msg.payload = JSON.parse(JSON.stringify(msg.payload))\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 320,
        "wires": [
            [
                "4487da4bad26b086",
                "08499d1a576e8c5e",
                "b1b0259364f23c4f"
            ]
        ]
    },
    {
        "id": "4487da4bad26b086",
        "type": "debug",
        "z": "762437ab597e66e7",
        "name": "debug 53",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 260,
        "y": 360,
        "wires": []
    },
    {
        "id": "b1b0259364f23c4f",
        "type": "function",
        "z": "762437ab597e66e7",
        "name": "balance module",
        "func": "\nif (msg.payload.rows[0]) {\n    msg.payload = msg.payload.rows[0]\n}\n\nfunction sumOfVariables(total, arr) {\n    let sumDET = 0;\n    for (let i = 0; i < arr.length; i++) {\n        sumDET += arr[i];\n    }    \n    \n    if (sumDET > 0 && total == 0 ) {\n        total = sumDET\n        msg.payload.total_flg ? msg.payload.total_flg + 'L' : msg.payload.total_flg = 'L'\n    } else if (sumDET == 0 && total > 0 ) {\n        total = sumDET\n        msg.payload.details_flg ? msg.payload.details_flg + 'X' : msg.payload.details_flg = 'X'\n    } else if (sumDET > 0 && total > 0) {\n        let ratio = sumDET / total;\n        if (ratio >= 0.8 && ratio <= 1.2) {\n            msg.payload.details_flg ? msg.payload.details_flg + 'X' : msg.payload.details_flg = 'X'\n        } else {\n            total = sumDET\n            msg.payload.details_flg ? msg.payload.details_flg + 'X' : msg.payload.details_flg = 'X'\n        }\n    } else if (sumDET == 0 && total == 0 ) {\n        msg.imputations = true\n        msg.payload.details_flg ? msg.payload.details_flg + 'X' : msg.payload.details_flg = 'X'\n    }\n}\n\nsumOfVariables(msg.payload.capex_mach_tot_dval, [msg.payload.capex_build_new_val, msg.payload.capex_build_used_val] )\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 420,
        "wires": [
            [
                "fef8d59666620920",
                "ee87e1c7492c79a6"
            ]
        ]
    },
    {
        "id": "f992b22ba61fed2a",
        "type": "ui_table",
        "z": "762437ab597e66e7",
        "group": "05ad88d05dd28ef3",
        "name": "PostData",
        "order": 1,
        "width": 8,
        "height": 13,
        "columns": [
            {
                "field": "postData",
                "title": "PostData",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 1,
        "cts": true,
        "x": 960,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "fef8d59666620920",
        "type": "function",
        "z": "762437ab597e66e7",
        "name": "Edit PostData for table display",
        "func": "let arr = []\n\nfor (let prop in msg.payload) {\n    if (msg.payload.hasOwnProperty(prop)) {\n        arr.push(\n            {\n                \"postData\": JSON.stringify(prop) + \": \" + JSON.stringify(msg.payload[prop])\n            }\n        )\n    }\n}\n\nmsg.payload = arr\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 420,
        "wires": [
            [
                "f992b22ba61fed2a"
            ]
        ]
    },
    {
        "id": "ee87e1c7492c79a6",
        "type": "debug",
        "z": "762437ab597e66e7",
        "name": "debug 54",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 540,
        "wires": []
    },
    {
        "id": "8feba05e91ff48f3",
        "type": "link in",
        "z": "0a014270e6816fdf",
        "name": "link in 22",
        "links": [
            "b1540f3459d95049",
            "51e14578de8e4e73"
        ],
        "x": 185,
        "y": 240,
        "wires": [
            [
                "f2eeed6f42b8a31c"
            ]
        ]
    },
    {
        "id": "f2eeed6f42b8a31c",
        "type": "function",
        "z": "0a014270e6816fdf",
        "name": "critical error",
        "func": "let record_idx = global.get(\"ptrModuleFacts\");\nlet record = msg.payload.csv[record_idx];\nlet status = \"\";\nmsg.payload.status = status;\n/* Uncomment this block for debugging \n    msg.payload.COV_CHG_CODE = record.COV_CHG_CODE\n    msg.payload.PAY_ANN_VAL = record.PAY_ANN_VAL\n    msg.payload.EMP_MAR12_NUM = record.EMP_MAR12_NUM\n    msg.payload.PAY_QTR1_VAL = record.PAY_QTR1_VAL\n    msg.payload.ECPAYANN = record.ECPAYANN\n    msg.payload.ECPAYQ1 = record.ECPAYQ1\n    msg.payload.ECEMPQ1 = record.ECEMPQ1\n    msg.payload.ECPAYANL = record.ECPAYANL\n    msg.payload.PROCESS_DIV_CODE_TXT = record.PROCESS_DIV_CODE_TXT\n    msg.payload.NAICS_SECTOR_OLD_NUM = record.NAICS_SECTOR_OLD_NUM\n*/\n\nfunction setResult() {\n    /* Uncomment to debug\n    msg.payload.status += \"+settingResult\";*/\n    msg.payload.csv[record_idx].TABSTAT = \"N\";\n    msg.payload.csv[record_idx].NONTABFL = \"D\";\n    msg.payload.csv[record_idx].action = \"Exit Edit\";\n}\n\n\n\nfunction parseToNum(val) {\n    return isNaN(val) ? 0 : parseInt(val, 10);\n}\nfunction naicsSectorCheck() {\n    let result =\n        parseToNum(record.PAY_ANN_VAL) +\n        parseToNum(record.EMP_MAR12_NUM) +\n        parseToNum(record.PAY_QTR1_VAL) +\n        parseToNum(record.ECPAYANN) +\n        parseToNum(record.ECPAYQ1) +\n        parseToNum(record.ECEMPQ1) +\n        parseToNum(record.ECPAYANL);\n\n    if (parseToNum(record.NAICS_SECTOR_OLD_NUM) === 31) {\n        return result + parseToNum(record.EXPS_TEMPSTAF_VAL);\n    }\n    return result\n}\nlet data = naicsSectorCheck();\nmsg.payload.csv[record_idx].DATA = data\nconsole.log()\nif (\n    [\"111\", \"131\", \"791\"].includes(record.COV_CHG_CODE.toString()) &&\n    new Date(record.COV_CHG_DATE) <=\n    new Date(\"01-01-\" + record.REF_PER.substring(0, 4)) &&\n    data\n) {\n    msg.payload.csv[record_idx].TABSTAT = \"Y\";\n    return msg;\n\n} else if ([\"181\", \"201\", \"801\", \"091\", \"121\", \"171\"].includes(record.COV_CHG_CODE.toString()) || data === 0) {\n    setResult();\n    return msg;\n} else {\n    msg.payload.csv[record_idx].action = \"Go To Main Routing\";\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 240,
        "wires": [
            [
                "ff2345470be2965f",
                "f7e7a2a2e4eb195a"
            ]
        ]
    },
    {
        "id": "ff2345470be2965f",
        "type": "debug",
        "z": "0a014270e6816fdf",
        "name": "debug critical error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 160,
        "wires": []
    },
    {
        "id": "f7e7a2a2e4eb195a",
        "type": "link out",
        "z": "0a014270e6816fdf",
        "name": "link out 19",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9"
        ],
        "x": 485,
        "y": 240,
        "wires": []
    },
    {
        "id": "db789f21830bbd04",
        "type": "inject",
        "z": "5e1a962405c84d2b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"RECORD_TYP\":\"20\",\"PROCESS_DIV_CODE\":\"1\"}",
        "payloadType": "json",
        "x": 150,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "95217c8ed8e79881",
        "type": "link in",
        "z": "5e1a962405c84d2b",
        "name": "link in 15",
        "links": [
            "a42aa429654aa772",
            "db3b91da76ec41a9"
        ],
        "x": 305,
        "y": 120,
        "wires": [
            [
                "1de39caabc61c808"
            ]
        ]
    },
    {
        "id": "1de39caabc61c808",
        "type": "function",
        "z": "5e1a962405c84d2b",
        "name": "function 18",
        "func": "// if (String(msg.payload.csv[0].RECORD_TYP) === \"20\" || String(msg.payload.csv[0].RECORD_TYP) === \"90\") {\n//     if(msg.payload.csv[0].PROCESS_DIV_CODE = \"1\") {\n//         msg.payload.csv[0].action = \"Go to: Derive MFG NAICS from NAPCS\"\n//     } else {\n//         msg.payload.csv[0].action = \"Go to: Classification\"\n//     }\n// } else {\n//     msg.payload.csv[0].action = \"Go to: Classification\"\n// }\n// return msg;\n// console.log(String(msg.payload.csv[0].RECORD_TYP_TXT), String(msg.payload.csv[0].RECORD_TYP_TXT), String(msg.payload.csv[0].REPORTING_TYP_ID) === \"SU\", String(msg.payload.csv[0].REPORTING_TYP_ID) === \"MU\")\nlet record_idx = global.get(\"ptrModuleFacts\");\nlet record = msg.payload.csv[record_idx];\n\nif (\n    (String(record.RECORD_TYP_TXT) === \"20\" || String(record.RECORD_TYP_TXT) === \"90\")\n    && \n    (String(record.REPORTING_TYP_ID) === \"SU\" || String(record.REPORTING_TYP_ID) === \"MU\")\n    ) \n{\n    console.log(1)\n    if (String(record.NAICS_SECTOR_OLD_NUM) === \"31\") {\n        console.log(2)\n        record.action = \"Go to: Derive MFG NAICS from NAPCS\"\n    } else {\n        console.log(3)\n        record.action = \"Go to: Classification\"\n        \n    }\n    return msg;\n} \nelse if (\n    String(record.RECORD_TYP_TXT) === \"30\"\n    &&\n    String(record.REPORTING_TYP_ID) === \"KAU\"\n) {\n    console.log(4)\n    record.action = \"Do Responses to special Items Lead you question NAICS (GROUP_KEY) of Entire KAU\"\n    return msg;\n}\nelse {\n    console.log(5)\n    record.action = \"Go to: Classification\"\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 120,
        "wires": [
            [
                "ea157fd74ae00ecb",
                "02482c164222726b"
            ]
        ]
    },
    {
        "id": "ea157fd74ae00ecb",
        "type": "debug",
        "z": "5e1a962405c84d2b",
        "name": "Derive NAICS output",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 120,
        "wires": []
    },
    {
        "id": "02482c164222726b",
        "type": "link out",
        "z": "5e1a962405c84d2b",
        "name": "link out 15",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9"
        ],
        "x": 665,
        "y": 320,
        "wires": []
    },
    {
        "id": "523b46f795f0a997",
        "type": "ui_dropdown",
        "z": "dad88d9a3132fed6",
        "name": "select_modules",
        "label": "",
        "tooltip": "List of available modules",
        "place": "Select Option",
        "group": "96ded9aa7c8ec809",
        "order": 1,
        "width": "8",
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Balance Module",
                "value": "balance_module",
                "type": "str"
            },
            {
                "label": "BR Stat Evaluation",
                "value": "br_stat_evaluation",
                "type": "str"
            },
            {
                "label": "Derive NAICSCode",
                "value": "derive_NAICS_code",
                "type": "str"
            },
            {
                "label": "Classification",
                "value": "classification",
                "type": "str"
            },
            {
                "label": "Geography",
                "value": "geography",
                "type": "str"
            },
            {
                "label": "Calculate Best Admin Receipts",
                "value": "best_admin_receipts",
                "type": "str"
            },
            {
                "label": "Critical Error",
                "value": "critical_error",
                "type": "str"
            },
            {
                "label": "Completeness Check",
                "value": "completeness",
                "type": "str"
            },
            {
                "label": "NONNORM",
                "value": "nonnorm",
                "type": "str"
            },
            {
                "label": "Derived Items",
                "value": "derived",
                "type": "str"
            },
            {
                "label": "Logical Edit",
                "value": "logical",
                "type": "str"
            },
            {
                "label": "Post Edit",
                "value": "post_edit",
                "type": "str"
            },
            {
                "label": "Electric Energy Module",
                "value": "electric_energy_module",
                "type": "str"
            },
            {
                "label": "Electric Energy Module Cont",
                "value": "electric_energy_module_cont",
                "type": "str"
            },
            {
                "label": "Electric Impute Module",
                "value": "electric_impute_module",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 100,
        "y": 340,
        "wires": [
            [
                "38960acd0c73918d"
            ]
        ]
    },
    {
        "id": "0695b3dc79291692",
        "type": "switch",
        "z": "dad88d9a3132fed6",
        "name": "",
        "property": "payload.selectModule",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "balance_module",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "br_stat_evaluation",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "derive_NAICS_code",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "classification",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "geography",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "best_admin_receipts",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "critical_error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "completeness",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nonnorm",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "derived",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "logical",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "post_edit",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "electric_energy_module",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "electric_energy_module_cont",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "electric_impute_module",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 15,
        "x": 630,
        "y": 480,
        "wires": [
            [
                "7520a5a2d8404846"
            ],
            [
                "dc2a2ca809797dbd"
            ],
            [
                "a42aa429654aa772"
            ],
            [
                "f14b49f36a5b83fc"
            ],
            [
                "4a50e74e63590ec7"
            ],
            [
                "81f5d75ffbcd549e"
            ],
            [
                "b1540f3459d95049"
            ],
            [
                "32b24311da4a3220"
            ],
            [
                "cd8a05808eedb5f3"
            ],
            [
                "ff27924ce01b7894"
            ],
            [
                "3fd3586e01a6e2dc"
            ],
            [
                "1597f28db268d317"
            ],
            [
                "89e7e315b3a8c30b"
            ],
            [
                "ba5d5bdad0bc957e"
            ],
            [
                "8434c6c16c1fbaaf"
            ]
        ]
    },
    {
        "id": "7520a5a2d8404846",
        "type": "link out",
        "z": "dad88d9a3132fed6",
        "name": "link out to unit balance",
        "mode": "link",
        "links": [
            "d43d98523cecf095"
        ],
        "x": 845,
        "y": 320,
        "wires": []
    },
    {
        "id": "0f1620a9dfb42cf6",
        "type": "ui_button",
        "z": "dad88d9a3132fed6",
        "name": "",
        "group": "96ded9aa7c8ec809",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": true,
        "label": "Run Selected Module",
        "tooltip": "Run Module",
        "color": "blue",
        "bgcolor": "",
        "className": "",
        "icon": "send",
        "payload": "payload",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 120,
        "y": 480,
        "wires": [
            [
                "2197046546278bb4"
            ]
        ]
    },
    {
        "id": "dc2a2ca809797dbd",
        "type": "link out",
        "z": "dad88d9a3132fed6",
        "name": "link out br stat eval",
        "mode": "link",
        "links": [
            "3f936d74a59fd02d"
        ],
        "x": 845,
        "y": 360,
        "wires": []
    },
    {
        "id": "a42aa429654aa772",
        "type": "link out",
        "z": "dad88d9a3132fed6",
        "name": "link out derive naics",
        "mode": "link",
        "links": [
            "66d215a5540f842d",
            "95217c8ed8e79881"
        ],
        "x": 845,
        "y": 400,
        "wires": []
    },
    {
        "id": "38960acd0c73918d",
        "type": "change",
        "z": "dad88d9a3132fed6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "selectModule",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "version",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 340,
        "wires": [
            [
                "33c11d41bc54bd5d",
                "d629ef47b7e7edbe"
            ]
        ]
    },
    {
        "id": "8fc8da4acdeb51a4",
        "type": "link out",
        "z": "dad88d9a3132fed6",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "30c2b54a06202964",
            "617d768f3414b52e"
        ],
        "x": 1285,
        "y": 140,
        "wires": []
    },
    {
        "id": "33c11d41bc54bd5d",
        "type": "ui_template",
        "z": "dad88d9a3132fed6",
        "group": "22fec4fdabbf9dd8",
        "name": "",
        "order": 1,
        "width": 18,
        "height": 13,
        "format": "<div ng-switch=\"msg.payload\">\n\n        <div ng-switch-when=\"balance_module\">\n\n                <img src=\"https://aies-qflow-modules.s3.us-gov-east-1.amazonaws.com/balance_module.png?version={{msg.version}}\" style=\"max-width: 100%; height: auto;\">\n\n    </div>\n\n        <div ng-switch-when=\"br_stat_evaluation\">\n\n                <img src=\"https://aies-qflow-modules.s3.us-gov-east-1.amazonaws.com/br_stat.png?version={{msg.version}}\" style=\"max-width: 100%; height: auto;\">\n\n    </div>\n\n    <div ng-switch-when=\"critical_error\">\n                <img src=\"https://aies-qflow-modules.s3.us-gov-east-1.amazonaws.com/critical_error.png?version={{msg.version}}\" style=\"max-width: 100%; height: auto;\">\n    </div>\n\n        <div ng-switch-when=\"derive_NAICS_code\">\n\n             <img src=\"https://aies-qflow-modules.s3.us-gov-east-1.amazonaws.com/derive_naics_code.png?version={{msg.version}}\" style=\"max-width: 100%; height: auto;\">\n\n    </div>\n\n    <div ng-switch-when=\"classification\">\n             <img src=\"https://aies-qflow-modules.s3.us-gov-east-1.amazonaws.com/classification.png?version={{msg.version}}\" style=\"max-width: 100%; height: auto;\">\n    </div>\n    <div ng-switch-when=\"geography\">\n             <img src=\"https://aies-qflow-modules.s3.us-gov-east-1.amazonaws.com/geography.png?version={{msg.version}}\" style=\"max-width: 100%; height: auto;\">\n     </div>\n    <div ng-switch-when=\"electric_energy_module\">\n             <img src=\"https://aies-qflow-modules.s3.us-gov-east-1.amazonaws.com/electric_energy_module.png?version={{msg.version}}\" style=\"max-width: 100%; height: auto;\">\n    </div>\n    <div ng-switch-when=\"electric_energy_module_cont\">\n             <img src=\"https://aies-qflow-modules.s3.us-gov-east-1.amazonaws.com/electric_energy_module_cont.png?version={{msg.version}}\" style=\"max-width: 100%; height: auto;\">\n    </div>\n    <div ng-switch-when=\"electric_impute_module\">\n             <img src=\"https://aies-qflow-modules.s3.us-gov-east-1.amazonaws.com/electric_impute_module.png?version={{msg.version}}\" style=\"max-width: 100%; height: auto;\">\n    </div>\n    <div ng-switch-default>\n        <img src=\"https://aies-qflow-modules.s3.us-gov-east-1.amazonaws.com/Set_NONNORM.png?version={{msg.version}}\" style=\"max-width: 100%; height: auto;\">\n    </div>\n\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 480,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "f14b49f36a5b83fc",
        "type": "link out",
        "z": "dad88d9a3132fed6",
        "name": "link out classification",
        "mode": "link",
        "links": [
            "d9650115f85479a9",
            "af33a10fa21c5083"
        ],
        "x": 845,
        "y": 440,
        "wires": []
    },
    {
        "id": "4a50e74e63590ec7",
        "type": "link out",
        "z": "dad88d9a3132fed6",
        "name": "link out geography",
        "mode": "link",
        "links": [
            "57c75bd58af75621"
        ],
        "x": 845,
        "y": 480,
        "wires": []
    },
    {
        "id": "81f5d75ffbcd549e",
        "type": "link out",
        "z": "dad88d9a3132fed6",
        "name": "link out Best Admin Receipts",
        "mode": "link",
        "links": [
            "2eee0041d9d93424"
        ],
        "x": 845,
        "y": 520,
        "wires": []
    },
    {
        "id": "b1540f3459d95049",
        "type": "link out",
        "z": "dad88d9a3132fed6",
        "name": "link out critical error",
        "mode": "link",
        "links": [
            "8feba05e91ff48f3"
        ],
        "x": 845,
        "y": 560,
        "wires": []
    },
    {
        "id": "32b24311da4a3220",
        "type": "link out",
        "z": "dad88d9a3132fed6",
        "name": "link out completeness",
        "mode": "link",
        "links": [
            "49b8c4d94cef7ff7",
            "ef4348f935cbb1ca"
        ],
        "x": 845,
        "y": 600,
        "wires": []
    },
    {
        "id": "cd8a05808eedb5f3",
        "type": "link out",
        "z": "dad88d9a3132fed6",
        "name": "link out nonnorm",
        "mode": "link",
        "links": [
            "8807ce2046dc8a32"
        ],
        "x": 845,
        "y": 640,
        "wires": []
    },
    {
        "id": "ff27924ce01b7894",
        "type": "link out",
        "z": "dad88d9a3132fed6",
        "name": "link out derived items",
        "mode": "link",
        "links": [
            "7a7af6643c8cdc10"
        ],
        "x": 845,
        "y": 680,
        "wires": []
    },
    {
        "id": "3fd3586e01a6e2dc",
        "type": "link out",
        "z": "dad88d9a3132fed6",
        "name": "link out logical edits",
        "mode": "link",
        "links": [
            "6a660fccf443bde2"
        ],
        "x": 845,
        "y": 720,
        "wires": []
    },
    {
        "id": "1597f28db268d317",
        "type": "link out",
        "z": "dad88d9a3132fed6",
        "name": "link out post edit",
        "mode": "link",
        "links": [
            "60a8272cfde55a5e"
        ],
        "x": 845,
        "y": 760,
        "wires": []
    },
    {
        "id": "2197046546278bb4",
        "type": "function",
        "z": "dad88d9a3132fed6",
        "name": "function 28",
        "func": "msg.payload = {\n    selectModule: flow.get('selectedModule'),\n    csv: global.get('moduleFacts')\n}\nmsg.topic = 'runModule'\nmsg.complete = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 480,
        "wires": [
            [
                "0695b3dc79291692"
            ]
        ]
    },
    {
        "id": "d629ef47b7e7edbe",
        "type": "function",
        "z": "dad88d9a3132fed6",
        "name": "Set selectModule To flow ctx",
        "func": "flow.set('selectedModule', msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "12c94ce38056fc20",
        "type": "ui_text_input",
        "z": "dad88d9a3132fed6",
        "g": "302cb8040ecade52",
        "name": "File Name",
        "label": "Facts",
        "tooltip": "Enter the location of the parameters file",
        "group": "a5b67787a0857995",
        "order": 1,
        "width": 8,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": "0",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "a47c991027033263"
            ]
        ]
    },
    {
        "id": "499c2706ea3d919f",
        "type": "file in",
        "z": "dad88d9a3132fed6",
        "name": "Read File",
        "filename": "payload",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 580,
        "y": 280,
        "wires": [
            [
                "d9f955651664d4a8"
            ]
        ]
    },
    {
        "id": "d9f955651664d4a8",
        "type": "csv",
        "z": "dad88d9a3132fed6",
        "name": "",
        "sep": ",",
        "hdrin": true,
        "hdrout": "none",
        "multi": "mult",
        "ret": "\\r\\n",
        "temp": "",
        "skip": "0",
        "strings": false,
        "include_empty_strings": false,
        "include_null_values": false,
        "x": 710,
        "y": 260,
        "wires": [
            [
                "792badd055e46ded",
                "afcd91a3ce9153ef"
            ]
        ]
    },
    {
        "id": "792badd055e46ded",
        "type": "function",
        "z": "dad88d9a3132fed6",
        "name": "keysToUpperCase",
        "func": "function keysToUpperCase(obj) {\n    const output = {};\n    for (let key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n            if (typeof obj[key] === 'object' && obj[key] !== null) {\n                output[key.toUpperCase()] = keysToUpperCase(obj[key]);\n            } else {\n                output[key.toUpperCase()] = obj[key];\n            }\n        }\n    }\n    return output;\n}\n\nlet p = msg.payload.map(keysToUpperCase);\nmsg.payload = p\n\nlet ptr = global.get(\"ptrModuleFacts\"); //HF\n\nflow.set('moduleFacts', p)\nglobal.set('moduleFacts', p)\nglobal.set('originalData', p[ptr]) //HF\n// global.set('originalData', p[0]) //NK\nmsg.topic = 'csv'\nmsg.ui_control = {\n    max: p.length // Assuming msg.payload contains the row count\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 200,
        "wires": [
            [
                "8fc8da4acdeb51a4",
                "8ff713c60410aa36"
            ]
        ]
    },
    {
        "id": "ca8be9e1afb53866",
        "type": "link in",
        "z": "dad88d9a3132fed6",
        "name": "link in 37",
        "links": [
            "60931347e15bc805"
        ],
        "x": 705,
        "y": 140,
        "wires": [
            [
                "792badd055e46ded"
            ]
        ]
    },
    {
        "id": "5f62bf825c6c1132",
        "type": "function",
        "z": "dad88d9a3132fed6",
        "name": "nullify moduleFacts and originalData",
        "func": "flow.set(\"moduleFacts\", [])\nflow.set(\"originalData\", [])\n//NK initialize global context\nglobal.set(\"originalData\", [])\nglobal.set(\"moduleFacts\", [])\nglobal.set(\"ptrModuleFacts\",0)\n\n\n// // Reset flow context variables\n// flow.keys().forEach(function (key) {\n//     flow.context().set(key, undefined);\n// });\n\n// // Reset global context variables\n// global.keys().forEach(function (key) {\n//     global.context().set(key, undefined);\n// });\n\n\n\n\nif(global.get(\"filename\")){\n    // msg.filename = global.get(\"filename\")\n    msg.payload = global.get(\"filename\")\n    return msg\n}\nelse return null;\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 260,
        "wires": [
            [
                "499c2706ea3d919f",
                "40d9b466bfb45d06"
            ]
        ]
    },
    {
        "id": "a47c991027033263",
        "type": "function",
        "z": "dad88d9a3132fed6",
        "g": "302cb8040ecade52",
        "name": "Set FileName",
        "func": "global.set(\"filename\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "aee5640ceffb474d",
        "type": "ui_text",
        "z": "dad88d9a3132fed6",
        "group": "1d1a43b7179c848f",
        "order": 3,
        "width": 8,
        "height": 1,
        "name": "Show Count",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 1370,
        "y": 320,
        "wires": []
    },
    {
        "id": "8ff713c60410aa36",
        "type": "function",
        "z": "dad88d9a3132fed6",
        "name": "Get counts",
        "func": "let p = msg.payload.length\nmsg.payload = p \nmsg.ui_control = {\n    max: p// Assuming msg.payload contains the row count\n};\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 260,
        "wires": [
            [
                "aee5640ceffb474d",
                "3c92b89522e322f8"
            ]
        ]
    },
    {
        "id": "3c92b89522e322f8",
        "type": "ui_numeric",
        "z": "dad88d9a3132fed6",
        "name": "",
        "label": "Select Record",
        "tooltip": "",
        "group": "1d1a43b7179c848f",
        "order": 1,
        "width": 4,
        "height": 1,
        "wrap": true,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": "1",
        "max": "",
        "step": 1,
        "className": "",
        "x": 860,
        "y": 80,
        "wires": [
            [
                "251d88e5cb4a68cb"
            ]
        ]
    },
    {
        "id": "251d88e5cb4a68cb",
        "type": "function",
        "z": "dad88d9a3132fed6",
        "name": "Select ptr in csv file",
        "func": "// Get the pointer from the ui which record in the csv is selected\n// set the value of the ptr to the count from the ui\nlet ptr = msg.payload - 1\nglobal.set(\"ptrModuleFacts\", ptr)\nmsg.payload = global.get(\"moduleFacts\")\nglobal.set('originalData', msg.payload[ptr])\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 80,
        "wires": [
            [
                "8fc8da4acdeb51a4"
            ]
        ]
    },
    {
        "id": "7992553925c479af",
        "type": "ui_button",
        "z": "dad88d9a3132fed6",
        "name": "Load CSV",
        "group": "a5b67787a0857995",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Load CSV",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 80,
        "y": 260,
        "wires": [
            [
                "5f62bf825c6c1132"
            ]
        ]
    },
    {
        "id": "7c30fb48.99cd2c",
        "type": "http in",
        "z": "dad88d9a3132fed6",
        "g": "4099bf03141f3710",
        "name": "",
        "url": "/upload_page",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 700,
        "wires": [
            [
                "3153fbd3.203a64"
            ]
        ]
    },
    {
        "id": "3153fbd3.203a64",
        "type": "template",
        "z": "dad88d9a3132fed6",
        "g": "4099bf03141f3710",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Upload CSV File</title>\n    <!-- Include Materialize CSS and JS -->\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\">\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js\"></script>\n</head>\n<body>\n  <nav>\n    <div class=\"blue nav-wrapper\">\n      <a href=\"#\" data-target=\"mobile-demo\" class=\"sidenav-trigger\"><i class=\"material-icons\">menu</i></a>\n      <ul class=\"left hide-on-med-and-down\">\n        <li><a class=\"bold\" href=\"/update_params\">Params</a></li>\n        <li><a class=\"bold\" href=\"/upload_page\">Upload csv</a></li>\n        <li><a class=\"bold\" href=\"/ui_wrapper\">UI</a></li>\n      </ul>\n    </div>\n  </nav>\n\n  <ul class=\"blue sidenav\" id=\"mobile-demo\">\n      <li><a class=\"bold\" href=\"/update_params\">Params</a></li>\n        <li><a class=\"bold\" href=\"/upload_page\">Upload csv</a></li>\n        <li><a class=\"bold\" href=\"/ui_wrapper\">UI</a></li>\n  </ul>\n<div class=\"container\">\n    <h1 class=\"center-align\">Upload CSV File</h1>\n    \n    <div class=\"row\">\n        <form action=\"/upload\" method=\"POST\" enctype=\"multipart/form-data\" class=\"col s12\">\n            <div class=\"file-field input-field\">\n                <div class=\"btn\">\n                    <span>File</span>\n                    <input type=\"file\" name=\"myFile\">\n                </div>\n                <div class=\"file-path-wrapper\">\n                    <input class=\"file-path validate\" type=\"text\" placeholder=\"Upload a CSV file\">\n                </div>\n            </div>\n            <div class=\"input-field center-align\">\n                <button onclick=\"showToast()\" class=\"btn waves-effect waves-light\" type=\"submit\">Submit\n                    <i class=\"material-icons right\">send</i>\n                </button>\n            </div>\n        </form>\n    </div>\n</div>\n\n<!-- Initialize Materialize Components -->\n<script>\n    M.AutoInit();\n    function showToast() {\n        M.toast({html: 'Uploading...'});\n    }\n</script>\n\n</body>\n</html>\n",
        "output": "str",
        "x": 450,
        "y": 700,
        "wires": [
            [
                "737e44d2.373a64"
            ]
        ]
    },
    {
        "id": "737e44d2.373a64",
        "type": "http response",
        "z": "dad88d9a3132fed6",
        "g": "4099bf03141f3710",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 590,
        "y": 700,
        "wires": []
    },
    {
        "id": "46e01eea.4a46a",
        "type": "comment",
        "z": "dad88d9a3132fed6",
        "g": "4099bf03141f3710",
        "name": "Simple upload a file",
        "info": "",
        "x": 130,
        "y": 660,
        "wires": []
    },
    {
        "id": "7d8e179a.283e4",
        "type": "http response",
        "z": "dad88d9a3132fed6",
        "g": "4099bf03141f3710",
        "name": "",
        "x": 910,
        "y": 1280,
        "wires": []
    },
    {
        "id": "25859a94.7d9976",
        "type": "http in",
        "z": "dad88d9a3132fed6",
        "g": "4099bf03141f3710",
        "name": "",
        "url": "/upload",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 110,
        "y": 760,
        "wires": [
            [
                "d7e5df8b.97a4e8"
            ]
        ]
    },
    {
        "id": "e1643981.20d7c8",
        "type": "template",
        "z": "dad88d9a3132fed6",
        "g": "4099bf03141f3710",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Upload CSV File</title>\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\">\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js\"></script>\n    <style>\n        /* Add custom styles for responsiveness */\n         .table-container {\n            width: 95%;\n            overflow-x: auto;\n            margin: 2%;\n        }\n        table {\n            width: 100%;\n            border-collapse: collapse;\n        }\n\n        th, td {\n            border: 1px solid #dddddd;\n            text-align: left;\n            padding: 8px;\n        }\n\n        tr:nth-child(even) {\n            background-color: #f2f2f2;\n        }\n    </style>\n</head>\n<body>\n<nav>\n    <div class=\"blue nav-wrapper\">\n      <a href=\"#\" data-target=\"mobile-demo\" class=\"sidenav-trigger\"><i class=\"material-icons\">menu</i></a>\n      <ul class=\"left hide-on-med-and-down\">\n        <li><a class=\"bold\" href=\"/update_params\">Params</a></li>\n        <li><a class=\"bold\" href=\"/upload_page\">Upload csv</a></li>\n        <li><a class=\"bold\" href=\"/ui_wrapper\">UI</a></li>\n      </ul>\n    </div>\n  </nav>\n\n  <ul class=\"blue sidenav\" id=\"mobile-demo\">\n      <li><a class=\"bold\" href=\"/update_params\">Params</a></li>\n        <li><a class=\"bold\" href=\"/upload_page\">Upload csv</a></li>\n        <li><a class=\"bold\" href=\"/ui_wrapper\">UI</a></li>\n  </ul>\n\n  <div class=\"container\">\n    {{!-- <h1 class=\"center-align\">Uploaded</h1> --}}\n  </div>\n  <div id=\"hide_this_to_load\">{{payload}}</div>\n    <div class=\"table-container\">\n  <div id=\"load_table\"></div>\n  </div>\n  <p id=\"file_name\">{{name}}</p>\n    <div class=\"input-field center-align\">\n    <button onclick='saveCsv()' class=\"btn waves-effect waves-light\" type=\"submit\">Save\n    </button>\n     <a href='/ui_wrapper' class=\"btn waves-effect waves-light\" type=\"submit\">Go {{msg.filename}}\n    </a>\n  </div>\n<script>\n  let data = document.getElementById('hide_this_to_load').innerHTML\n  let file_name = document.getElementById('file_name').innerHTML\n  document.getElementById('hide_this_to_load').style.display = 'none';\n  document.getElementById('file_name').style.display = 'none';\n  data = JSON.parse(data);\n  let headers; \n  document.addEventListener('DOMContentLoaded', function() {\n    const loadTableDiv = document.getElementById('load_table');\n    const table = document.createElement('table');\n    table.classList.add('striped');\n    const tableHeader = document.createElement('thead');\n    const headerRow = document.createElement('tr');\n    headers = Object.keys(data[0]); // Set headers here\n    headers.forEach(headerText => {\n      const th = document.createElement('th');\n      th.textContent = headerText;\n      headerRow.appendChild(th);\n    });\n    tableHeader.appendChild(headerRow);\n    table.appendChild(tableHeader);\n    const tableBody = document.createElement('tbody');\n    data.forEach((item, index) => {\n      const row = document.createElement('tr');\n      headers.forEach(header => {\n        const cell = document.createElement('td');\n        if (index !== 0) { // Make fields editable for all rows except the header row\n          const input = document.createElement('input');\n          input.value = item[header];\n          input.addEventListener('input', function() {\n            item[header] = this.value;\n            const updatedJData = getUpdatedData();\n            // console.log(updatedJData);\n          });\n          cell.appendChild(input);\n        } else {\n          cell.textContent = item[header];\n        }\n        row.appendChild(cell);\n      });\n      tableBody.appendChild(row);\n    });\n    table.appendChild(tableBody);\n    loadTableDiv.appendChild(table);\n  });\n\n  function getUpdatedData() {\n    const updatedData = [];\n    const rows = document.querySelectorAll('#load_table tbody tr');\n    rows.forEach(row => {\n      const rowData = {};\n      const cells = row.querySelectorAll('td');\n      cells.forEach((cell, index) => {\n        const header = headers[index];\n        if (header) {\n          rowData[header] = cell.firstChild.value || cell.textContent;\n        }\n      });\n      updatedData.push(rowData);\n    });\n    return updatedData;\n  }\n  const jsonToCSV = (jsonArray) => {\n    const headers = Object.keys(jsonArray[0]);\n\n    let csv = headers.join(',') + '\\n';\n\n    jsonArray.forEach(obj => {\n        const values = headers.map(header => {\n            const escapedValue = obj[header].replace(/\"/g, '\\\\\"');\n            return `\"${escapedValue}\"`;\n        });\n        csv += values.join(',') + '\\n';\n    });\n\n    return csv;\n};\n\n  function saveCsv(){\n     fetch('/saveCsv', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({filename: file_name, csvData:jsonToCSV(getUpdatedData())})\n    })\n    .then(response => {\n      if (response.ok) {\n        console.log('Update successful!');\n      } else {\n        console.error('Error updating params:', response.status);\n      }\n    })\n    .catch(error => {\n      console.error('Error:', error);\n    });\n  }\n</script>\n\n\n</body>\n</html>\n",
        "output": "str",
        "x": 670,
        "y": 1280,
        "wires": [
            [
                "7d8e179a.283e4"
            ]
        ]
    },
    {
        "id": "d7e5df8b.97a4e8",
        "type": "function",
        "z": "dad88d9a3132fed6",
        "g": "4099bf03141f3710",
        "name": "toBase64",
        "func": "msg.name = '/tmp/'+ msg.req.files[0].originalname;\nmsg.filename = msg.name;\n\nif (msg.req.files[0].mimetype.includes('image')) {\n    msg.payload = `<img src=\"data:image/gif;base64,${msg.req.files[0].buffer.toString('base64')}\">`;\n} else {\n    msg.payload = msg.req.files[0].buffer.toString();\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 760,
        "wires": [
            [
                "0464e4eb98976890",
                "81e3239593f9f1d1",
                "ea0778e9f5cd9498"
            ]
        ]
    },
    {
        "id": "0464e4eb98976890",
        "type": "file",
        "z": "dad88d9a3132fed6",
        "g": "4099bf03141f3710",
        "name": "Write to /tmp on server",
        "filename": "filename",
        "filenameType": "msg",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 510,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "f5d8125e5f3946e2",
        "type": "ui_button",
        "z": "dad88d9a3132fed6",
        "d": true,
        "name": "Reset",
        "group": "a5b67787a0857995",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 160,
        "wires": [
            [
                "9c2c34ae702579a8"
            ]
        ]
    },
    {
        "id": "9c2c34ae702579a8",
        "type": "function",
        "z": "dad88d9a3132fed6",
        "d": true,
        "name": "Reset all flow and global keys",
        "func": "// flow.set(\"moduleFacts\", [])\n// flow.set(\"originalData\", [])\n// //NK initialize global context\n// global.set(\"originalData\", [])\n// global.set(\"moduleFacts\", [])\n// global.set(\"ptrModuleFacts\",0)\n\n// global.set('filename', null)\n// // if(global.get(\"filename\")){\n// //     // msg.filename = global.get(\"filename\")\n// //     msg.payload = global.get(\"filename\")\n// //     return msg\n// // }\n// // else \n// msg.payload = null\n\n// Reset flow context variables\nflow.context().keys().forEach(function (key) {\n    flow.context().set(key, undefined);\n});\n\n// Reset global context variables\nglobal.context().keys().forEach(function (key) {\n    global.context().set(key, undefined);\n});\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "afcd91a3ce9153ef",
        "type": "debug",
        "z": "dad88d9a3132fed6",
        "name": "debug 94",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 380,
        "wires": []
    },
    {
        "id": "bf95042aa95f74b7",
        "type": "catch",
        "z": "dad88d9a3132fed6",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 150,
        "y": 940,
        "wires": [
            [
                "67218bea97f26dc5"
            ]
        ]
    },
    {
        "id": "67218bea97f26dc5",
        "type": "function",
        "z": "dad88d9a3132fed6",
        "name": "error message",
        "func": "msg.payload = msg.error.message\nglobal.set(\"ptrModuleFacts\",1)\n\nflow.set(\"moduleFacts\", [])\nflow.set(\"originalData\", [])\n//NK initialize global context\nglobal.set(\"originalData\", [])\nglobal.set(\"moduleFacts\", [])\nglobal.set(\"ptrModuleFacts\", 0)\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 960,
        "wires": [
            [
                "4345bc983bdc5ee2",
                "c7b88789c4731ee4"
            ]
        ]
    },
    {
        "id": "4345bc983bdc5ee2",
        "type": "ui_toast",
        "z": "dad88d9a3132fed6",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 600,
        "y": 1000,
        "wires": []
    },
    {
        "id": "c7b88789c4731ee4",
        "type": "function",
        "z": "dad88d9a3132fed6",
        "name": "Reset counters",
        "func": "msg.ui_control = {\n    max: 1// Assuming msg.payload contains the row count\n};\n\nflow.set('moduleFacts', [])\nglobal.set('moduleFacts', [])\n\nglobal.set(\"ptrModuleFacts\", 1)\nglobal.set(\"originalData\", {})\n\n\nmsg.payload = 1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 920,
        "wires": [
            [
                "3c92b89522e322f8",
                "aee5640ceffb474d"
            ]
        ]
    },
    {
        "id": "81e3239593f9f1d1",
        "type": "function",
        "z": "dad88d9a3132fed6",
        "g": "4099bf03141f3710",
        "name": "getFileName in payload",
        "func": "msg.payload=msg.filename\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 860,
        "wires": [
            [
                "12c94ce38056fc20"
            ]
        ]
    },
    {
        "id": "2b5207ce5d20fc0a",
        "type": "comment",
        "z": "dad88d9a3132fed6",
        "name": "Simple upload a file",
        "info": "",
        "x": 990,
        "y": 820,
        "wires": []
    },
    {
        "id": "903ab3bdc5e84545",
        "type": "http in",
        "z": "dad88d9a3132fed6",
        "name": "",
        "url": "/update_params",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1000,
        "y": 860,
        "wires": [
            [
                "399608507ce305d7"
            ]
        ]
    },
    {
        "id": "26d5116b6bd90d58",
        "type": "template",
        "z": "dad88d9a3132fed6",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Update Params</title>\n   <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/7.0.4/jsoneditor.css\" >\n   <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/7.0.4/jsoneditor.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.4/lodash.min.js\"></script>    \n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js\"></script>\n</head>\n  <style>\n  #jsoneditor {\n    max-width: 100%;\n    height: auto;\n  }\n  p {\n    max-width: 100%;\n    font-family: \"DejaVu Sans\", sans-serif;\n  }\n  .preload {\n    display: none;\n  }\n\n  @media screen and (max-width: 600px) {\n    #jsoneditor, p {\n      width: 100%;\n    }\n  }\n  .custom-border {\n  border: 1px solid #00F; /* Dark border color */\n}\n</style>\n\n<body>\n  <nav>\n    <div class=\"blue nav-wrapper\">\n      <a href=\"#\" data-target=\"mobile-demo\" class=\"sidenav-trigger\"><i class=\"material-icons\">menu</i></a>\n      <ul class=\"left hide-on-med-and-down\">\n        <li><a class=\"bold\" href=\"/update_params\">Params</a></li>\n        <li><a class=\"bold\" href=\"/upload_page\">Upload csv</a></li>\n        <li><a class=\"bold\" href=\"/ui_wrapper\">UI</a></li>\n      </ul>\n    </div>\n  </nav>\n\n  <ul class=\"blue sidenav\" id=\"mobile-demo\">\n      <li><a class=\"bold\" href=\"/update_params\">Params</a></li>\n        <li><a class=\"bold\" href=\"/upload_page\">Upload csv</a></li>\n        <li><a class=\"bold\" href=\"/ui_wrapper\">UI</a></li>\n  </ul>\n\n<div class=\"container\">\n    <h1 class=\"center-align\">Update Params</h1>\n      <select class=\"browser-default custom-border\">\n        <option value=\"\" disabled selected>Choose your option</option>\n    </select>\n    <br>\n      <div id=\"jsoneditor\"></div>\n      <div class=\"preload\" id=\"preload\">{{payload.payload}}</div>\n    <div class=\"row\">\n        <form action=\"/update_params\" method=\"GET\" enctype=\"multipart/form-data\" class=\"col s12\">\n            <div class=\"input-field center-align\">\n                <button class=\"btn waves-effect waves-light\" type=\"submit\">Update\n                </button>\n            </div>\n        </form>\n    </div>\n</div>\n\n<!-- Initialize Materialize Components -->\n<script>\n    M.AutoInit();\n    var elems = document.querySelectorAll('.sidenav');\n    var instances = M.Sidenav.init(elems);\n</script>\n\n</body>\n<script>\n  const container = document.getElementById(\"jsoneditor\");\n\nconst options = {\n  mode: \"tree\",\n  modes: [\"text\", \"tree\", \"view\", \"preview\"],\n  expandAll: true,\n  // example editable\n  onEditable: function(node) {\n    // node is an object like:\n    //   {\n    //     field: 'FIELD',\n    //     value: 'VALUE',\n    //     path: ['PATH', 'TO', 'NODE']\n    //   }\n    switch (node.field) {\n      case \"_id\":\n        return false;\n\n      case \"name\":\n        return {\n          field: false,\n          value: true\n        };\n\n      default:\n        return true;\n    }\n  },\n  //   on event example\n  onError: function(err) {\n    alert(err.toString());\n  },\n  onEvent: function(node, event) {\n    if (event.type === \"click\") {\n      let message = \"field: \" + node.field + \" | path: \" + node.path;\n      if (node.value) {\n        message += \" | value: \" + node.value;\n      }\n      console.log(message);\n      // console.log(node, event);\n      //       update json field position\n      const my_clipboard = \"{ x: -3755.9812, y: 140.43, z: -3287.19 }\";\n      let my_room;\n      let my_item;\n      let x_pos = 0.0;\n      let y_pos = 0.0;\n      let z_pos = 0.0;\n      let i_count = 1;\n      if (node.field === \"position\") {\n        // get x coordinate\n        const regex = /(?<=x:\\s{0,})(?<x_pos>\\-{0,1}\\d{0,}\\.{0,1}\\d{0,})|(?<=y:\\s{0,})(?<y_pos>\\-{0,1}\\d{0,}\\.{0,1}\\d{0,})|(?<=z:\\s{0,})(?<z_pos>\\-{0,1}\\d{0,}\\.{0,1}\\d{0,})/gm;\n        const str = my_clipboard;\n        let m;\n        // m = regex.exec(str);\n        // console.log('m:', m);\n        // todo? check if it is a string with coordinates x_pos is found\n\n        // // x_pos = parseFloat(m[2], 10);\n        // x_pos = Number(m[2]);\n        // console.log('regex:', m[0], '-', m[1], '-', m[2]);\n        // console.log('x_pos:', m.x_pos);\n\n                while ((m = regex.exec(str)) !== null) {\n                  // This is necessary to avoid infinite loops with zero-width matches\n                  console.log('i_count:', i_count, '|group 0:', m[0] );\n                  switch (i_count) {\n                    case 2:\n                      x_pos = Number(m[0]);\n                      console.log('x_pos:', x_pos);\n                      break;\n                    case 4:\n                      y_pos = Number(m[0]);\n                      break;\n                    case 6:\n                      z_pos = Number(m[0]);\n                      break;\n                  }\n                  if (m.index === regex.lastIndex) {\n                    regex.lastIndex++;\n                  }\n\n                  // The result can be accessed through the `m`-variable.\n                  m.forEach((match, groupIndex) => {\n                    console.log(`Found match, group ${groupIndex}: ${match}`);\n                  });\n                  i_count++;\n                };\n\n        my_room = node.path[1];\n        my_item = node.path[3];\n        console.log(\"node.path[3]: \", node.path[3]);\n        json[\"rooms\"][my_room][\"items\"][my_item][\"position\"][\"x\"] = x_pos;\n        json[\"rooms\"][my_room][\"items\"][my_item][\"position\"][\"y\"] = y_pos;\n        json[\"rooms\"][my_room][\"items\"][my_item][\"position\"][\"z\"] = z_pos;\n        console.log({json})\n        editor.update(json);\n        editor.getEditor('root.id').disable();\n        console.log(editor)\n      }\n    }\n\n    function prettyPrintPath(path) {\n      let str = \"\";\n      for (let i = 0; i < path.length; i++) {\n        const element = path[i];\n        if (typeof element === \"number\") {\n          str += \"[\" + element + \"]\";\n        } else {\n          if (str.length > 0) str += \",\";\n          str += element;\n        }\n      }\n      return str;\n    }\n  }\n};\nconst j = document.getElementById(\"preload\").innerHTML;\nconst parsedJson = JSON.parse(j)\n\nconst selectElement = document.querySelector('.browser-default');\n\nconst selectOptions = parsedJson.params.map(i=> {\n  return { value: i.id, text: i.module + ' - ' + i.param }\n})\n\nselectOptions.forEach(option => {\n    const optionElement = document.createElement('option');\n    optionElement.value = option.value;\n    optionElement.text = option.text;\n    optionElement.disabled = option.disabled;\n    optionElement.selected = option.selected;\n    selectElement.appendChild(optionElement);\n});\nlet editor = new JSONEditor(container, options, {})\nlet selectedValue\nselectElement.addEventListener('change', function() {\n    selectedValue = this.value;\n    // editor = new JSONEditor(container, options, parsedJson?.params.find(i => i.id == selectedValue));\n    //  let dataToUpdate = parsedJson?.params.find(i => i => i.id == selectedValue)\n    // console.log({selectedValue, parsedJson, dataToUpdate: parsedJson?.params.find(i => i => i.id == selectedValue)});\n    //  console.log({\n    //   id: dataToUpdate.id,\n    //   json_values: dataToUpdate.json_values,\n    //   values: dataToUpdate.values\n    //  })\n      console.log(parsedJson?.params.map(i => {\n        if(i.id == selectedValue){\n          return i\n        }else{\n          return null;\n        }\n      }).filter(Boolean)[0])\n     editor.update(parsedJson?.params.map(i => {\n        if(i.id == selectedValue){\n          return {\n            json_values: i.json_values,\n            values: i.values,\n            // id: i.id\n          }\n        }else{\n          return null;\n        }\n      }).filter(Boolean)[0])\n      editor.getEditor('root.id').disable();\n     });\n// });\n// editor = new JSONEditor(container, options, {\n//     json_values: parsedJson.json_values,\n//     values: parsedJson.values\n// });\n  document.querySelector('form').addEventListener('submit', function(e) {\n    e.preventDefault();\n    const updatedJson = editor.get(); \n    console.log(updatedJson); \n      fetch('http://ec2-18-252-7-95.us-gov-east-1.compute.amazonaws.com/api/params/' + selectedValue, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({updatedValues:updatedJson})\n    })\n    .then(response => {\n      if (response.ok) {\n        console.log('Update successful!');\n      } else {\n        console.error('Error updating params:', response.status);\n      }\n    })\n    .catch(error => {\n      console.error('Error:', error);\n    });\n  });\n  // });\n\n  </script>\n</html>",
        "output": "str",
        "x": 1310,
        "y": 1020,
        "wires": [
            [
                "eec857548bfbe6b5"
            ]
        ]
    },
    {
        "id": "eec857548bfbe6b5",
        "type": "http response",
        "z": "dad88d9a3132fed6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1450,
        "y": 860,
        "wires": []
    },
    {
        "id": "193adf68b854c196",
        "type": "http request",
        "z": "dad88d9a3132fed6",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://ec2-18-252-7-95.us-gov-east-1.compute.amazonaws.com/api/params?module=classification&params=naics_alt,naics_validation&program=aies&unit_type=estab",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1210,
        "y": 760,
        "wires": [
            [
                "2fd70cb03d1b3cb7"
            ]
        ]
    },
    {
        "id": "c27697412c990cc3",
        "type": "debug",
        "z": "dad88d9a3132fed6",
        "name": "debug 98",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1520,
        "y": 700,
        "wires": []
    },
    {
        "id": "2fd70cb03d1b3cb7",
        "type": "function",
        "z": "dad88d9a3132fed6",
        "name": "function 29",
        "func": "msg.payload.payload = JSON.stringify({\n    values: msg.payload.data[0].values,\n    json_values: msg.payload.data[0].json_values,\n    id: msg.payload.data[0].id\n});\n// msg.payload.payload = JSON.stringify(msg.payload.data[0].json_values);\n// msg.payload.id = JSON.stringify(msg.payload.data[0].id);\n// msg.payload.values = JSON.stringify({\n//     values: msg.payload.data[0].values,\n//     json_values: msg.payload.data[0].json_values\n// });\n\n// msg.payload = msg.payload.data[0].json_values;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 800,
        "wires": [
            [
                "c27697412c990cc3",
                "23ffb00caa077b23"
            ]
        ]
    },
    {
        "id": "399608507ce305d7",
        "type": "http request",
        "z": "dad88d9a3132fed6",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://ec2-18-252-7-95.us-gov-east-1.compute.amazonaws.com/api/params/params",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 990,
        "y": 940,
        "wires": [
            [
                "6f78481c2e90771f",
                "62a7ab56c461f544"
            ]
        ]
    },
    {
        "id": "6f78481c2e90771f",
        "type": "debug",
        "z": "dad88d9a3132fed6",
        "name": "debug 99",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 960,
        "wires": []
    },
    {
        "id": "65738b3d68734570",
        "type": "http in",
        "z": "dad88d9a3132fed6",
        "name": "",
        "url": "/ui_wrapper",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 980,
        "y": 1200,
        "wires": [
            [
                "ea0778e9f5cd9498"
            ]
        ]
    },
    {
        "id": "62a7ab56c461f544",
        "type": "function",
        "z": "dad88d9a3132fed6",
        "name": "function 30",
        "func": "msg.payload.payload = JSON.stringify({params: msg.payload.data});\n// msg.payload.payload = JSON.stringify(msg.payload.data[0].json_values);\n// msg.payload.id = JSON.stringify(msg.payload.data[0].id);\n// msg.payload.values = JSON.stringify({\n//     values: msg.payload.data[0].values,\n//     json_values: msg.payload.data[0].json_values\n// });\n\n// msg.payload = msg.payload.data[0].json_values;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1080,
        "wires": [
            [
                "26d5116b6bd90d58"
            ]
        ]
    },
    {
        "id": "23ffb00caa077b23",
        "type": "template",
        "z": "dad88d9a3132fed6",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Update Params</title>\n   <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/7.0.4/jsoneditor.css\" >\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/7.0.4/jsoneditor.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.4/lodash.min.js\"></script>    \n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js\"></script>\n</head>\n  <style>\n  #jsoneditor {\n    max-width: 100%;\n    height: auto;\n  }\n  p {\n    max-width: 100%;\n    font-family: \"DejaVu Sans\", sans-serif;\n  }\n  .preload {\n    display: none;\n  }\n\n  @media screen and (max-width: 600px) {\n    #jsoneditor, p {\n      width: 100%;\n    }\n  }\n</style>\n\n<body>\n <nav>\n    <div class=\"nav-wrapper\">\n      <a href=\"#\" class=\"brand-logo ml-5\"> Cencus</a>\n      <ul id=\"nav-mobile\" class=\"right hide-on-med-and-down\">\n        <li><a href=\"/update_params\">Params</a></li>\n        <li><a href=\"/upload_page\">Upload csv</a></li>\n        <li><a href=\"/ui\">UI</a></li>\n      </ul>\n    </div>\n  </nav>\n<div class=\"container\">\n    <h1 class=\"center-align\">Update Params</h1>\n      <select class=\"browser-default\">\n        <option value=\"\" disabled selected>Choose your option</option>\n        <option value=\"1\">Option 1</option>\n        <option value=\"2\">Option 2</option>\n        <option value=\"3\">Option 3</option>\n    </select>\n    <br>\n      <div id=\"jsoneditor\"></div>\n      <div class=\"preload\" id=\"preload\">{{payload.payload}}</div>\n    <div class=\"row\">\n        <form action=\"/update_params\" method=\"GET\" enctype=\"multipart/form-data\" class=\"col s12\">\n            <div class=\"input-field center-align\">\n                <button class=\"btn waves-effect waves-light\" type=\"submit\">Update\n                </button>\n            </div>\n        </form>\n    </div>\n</div>\n\n<!-- Initialize Materialize Components -->\n<script>\n    M.AutoInit();\n</script>\n\n</body>\n<script>\n  const container = document.getElementById(\"jsoneditor\");\n\nconst options = {\n  mode: \"tree\",\n  modes: [\"text\", \"tree\", \"view\", \"preview\"],\n  expandAll: true,\n  // example editable\n  onEditable: function(node) {\n    // node is an object like:\n    //   {\n    //     field: 'FIELD',\n    //     value: 'VALUE',\n    //     path: ['PATH', 'TO', 'NODE']\n    //   }\n    switch (node.field) {\n      case \"_id\":\n        return false;\n\n      case \"name\":\n        return {\n          field: false,\n          value: true\n        };\n\n      default:\n        return true;\n    }\n  },\n  //   on event example\n  onError: function(err) {\n    alert(err.toString());\n  },\n  onEvent: function(node, event) {\n    if (event.type === \"click\") {\n      let message = \"field: \" + node.field + \" | path: \" + node.path;\n      if (node.value) {\n        message += \" | value: \" + node.value;\n      }\n      console.log(message);\n      // console.log(node, event);\n      //       update json field position\n      const my_clipboard = \"{ x: -3755.9812, y: 140.43, z: -3287.19 }\";\n      let my_room;\n      let my_item;\n      let x_pos = 0.0;\n      let y_pos = 0.0;\n      let z_pos = 0.0;\n      let i_count = 1;\n      if (node.field === \"position\") {\n        // get x coordinate\n        const regex = /(?<=x:\\s{0,})(?<x_pos>\\-{0,1}\\d{0,}\\.{0,1}\\d{0,})|(?<=y:\\s{0,})(?<y_pos>\\-{0,1}\\d{0,}\\.{0,1}\\d{0,})|(?<=z:\\s{0,})(?<z_pos>\\-{0,1}\\d{0,}\\.{0,1}\\d{0,})/gm;\n        const str = my_clipboard;\n        let m;\n        // m = regex.exec(str);\n        // console.log('m:', m);\n        // todo? check if it is a string with coordinates x_pos is found\n\n        // // x_pos = parseFloat(m[2], 10);\n        // x_pos = Number(m[2]);\n        // console.log('regex:', m[0], '-', m[1], '-', m[2]);\n        // console.log('x_pos:', m.x_pos);\n\n                while ((m = regex.exec(str)) !== null) {\n                  // This is necessary to avoid infinite loops with zero-width matches\n                  console.log('i_count:', i_count, '|group 0:', m[0] );\n                  switch (i_count) {\n                    case 2:\n                      x_pos = Number(m[0]);\n                      console.log('x_pos:', x_pos);\n                      break;\n                    case 4:\n                      y_pos = Number(m[0]);\n                      break;\n                    case 6:\n                      z_pos = Number(m[0]);\n                      break;\n                  }\n                  if (m.index === regex.lastIndex) {\n                    regex.lastIndex++;\n                  }\n\n                  // The result can be accessed through the `m`-variable.\n                  m.forEach((match, groupIndex) => {\n                    console.log(`Found match, group ${groupIndex}: ${match}`);\n                  });\n                  i_count++;\n                };\n\n        my_room = node.path[1];\n        my_item = node.path[3];\n        console.log(\"node.path[3]: \", node.path[3]);\n        json[\"rooms\"][my_room][\"items\"][my_item][\"position\"][\"x\"] = x_pos;\n        json[\"rooms\"][my_room][\"items\"][my_item][\"position\"][\"y\"] = y_pos;\n        json[\"rooms\"][my_room][\"items\"][my_item][\"position\"][\"z\"] = z_pos;\n        console.log({json})\n        editor.update(json);\n        console.log(editor)\n      }\n    }\n\n    function prettyPrintPath(path) {\n      let str = \"\";\n      for (let i = 0; i < path.length; i++) {\n        const element = path[i];\n        if (typeof element === \"number\") {\n          str += \"[\" + element + \"]\";\n        } else {\n          if (str.length > 0) str += \",\";\n          str += element;\n        }\n      }\n      return str;\n    }\n  }\n};\nconst j = document.getElementById(\"preload\").innerHTML;\nconst parsedJson = JSON.parse(j)\nconst editor = new JSONEditor(container, options, {\n    json_values: parsedJson.json_values,\n    values: parsedJson.values\n});\n  document.querySelector('form').addEventListener('submit', function(e) {\n    e.preventDefault();\n    const updatedJson = editor.get(); \n    console.log(updatedJson); \n      fetch('http://localhost:3000/params/' + parsedJson.id, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({updatedValues:updatedJson})\n    })\n    .then(response => {\n      if (response.ok) {\n        console.log('Update successful!');\n      } else {\n        console.error('Error updating params:', response.status);\n      }\n    })\n    .catch(error => {\n      console.error('Error:', error);\n    });\n  });\n  // });\n\n  </script>\n</html>",
        "output": "str",
        "x": 1310,
        "y": 700,
        "wires": [
            [
                "6b05d518e4c1bc47"
            ]
        ]
    },
    {
        "id": "6b05d518e4c1bc47",
        "type": "http response",
        "z": "dad88d9a3132fed6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1430,
        "y": 660,
        "wires": []
    },
    {
        "id": "ea0778e9f5cd9498",
        "type": "template",
        "z": "dad88d9a3132fed6",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Update Params</title>\n   <link rel=\"stylesheet\" type=\"text/css\" href=\"https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/7.0.4/jsoneditor.css\" >\n   <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/7.0.4/jsoneditor.js\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.4/lodash.min.js\"></script>    \n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css\">\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js\"></script>\n</head>\n  <style>\n        iframe {\n            width: 100%;\n            height: 100vh;\n            border: none;\n        }\n  #jsoneditor {\n    max-width: 100%;\n    height: auto;\n  }\n  p {\n    max-width: 100%;\n    font-family: \"DejaVu Sans\", sans-serif;\n  }\n  .preload {\n    display: none;\n  }\n\n  @media screen and (max-width: 600px) {\n    #jsoneditor, p {\n      width: 100%;\n    }\n  }\n</style>\n\n<body>\n  <nav>\n    <div class=\"blue nav-wrapper\">\n      <a href=\"#\" data-target=\"mobile-demo\" class=\"sidenav-trigger\"><i class=\"material-icons\">menu</i></a>\n      <ul class=\"left hide-on-med-and-down\">\n        <li><a class=\"bold\" href=\"/update_params\">Params</a></li>\n        <li><a class=\"bold\" href=\"/upload_page\">Upload csv</a></li>\n        <li><a class=\"bold\" href=\"/ui_wrapper\">UI</a></li>\n      </ul>\n    </div>\n  </nav>\n\n  <ul class=\"blue sidenav\" id=\"mobile-demo\">\n      <li><a class=\"bold\" href=\"/update_params\">Params</a></li>\n        <li><a class=\"bold\" href=\"/upload_page\">Upload csv</a></li>\n        <li><a class=\"bold\" href=\"/ui_wrapper\">UI</a></li>\n  </ul>\n\n\n    <iframe src=\"/ui\"></iframe>\n\n\n<!-- Initialize Materialize Components -->\n<script>\n    M.AutoInit();\n    var elems = document.querySelectorAll('.sidenav');\n    var instances = M.Sidenav.init(elems);\n</script>\n\n</body>\n</html>",
        "output": "str",
        "x": 1170,
        "y": 1200,
        "wires": [
            [
                "74662df4569846c9"
            ]
        ]
    },
    {
        "id": "74662df4569846c9",
        "type": "http response",
        "z": "dad88d9a3132fed6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1310,
        "y": 1200,
        "wires": []
    },
    {
        "id": "2319e5574f035f21",
        "type": "function",
        "z": "dad88d9a3132fed6",
        "g": "4099bf03141f3710",
        "name": "function 31",
        "func": "msg.payload.payload = JSON.stringify({params: msg.payload});\n\nconst csvToJSON = (csv) => {\n    const lines = csv.split('\\n');\n    const headers = lines[0].split(',');\n    const result = [];\n    for (let i = 1; i < lines.length; i++) {\n        const obj = {};\n        const currentLine = lines[i].split(',');\n        for (let j = 0; j < headers.length; j++) {\n            obj[headers[j]] = currentLine[j];\n        }\n        result.push(obj);\n    }\n    return result;\n};\n\nconst csvString = msg.payload;\n\nconst jsonData = csvToJSON(csvString);\nmsg.payload = JSON.stringify(jsonData, null, 2);\n\n// msg.payload.payload = JSON.stringify(msg.payload.data[0].json_values);\n// msg.payload.id = JSON.stringify(msg.payload.data[0].id);\n// msg.payload.values = JSON.stringify({\n//     values: msg.payload.data[0].values,\n//     json_values: msg.payload.data[0].json_values\n// });\n\n// msg.payload = msg.payload.data[0].json_values;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1180,
        "wires": [
            [
                "e1643981.20d7c8"
            ]
        ]
    },
    {
        "id": "40d9b466bfb45d06",
        "type": "debug",
        "z": "dad88d9a3132fed6",
        "name": "debug 101",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 200,
        "wires": []
    },
    {
        "id": "2e210837e211c8be",
        "type": "http in",
        "z": "dad88d9a3132fed6",
        "g": "4099bf03141f3710",
        "name": "",
        "url": "/saveCsv",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 120,
        "y": 1180,
        "wires": [
            [
                "20ef4922bea8d7fd"
            ]
        ]
    },
    {
        "id": "20ef4922bea8d7fd",
        "type": "function",
        "z": "dad88d9a3132fed6",
        "g": "4099bf03141f3710",
        "name": "toBase64",
        "func": "// msg.name = '/tmp/'+ msg.payload.filename\nmsg.name = msg.payload.filename\nmsg.filename = msg.name;\nmsg.payload = msg.payload.csvData;\n// console.log(\"=====\", msg.payload)\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1260,
        "wires": [
            [
                "0464e4eb98976890"
            ]
        ]
    },
    {
        "id": "89e7e315b3a8c30b",
        "type": "link out",
        "z": "dad88d9a3132fed6",
        "g": "4099bf03141f3710",
        "name": "link out post edit",
        "mode": "link",
        "links": [
            "f2f56f84d002ec0f"
        ],
        "x": 845,
        "y": 800,
        "wires": []
    },
    {
        "id": "ba5d5bdad0bc957e",
        "type": "link out",
        "z": "dad88d9a3132fed6",
        "g": "4099bf03141f3710",
        "name": "link out post edit",
        "mode": "link",
        "links": [
            "d946e5bca62e02d1"
        ],
        "x": 845,
        "y": 840,
        "wires": []
    },
    {
        "id": "8434c6c16c1fbaaf",
        "type": "link out",
        "z": "dad88d9a3132fed6",
        "g": "4099bf03141f3710",
        "name": "link out post edit",
        "mode": "link",
        "links": [
            "3cd3e107ac0789b7"
        ],
        "x": 845,
        "y": 880,
        "wires": []
    },
    {
        "id": "d9650115f85479a9",
        "type": "link in",
        "z": "112a2e5b60c3f3a8",
        "name": "link in 18",
        "links": [
            "f14b49f36a5b83fc",
            "ae36b936ef8f7cc6"
        ],
        "x": 185,
        "y": 100,
        "wires": [
            [
                "e68533f8e220dc5c"
            ]
        ]
    },
    {
        "id": "1d09b4bb89816289",
        "type": "function",
        "z": "112a2e5b60c3f3a8",
        "name": "classification function",
        "func": "let record_idx = global.get(\"ptrModuleFacts\");\nlet record = msg.payload.csv[record_idx];\nlet cache = global.get(\"lookupCache\");\n\nmsg.payload.record_typ_txt = record.RECORD_TYP_TXT;\nmsg.payload.aies_scope = record.AIES_SCOPE;\nmsg.payload.naics_num = record.NAICS_NUM;\n\n\nlet status = \"\";\nfunction checkStr(str) {\n    return typeof str === 'undefined' ||\n        str === null ||\n        str === \"NULL\"\n        ? \"\"\n        : str\n}\n\nfunction recTypeMatch(recArr) {\n    console.log((\n        (record.RECORD_TYP_TXT ? recArr.includes(record.RECORD_TYP_TXT) : false)\n    ))\n    return (\n        (record.RECORD_TYP_TXT ? recArr.includes(record.RECORD_TYP_TXT) : false)\n    );\n}\nfunction checkMinimumLength(inputString) {\n    return typeof inputString === 'string' && inputString.length >= 8;\n}\nfunction partialNaicsNum(length) {\n    msg.payload.NAICS_NUM = record.NAICS_NUM.substring(0, length);\n    console.log(msg.payload.NAICS_NUM)\n    return record.NAICS_NUM.substring(0, length) || \"\";\n}\nfunction partialKAUNaicsNum(length) {\n    msg.payload.KAU_NAICS = record.KAU_NAICS.substring(0, length);\n    console.log(msg.payload.KAU_NAICS)\n    return record.KAU_NAICS.substring(0, length) || \"\";\n}\nfunction setFlag() {\n    msg.payload.csv[record_idx].TABSTAT = \"N\";\n    msg.payload.csv[record_idx].NONTABFL = \"R\";\n    msg.payload.csv[record_idx].STOP = \"T\";\n    msg.payload.csv[record_idx].ACTION = \"Exit Edit\";\n}\nfunction setAction(action) {\n    console.log(action)\n    msg.payload.csv[record_idx].ACTION = action;\n}\nfunction stopExit(val) {\n    setFlag()\n    if (val === 1) {\n        msg.payload.csv[record_idx].REFERRAL_FLAG = \"INVALID_NAICS_KAU\";\n    } else {\n        msg.payload.csv[record_idx].REFERRAL_FLAG = \"INVALID_NAICS_ESTAB\";\n    }\n\n}\n\nfunction checkNaicsValidation(field, cache, record, naicsValdnColumn = 0) {\n    if (!cache || !Array.isArray(cache.data)) {\n        cache = { data: [] };\n    }\n\n    const naicsValData = cache.data.find(\n        item =>\n            item.module === \"classification\" &&\n            item.program === \"aies\" &&\n            item.unit_type === \"estab\"\n    )?.json_values;\n    console.log({\n        test1: record['NAICS_NUM'] &&\n            (\n                (naicsValData &&\n                    typeof naicsValData === \"object\" &&\n                    naicsValData[\"col_\" + naicsValdnColumn]) ||\n                []\n            ).some(item => checkStr((item).toString()) === checkStr((field).toString()))\n    })\n\n    return (\n        record['NAICS_NUM'] &&\n        (\n            (naicsValData &&\n                typeof naicsValData === \"object\" &&\n                naicsValData[\"col_\" + naicsValdnColumn]) ||\n            []\n        ).some(item => checkStr((item).toString()) === checkStr((field).toString()))\n    );\n}\nfunction callMeInElse() {\n    if (recTypeMatch([\"20\", \"90\"])) {\n        stopExit(20 || 90)\n    } else {\n        stopExit(1)\n    }\n}\nif (recTypeMatch([\"30\", \"20\", \"90\"])) {\n    if (checkMinimumLength(record.NAICS_NUM)) {\n        if (\n            checkNaicsValidation(partialNaicsNum(4), cache, record, 0) ||\n            checkNaicsValidation(partialNaicsNum(7), cache, record, 1) ||\n            checkNaicsValidation(partialNaicsNum(6), cache, record, 2)\n        ) {\n            setAction(\"Link to Derive Naics code Module\");\n        } else {\n            callMeInElse()\n        }\n        return msg;\n    } else if (recTypeMatch([\"20\", \"90\"])) {\n        callMeInElse()\n        return msg;\n    }else{\n        stopExit(1)\n    }\n    return msg;\n\n} else {\n    setAction(\"Error - Record should not have entered this module\");\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 180,
        "wires": [
            [
                "434436c270b7f283",
                "2252d07a88b97680"
            ]
        ]
    },
    {
        "id": "434436c270b7f283",
        "type": "link out",
        "z": "112a2e5b60c3f3a8",
        "name": "link out classification",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9"
        ],
        "x": 925,
        "y": 180,
        "wires": []
    },
    {
        "id": "2252d07a88b97680",
        "type": "debug",
        "z": "112a2e5b60c3f3a8",
        "name": "debug classification",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 100,
        "wires": []
    },
    {
        "id": "d724d7b540efbda7",
        "type": "subflow:0be109393cb5f28a",
        "z": "112a2e5b60c3f3a8",
        "name": "",
        "x": 510,
        "y": 180,
        "wires": [
            [
                "1d09b4bb89816289",
                "597040e7f9c95810"
            ]
        ]
    },
    {
        "id": "597040e7f9c95810",
        "type": "debug",
        "z": "112a2e5b60c3f3a8",
        "name": "debug 95",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 300,
        "wires": []
    },
    {
        "id": "3e48307d8de2024d",
        "type": "inject",
        "z": "112a2e5b60c3f3a8",
        "name": "Reset Cache",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"lookup\":{\"moduleName\":\"classification\",\"program\":\"aies\",\"unit_type\":\"estab\",\"params\":\"naics_alt,naics_validation\"}}",
        "payloadType": "json",
        "x": 270,
        "y": 600,
        "wires": [
            [
                "dfd56f079cadbf6d"
            ]
        ]
    },
    {
        "id": "e68533f8e220dc5c",
        "type": "change",
        "z": "112a2e5b60c3f3a8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.lookup",
                "pt": "msg",
                "to": "{\"moduleName\":\"classification\",\"program\":\"aies\",\"unit_type\":\"estab\",\"params\":\"naics_alt,naics_validation\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 180,
        "wires": [
            [
                "d724d7b540efbda7"
            ]
        ]
    },
    {
        "id": "dfd56f079cadbf6d",
        "type": "function",
        "z": "112a2e5b60c3f3a8",
        "name": "reset cache function",
        "func": "let cache = global.set(\"lookupCache\", { \"data\": [] });\nmsg.cache = global.get(\"lookupCache\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 600,
        "wires": [
            [
                "8e6b9ce262c7a33c"
            ]
        ]
    },
    {
        "id": "bb8cfd0edc7b6039",
        "type": "inject",
        "z": "112a2e5b60c3f3a8",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"lookup\":{\"moduleName\":\"classification\",\"program\":\"aies\",\"unit_type\":\"estab\",\"params\":\"naics_alt,naics_validation\"}}",
        "payloadType": "json",
        "x": 250,
        "y": 500,
        "wires": [
            [
                "ccdc5863fd12c3f6"
            ]
        ]
    },
    {
        "id": "ccdc5863fd12c3f6",
        "type": "function",
        "z": "112a2e5b60c3f3a8",
        "name": "Check cache",
        "func": "msg.cache = global.get(\"lookupCache\");\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 500,
        "wires": [
            [
                "f24d832341a7b238"
            ]
        ]
    },
    {
        "id": "f24d832341a7b238",
        "type": "debug",
        "z": "112a2e5b60c3f3a8",
        "name": "debug 96",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "cache",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 500,
        "wires": []
    },
    {
        "id": "8e6b9ce262c7a33c",
        "type": "debug",
        "z": "112a2e5b60c3f3a8",
        "name": "debug 97",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "cache",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 600,
        "wires": []
    },
    {
        "id": "abef3a766d7b04ab",
        "type": "function",
        "z": "d416a739a235277c",
        "name": "ElectricEnergyModule",
        "func": "let record_idx = global.get(\"ptrModuleFacts\");\nlet record = msg.payload.csv[record_idx];\nlet status = \"\";\nmsg.payload.status = status;\n/* Uncomment this block for debugging \n    msg.payload.COV_CHG_CODE = record.COV_CHG_CODE\n    msg.payload.PAY_ANN_VAL = record.PAY_ANN_VAL\n    msg.payload.EMP_MAR12_NUM = record.EMP_MAR12_NUM\n    msg.payload.PAY_QTR1_VAL = record.PAY_QTR1_VAL\n    msg.payload.ECPAYANN = record.ECPAYANN\n    msg.payload.ECPAYQ1 = record.ECPAYQ1\n    msg.payload.ECEMPQ1 = record.ECEMPQ1\n    msg.payload.ECPAYANL = record.ECPAYANL\n    msg.payload.PROCESS_DIV_CODE_TXT = record.PROCESS_DIV_CODE_TXT\n    msg.payload.NAICS_SECTOR_OLD_NUM = record.NAICS_SECTOR_OLD_NUM\n*/\n\nfunction setResult() {\n    /* Uncomment to debug\n    msg.payload.status += \"+settingResult\";*/\n    msg.payload.csv[record_idx].TABSTAT = \"N\";\n    msg.payload.csv[record_idx].NONTABFL = \"D\";\n    msg.payload.csv[record_idx].action = \"Exit Edit\";\n}\n\n\n\nfunction parseToNum(val) {\n    return isNaN(val) ? 0 : parseInt(val, 10);\n}\nfunction naicsSectorCheck() {\n    let result =\n        parseToNum(record.PAY_ANN_VAL) +\n        parseToNum(record.EMP_MAR12_NUM) +\n        parseToNum(record.PAY_QTR1_VAL) +\n        parseToNum(record.ECPAYANN) +\n        parseToNum(record.ECPAYQ1) +\n        parseToNum(record.ECEMPQ1) +\n        parseToNum(record.ECPAYANL);\n\n    if (parseToNum(record.NAICS_SECTOR_OLD_NUM) === 31) {\n        return result + parseToNum(record.EXPS_TEMPSTAF_VAL);\n    }\n    return result\n}\nlet data = naicsSectorCheck();\nmsg.payload.csv[record_idx].DATA = data\nconsole.log()\nif (\n    [\"111\", \"131\", \"791\"].includes(record.COV_CHG_CODE.toString()) &&\n    new Date(record.COV_CHG_DATE) <=\n    new Date(\"01-01-\" + record.REF_PER.substring(0, 4)) &&\n    data\n) {\n    msg.payload.csv[record_idx].TABSTAT = \"Y\";\n    return msg;\n\n} else if ([\"181\", \"201\", \"801\", \"091\", \"121\", \"171\"].includes(record.COV_CHG_CODE.toString()) || data === 0) {\n    setResult();\n    return msg;\n} else {\n    msg.payload.csv[record_idx].action = \"Go To Main Routing\";\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 480,
        "wires": [
            [
                "8fb70c16daf9473e",
                "7dae0df881453eeb"
            ]
        ]
    },
    {
        "id": "8fb70c16daf9473e",
        "type": "debug",
        "z": "d416a739a235277c",
        "name": "debug ElectricEnergyModule",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 400,
        "wires": []
    },
    {
        "id": "7dae0df881453eeb",
        "type": "link out",
        "z": "d416a739a235277c",
        "name": "link out 56",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9"
        ],
        "x": 565,
        "y": 480,
        "wires": []
    },
    {
        "id": "1d5798f410ba94fa",
        "type": "function",
        "z": "d416a739a235277c",
        "name": "electricEnergyModuleCont",
        "func": "let record_idx = global.get(\"ptrModuleFacts\");\nlet record = msg.payload.csv[record_idx];\n\n// Assumed JavaScript function based on new extracted OCR text (Continued Electric Energy Module)\nfunction electricEnergyModuleCont(T_STFIPS, REFPER, ELEC_PRCH_KWH_NUM, EXPS_ELEC_VAL) {\n    // Placeholder for parameter table\n    let X_ELECTRIC_STATE_PARAMETER_TABLE = {\n        AVG1: 0,\n        AVG2: 0,\n        ELEC: 0,\n        LL: 0,\n        UL: 0\n    };\n\n    let { AVG1, AVG2, ELEC, LL, UL } = X_ELECTRIC_STATE_PARAMETER_TABLE;\n\n    if (EXPS_ELEC_VAL > 0 && ELEC_PRCH_KWH_NUM === 0) {\n        // Logic here\n    } else if (EXPS_ELEC_VAL / ELEC_PRCH_KWH_NUM <= UL) {\n        // Logic here\n    } else {\n        // Call Electric Impute Module\n    }\n\n    // Additional logic...\n\n    return EXPS_ELEC_VAL;\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 720,
        "wires": [
            [
                "8e1b2cb6d829fd58",
                "45908235e45f6dfd"
            ]
        ]
    },
    {
        "id": "8e1b2cb6d829fd58",
        "type": "debug",
        "z": "d416a739a235277c",
        "name": "debug electricEnergyModuleCont",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 640,
        "wires": []
    },
    {
        "id": "45908235e45f6dfd",
        "type": "link out",
        "z": "d416a739a235277c",
        "name": "link out 57",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9"
        ],
        "x": 575,
        "y": 760,
        "wires": []
    },
    {
        "id": "475236651a5b2d4f",
        "type": "subflow:0be109393cb5f28a",
        "z": "d416a739a235277c",
        "name": "",
        "x": 850,
        "y": 1580,
        "wires": [
            [
                "9373014f1bd2d06a"
            ]
        ]
    },
    {
        "id": "b0708af5257122f7",
        "type": "debug",
        "z": "d416a739a235277c",
        "name": "debug 102",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1310,
        "y": 1580,
        "wires": []
    },
    {
        "id": "9373014f1bd2d06a",
        "type": "function",
        "z": "d416a739a235277c",
        "name": "function 32",
        "func": "let paramsT = global.get(\"lookupCache\")\nmsg.cache = paramsT\nlet record_idx = global.get(\"ptrModuleFacts\");\nlet record = msg.payload.csv[record_idx];\n// console.log({ paramsT: paramsT?.data[0]?.json_values, record, record_idx})\nconst params = paramsT?.data[0]?.json_values\nconst input = record\nconst T_STFIPS = input?.STFIPS;\nconst cutoffs = params.MN_ELEC_CUTOFF;\n\nfunction getParameterByGeoSt(geoSt) {\n    if (!geoSt || geoSt === 'NULL') return null;\n    const year = record.REF_PER.substring(0, 4)\n    let state;\n    switch (String(year)) {\n        case '2022':\n            state = params['MN_ELECTRIC_STATE'];\n            break;\n        case '2023':\n            state = params['ASM23_MN_ELECTRIC_STATE'];\n            break;\n        case '2024':\n            state = params['ASM24_MN_ELECTRIC_STATE'];\n            break;\n        case '2025':\n            state = params['ASM25_MN_ELECTRIC_STATE'];\n            break;\n        case '2026':\n            state = params['ASM26_MN_ELECTRIC_STATE'];\n            break;\n        default:\n            // Handle default case\n            break;\n    }\n    console.log(state.map(item => parseInt(item.GEO_ST) === parseInt(geoSt) ? item : null).find(item => item !== null) || null)\n    return state.map(item => parseInt(item.GEO_ST) === parseInt(geoSt) ? item : null).find(item => item !== null) || null;\n}\nconst parameter = getParameterByGeoSt(T_STFIPS);\n\n// console.log(parameter, T_STFIPS, input.EXPS_ELEC_VAL, input.ELEC_PRCH_KWH_NUM)\n\nfunction electricEnergyModule(input) {\n    const { EXPS_ELEC_VAL, ELEC_PRCH_KWH_NUM } = input;\n    if (parseInt(EXPS_ELEC_VAL) === 0 && parseInt(ELEC_PRCH_KWH_NUM) === 0) {\n        console.log(1)\n        msg.payload.csv[record_idx].ACTION = \"Go To A\";\n    } else if (parseInt(EXPS_ELEC_VAL) === 0 && parseInt(ELEC_PRCH_KWH_NUM) > 0) {\n        console.log(2)\n        msg.payload.csv[record_idx].ELEC_PRCH_KWH_NUM = 0\n        msg.payload.csv[record_idx].ELEC_PRCH_KWH_NUM_F ='J'\n        msg.payload.csv[record_idx].ACTION = \"Go To A\";\n    } \n    else if (parseInt(parameter.GEO_ST) === parseInt(T_STFIPS)) {\n        msg.payload.csv[record_idx].ACTION = \"Go To 2 - (electricEnergyModuleCont ?)\";\n    } \n    else {\n        console.log(3, input, parameter.GEOST, T_STFIPS)\n        msg.payload.csv[record_idx].MISSING_ST_FIPS_ELECTRIC = 1;\n        msg.payload.csv[record_idx].ACTION = \"Go To A - END\";\n    }\n//   console.log(msg);\n  return msg;\n}\n\nreturn electricEnergyModule(input)\n// function electricEnergyModule(T_STFIPS, REFPER, ELEC_PRCH_KWH_NUM, x_CURR) {\n//     console.log(\"Executing electricEnergyModule...\");\n\n//     if (!T_STFIPS || !REFPER || !ELEC_PRCH_KWH_NUM || !x_CURR ||\n//         [T_STFIPS, REFPER, ELEC_PRCH_KWH_NUM, x_CURR].includes('NULL')) {\n//         console.log('Invalid parameters');\n//         return 'Invalid parameters';\n//     }\n\n//     const parameter = getParameterByGeoSt(T_STFIPS);\n//     if (!parameter) {\n//         console.log('Invalid STFIPS');\n//         return 'Invalid STFIPS';\n//     }\n\n//     // ... rest of the logic\n\n//     return electricEnergyModuleCont(T_STFIPS, REFPER, ELEC_PRCH_KWH_NUM, 0, x_CURR);\n// }\n\n// function electricEnergyModuleCont(T_STFIPS, REFPER, ELEC_PRCH_KWH_NUM, EXPS_ELEC_VAL, x_CURR) {\n//     console.log(\"Executing electricEnergyModuleCont...\");\n//     if (!T_STFIPS || !REFPER || ELEC_PRCH_KWH_NUM === null || EXPS_ELEC_VAL === null || !x_CURR ||\n//         [T_STFIPS, REFPER, ELEC_PRCH_KWH_NUM, EXPS_ELEC_VAL, x_CURR].includes('NULL')) {\n//         console.log('Invalid parameters');\n//         return 'Invalid parameters';\n//     }\n\n//     const parameter = getParameterByGeoSt(T_STFIPS);\n//     let FIXED = 0;\n//     let BETA = 0;\n\n//     if (EXPS_ELEC_VAL / ELEC_PRCH_KWH_NUM > BETA) {\n//         return electricImputeModule(T_STFIPS, REFPER, ELEC_PRCH_KWH_NUM, EXPS_ELEC_VAL, x_CURR);\n//     }\n\n//     console.log('Returning from electricEnergyModuleCont:', EXPS_ELEC_VAL);\n//     return EXPS_ELEC_VAL;\n// }\n\n// function electricImputeModule(T_STFIPS, REFPER, ELEC_PRCH_KWH_NUM, EXPS_ELEC_VAL, x_CURR) {\n//     console.log(\"Executing electricImputeModule...\");\n//     if (!T_STFIPS || !REFPER || ELEC_PRCH_KWH_NUM === null || EXPS_ELEC_VAL === null || !x_CURR ||\n//         [T_STFIPS, REFPER, ELEC_PRCH_KWH_NUM, EXPS_ELEC_VAL, x_CURR].includes('NULL')) {\n//         console.log('Invalid parameters');\n//         return 'Invalid parameters';\n//     }\n\n//     const parameter = getParameterByGeoSt(T_STFIPS);\n//     let NM_STATE_PARAMETER_TABLE = {\n//         AVG1: parameter ? parameter.AVG1 : 0,\n//         AVG2: parameter ? parameter.AVG2 : 0\n//     };\n\n//     // ... rest of the logic\n\n//     console.log('Returning from electricImputeModule:', EXPS_ELEC_VAL);\n//     return EXPS_ELEC_VAL;\n// }\n\n// console.log(electricEnergyModule(T_STFIPS, '2022', 1000, 'M'));\n\n// Test cases\n// console.log(electricEnergyModule('01', '2022', 1000, 'M'));  // Should execute all three functions for GEO_ST '01'\n// console.log(electricEnergyModule(undefined, '2022', 500, 'M'));  // Should return 'Invalid parameters'\n// console.log(electricEnergyModule('02', 'NULL', 500, 'M'));  // Should return 'Invalid parameters'\n// console.log(electricEnergyModule('03', '2022', 500, 'M'));  // Should return 'Invalid STFIPS' because '03' is not in parameterTableData\n\n// function getElecState(REFPER, params) {\n//     let stateParam;\n//     // Choose parameter table based on REFPER\n//     if (REFPER.slice(0, 4) === '2022') {\n//         stateParam = params.MN_ELECTRIC_STATE;\n//     } else if (REFPER === '2023A1') {\n//         stateParam = params.ASM23_ELECTRIC_STATE;\n//     } else if (REFPER === '2024A1') {\n//         stateParam = params.ASM24_ELECTRIC_STATE;\n//     } // ... add other conditions for other years\n\n//     return stateParam;\n// }\n// console.log(getElecState('2022', params));\n\n// return msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 1580,
        "wires": [
            [
                "b0708af5257122f7",
                "63e57e09491e405e"
            ]
        ]
    },
    {
        "id": "f2f56f84d002ec0f",
        "type": "link in",
        "z": "d416a739a235277c",
        "name": "link in 43",
        "links": [
            "89e7e315b3a8c30b"
        ],
        "x": 365,
        "y": 1580,
        "wires": [
            [
                "ba808bf2520da70a"
            ]
        ]
    },
    {
        "id": "ba808bf2520da70a",
        "type": "change",
        "z": "d416a739a235277c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.lookup",
                "pt": "msg",
                "to": "{\"moduleName\":\"electric_energy\",\"program\":\"aies\",\"unit_type\":\"estab\",\"params\":\"electric_energy_module\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 1580,
        "wires": [
            [
                "475236651a5b2d4f"
            ]
        ]
    },
    {
        "id": "63e57e09491e405e",
        "type": "link out",
        "z": "d416a739a235277c",
        "name": "link out classification",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9"
        ],
        "x": 1245,
        "y": 1640,
        "wires": []
    },
    {
        "id": "0d8c91218e476015",
        "type": "subflow:0be109393cb5f28a",
        "z": "c54f3247808fdf7f",
        "name": "",
        "x": 530,
        "y": 420,
        "wires": [
            [
                "cc3b332a2e1dd3b1"
            ]
        ]
    },
    {
        "id": "609f0f76ef58737d",
        "type": "debug",
        "z": "c54f3247808fdf7f",
        "name": "debug 105",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 420,
        "wires": []
    },
    {
        "id": "cc3b332a2e1dd3b1",
        "type": "function",
        "z": "c54f3247808fdf7f",
        "name": "function 35",
        "func": "let paramsT = global.get(\"lookupCache\")\nmsg.cache = paramsT\nlet record_idx = global.get(\"ptrModuleFacts\");\nlet record = msg.payload.csv[record_idx];\nconst params = paramsT?.data[0]?.json_values\nconst input = record\nconst T_STFIPS = input?.STFIPS;\nconst cutoffs = params.MN_ELEC_CUTOFF;\n\nfunction getParameterByGeoSt(geoSt) {\n    if (!geoSt || geoSt === 'NULL') return null;\n    const year = record.REF_PER.substring(0, 4)\n    let state;\n    switch (String(year)) {\n        case '2022':\n            state = params['MN_ELECTRIC_STATE'];\n            break;\n        case '2023':\n            state = params['ASM23_MN_ELECTRIC_STATE'];\n            break;\n        case '2024':\n            state = params['ASM24_MN_ELECTRIC_STATE'];\n            break;\n        case '2025':\n            state = params['ASM25_MN_ELECTRIC_STATE'];\n            break;\n        case '2026':\n            state = params['ASM26_MN_ELECTRIC_STATE'];\n            break;\n        default:\n            // Handle default case\n            break;\n    }\n    console.log(state.map(item => parseInt(item.GEO_ST) === parseInt(geoSt) ? item : null).find(item => item !== null) || null)\n    return state.map(item => parseInt(item.GEO_ST) === parseInt(geoSt) ? item : null).find(item => item !== null) || null;\n}\nconst parameter = getParameterByGeoSt(T_STFIPS);\n// console.log(parameter, T_STFIPS, input.EXPS_ELEC_VAL, input.ELEC_PRCH_KWH_NUM)\nfunction electricEnergyModuleCont(input) {\n    const { EXPS_ELEC_VAL, ELEC_PRCH_KWH_NUM } = input;\n    console.log({ parameter }, (parseFloat(EXPS_ELEC_VAL) / parseFloat(ELEC_PRCH_KWH_NUM)))\n    if (parseFloat(EXPS_ELEC_VAL) > 0 && parseFloat(ELEC_PRCH_KWH_NUM) === 0) {\n        console.log(1)\n        msg.payload.csv[record_idx].ACTION = \"Go To B\";\n    } else if (\n        parseFloat(parameter.LL) <= (parseFloat(EXPS_ELEC_VAL) / parseFloat(ELEC_PRCH_KWH_NUM)) \n    && (parseFloat(EXPS_ELEC_VAL) / parseFloat(ELEC_PRCH_KWH_NUM)) <= parseFloat(parameter.UL))\n    {\n        console.log(2)\n        msg.payload.csv[record_idx].ACTION = \"Go To 1 - A\";\n    } else if (\n        parseFloat(parameter.LL) <= ((parseFloat(EXPS_ELEC_VAL) * 1000) / parseFloat(ELEC_PRCH_KWH_NUM))\n        && ((parseFloat(EXPS_ELEC_VAL) * 1000) / parseFloat(ELEC_PRCH_KWH_NUM)) <= parseFloat(parameter.UL)) {\n        console.log(3)\n        msg.payload.csv[record_idx].ELEC_PRCH_KWH_NUM = parseFloat(ELEC_PRCH_KWH_NUM) / 1000;\n        msg.payload.csv[record_idx].ELEC_PRCH_KWH_NUM = 'N' // (3,1)\n        msg.payload.csv[record_idx].ACTION = \"Go To 1 - A\";\n    } else{\n        console.log(4)\n        msg.payload.csv[record_idx].ACTION = \"Go To B and then Go to 1 (A)\";\n    }\n//   console.log(msg);\n  return msg;\n}\n\nreturn electricEnergyModuleCont(input)",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 420,
        "wires": [
            [
                "609f0f76ef58737d",
                "d167c6cf7b89444d"
            ]
        ]
    },
    {
        "id": "d946e5bca62e02d1",
        "type": "link in",
        "z": "c54f3247808fdf7f",
        "name": "link in 44",
        "links": [
            "ba5d5bdad0bc957e"
        ],
        "x": 45,
        "y": 420,
        "wires": [
            [
                "1a26d214cba4c42b"
            ]
        ]
    },
    {
        "id": "1a26d214cba4c42b",
        "type": "change",
        "z": "c54f3247808fdf7f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.lookup",
                "pt": "msg",
                "to": "{\"moduleName\":\"electric_energy\",\"program\":\"aies\",\"unit_type\":\"estab\",\"params\":\"electric_energy_module\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 420,
        "wires": [
            [
                "0d8c91218e476015"
            ]
        ]
    },
    {
        "id": "d167c6cf7b89444d",
        "type": "link out",
        "z": "c54f3247808fdf7f",
        "name": "link out classification",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9"
        ],
        "x": 925,
        "y": 480,
        "wires": []
    },
    {
        "id": "51888bfbb37a0690",
        "type": "subflow:0be109393cb5f28a",
        "z": "1c6c32346fee9416",
        "name": "",
        "x": 600,
        "y": 440.3703308105469,
        "wires": [
            [
                "8a4a29f10142c232"
            ]
        ]
    },
    {
        "id": "578fd20a66562b72",
        "type": "debug",
        "z": "1c6c32346fee9416",
        "name": "debug 106",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 440.3703308105469,
        "wires": []
    },
    {
        "id": "8a4a29f10142c232",
        "type": "function",
        "z": "1c6c32346fee9416",
        "name": "function 36",
        "func": "let paramsT = global.get(\"lookupCache\")\nmsg.cache = paramsT\nlet record_idx = global.get(\"ptrModuleFacts\");\nlet record = msg.payload.csv[record_idx];\nconst params = paramsT?.data[0]?.json_values\nconst input = record\nconst T_STFIPS = input?.STFIPS;\nconst cutoffs = params.MN_ELEC_CUTOFF;\n\nfunction getParameterByGeoSt(geoSt) {\n    if (!geoSt || geoSt === 'NULL') return null;\n    const year = record.REF_PER.substring(0, 4)\n    let state;\n    switch (String(year)) {\n        case '2022':\n            state = params['MN_ELECTRIC_STATE'];\n            break;\n        case '2023':\n            state = params['ASM23_MN_ELECTRIC_STATE'];\n            break;\n        case '2024':\n            state = params['ASM24_MN_ELECTRIC_STATE'];\n            break;\n        case '2025':\n            state = params['ASM25_MN_ELECTRIC_STATE'];\n            break;\n        case '2026':\n            state = params['ASM26_MN_ELECTRIC_STATE'];\n            break;\n        default:\n            // Handle default case\n            break;\n    }\n    console.log(state, year)\n    console.log(state.map(item => parseInt(item.GEO_ST) === parseInt(geoSt) ? item : null).find(item => item !== null) || null)\n    return state.map(item => parseInt(item.GEO_ST) === parseInt(geoSt) ? item : null).find(item => item !== null) || null;\n}\nconst parameter = getParameterByGeoSt(T_STFIPS);\nfunction electricEnergyModuleCont(input) {\n    const { EXPS_ELEC_VAL, ELEC_PRCH_KWH_NUM, ELEC, H_EXPS_ELEC_VAL, H_ELEC_PRCH_KWH_NUM } = input; // What is ELEC and H_EXPS_ELEC_VAL, H_ELEC_PRCH_KWH_NUM here ?\n    if (parseFloat(EXPS_ELEC_VAL) <= 10000) {\n        console.log(1)\n        if (parseFloat(EXPS_ELEC_VAL) >= parseFloat(ELEC)){\n            console.log(2)\n            msg.payload.csv[record_idx].ELEC_PRCH_KWH_NUM = Math.round(parseFloat(EXPS_ELEC_VAL) * parseFloat(parameter.AVG1));\n            msg.payload.csv[record_idx].ELEC_PRCH_KWH_NUM_F = 'B'; // What is (3,1) here ?\n        }else{\n            console.log(3)\n            msg.payload.csv[record_idx].ELEC_PRCH_KWH_NUM = Math.round(parseFloat(EXPS_ELEC_VAL) * parseFloat(parameter.AVG2));\n            msg.payload.csv[record_idx].ELEC_PRCH_KWH_NUM_F = 'B'; // What is (3,1) here ?\n        }\n        msg.payload.csv[record_idx].ACTION = \"Go To A\";\n    } else if ((parseFloat(H_EXPS_ELEC_VAL) > 0)) {\n        console.log(4)\n        msg.payload.csv[record_idx].ELEC_PRCH_KWH_NUM = Math.round((parseFloat(EXPS_ELEC_VAL) / parseFloat(H_EXPS_ELEC_VAL)) * parseFloat(H_ELEC_PRCH_KWH_NUM));\n        msg.payload.csv[record_idx].ELEC_PRCH_KWH_NUM_F = 'H'; // What is (3,1) here ?\n        msg.payload.csv[record_idx].ACTION = \"Go To A\";\n    } else{\n        console.log(5)\n        msg.payload.csv[record_idx].ELEC_PRCH_KWH_NUM = Math.round(parseFloat(EXPS_ELEC_VAL) * parseFloat(parameter.AVG1));\n        msg.payload.csv[record_idx].ELEC_PRCH_KWH_NUM_F = 'B'; // What is (3,1) here ?\n        msg.payload.csv[record_idx].ACTION = \"Go To A - END\";\n    }\n    return msg;\n}\n\nreturn electricEnergyModuleCont(input)",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 440.3703308105469,
        "wires": [
            [
                "578fd20a66562b72",
                "ca558b1ab669675d"
            ]
        ]
    },
    {
        "id": "3cd3e107ac0789b7",
        "type": "link in",
        "z": "1c6c32346fee9416",
        "name": "link in 45",
        "links": [
            "8434c6c16c1fbaaf"
        ],
        "x": 20,
        "y": 440.3703308105469,
        "wires": [
            [
                "651b041f7e61e179"
            ]
        ]
    },
    {
        "id": "651b041f7e61e179",
        "type": "change",
        "z": "1c6c32346fee9416",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.lookup",
                "pt": "msg",
                "to": "{\"moduleName\":\"electric_energy\",\"program\":\"aies\",\"unit_type\":\"estab\",\"params\":\"electric_energy_module\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 440.3703308105469,
        "wires": [
            [
                "51888bfbb37a0690"
            ]
        ]
    },
    {
        "id": "ca558b1ab669675d",
        "type": "link out",
        "z": "1c6c32346fee9416",
        "name": "link out classification",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9"
        ],
        "x": 900,
        "y": 500.3703308105469,
        "wires": []
    },
    {
        "id": "c903163629df82af",
        "type": "function",
        "z": "6399b853963e761e",
        "name": "electricImputeModule",
        "func": "let record_idx = global.get(\"ptrModuleFacts\");\nlet record = msg.payload.csv[record_idx];\n\n// Assumed JavaScript function based on the newest extracted OCR text (Electric Impute Module)\nfunction electricImputeModule(T_STFIPS, REFPER, ELEC_PRCH_KWH_NUM, EXPS_ELEC_VAL) {\n    // Placeholder for NM_State parameter table\n    let NM_STATE_PARAMETER_TABLE = {\n        AVG1: 0,\n        AVG2: 0\n    };\n\n    let { AVG1, AVG2 } = NM_STATE_PARAMETER_TABLE;\n\n    if (EXPS_ELEC_VAL <= 10000) {\n        // Logic for Year 1 historic values (H_) referencing 2022 EC data. Year 2 and on will refer to prior year AIES data\n    }\n\n    if (ELEC_PRCH_KWH_NUM_F[3][1] !== 'B') {\n        ELEC_PRCH_KWH_NUM = Math.round(EXPS_ELEC_VAL * AVG2);\n        ELEC_PRCH_KWH_NUM_F[3][1] = 'B';\n    } else {\n        ELEC_PRCH_KWH_NUM = Math.round(EXPS_ELEC_VAL * AVG1);\n    }\n\n    // Additional logic...\n\n    return EXPS_ELEC_VAL;\n}\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 9,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 240,
        "wires": [
            [
                "ba693bb539d071b9",
                "eda519aa8a1db303"
            ]
        ]
    },
    {
        "id": "ba693bb539d071b9",
        "type": "debug",
        "z": "6399b853963e761e",
        "name": "debug electricImputeModule",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 160,
        "wires": []
    },
    {
        "id": "eda519aa8a1db303",
        "type": "link out",
        "z": "6399b853963e761e",
        "name": "link out 58",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9"
        ],
        "x": 585,
        "y": 280,
        "wires": []
    },
    {
        "id": "5f5ca49f66f32b41",
        "type": "function",
        "z": "6399b853963e761e",
        "name": "electricImputeModule",
        "func": "let record_idx = global.get(\"ptrModuleFacts\");\nlet record = msg.payload.csv[record_idx];\n\n// Assumed JavaScript function based on the newest extracted OCR text (Electric Impute Module)\nfunction electricImputeModule(T_STFIPS, REFPER, ELEC_PRCH_KWH_NUM, EXPS_ELEC_VAL) {\n    // Placeholder for NM_State parameter table\n    let NM_STATE_PARAMETER_TABLE = {\n        AVG1: 0,\n        AVG2: 0\n    };\n\n    let { AVG1, AVG2 } = NM_STATE_PARAMETER_TABLE;\n\n    if (EXPS_ELEC_VAL <= 10000) {\n        // Logic for Year 1 historic values (H_) referencing 2022 EC data. Year 2 and on will refer to prior year AIES data\n    }\n\n    if (ELEC_PRCH_KWH_NUM_F[3][1] !== 'B') {\n        ELEC_PRCH_KWH_NUM = Math.round(EXPS_ELEC_VAL * AVG2);\n        ELEC_PRCH_KWH_NUM_F[3][1] = 'B';\n    } else {\n        ELEC_PRCH_KWH_NUM = Math.round(EXPS_ELEC_VAL * AVG1);\n    }\n\n    // Additional logic...\n\n    return EXPS_ELEC_VAL;\n}\n\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 9,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 460,
        "wires": [
            [
                "d024af4d5725903e",
                "8b699616f9c5a9b5"
            ]
        ]
    },
    {
        "id": "d024af4d5725903e",
        "type": "debug",
        "z": "6399b853963e761e",
        "name": "debug electricImputeModule",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 380,
        "wires": []
    },
    {
        "id": "8b699616f9c5a9b5",
        "type": "link out",
        "z": "6399b853963e761e",
        "name": "link out 59",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9"
        ],
        "x": 585,
        "y": 500,
        "wires": []
    },
    {
        "id": "1455ef9792b755e9",
        "type": "function",
        "z": "6399b853963e761e",
        "name": "Main",
        "func": "let record_idx = global.get(\"ptrModuleFacts\");\nlet record = msg.payload.csv[record_idx];\n\nconst params = {\n    MN_ELECTRIC_STATE: [\n        { 'GEO_ST': '01', 'AVG1': 6.99263, 'AVG2': 12.1924, 'ELEC_INTERSECT': 1000, 'LL': 0.02, 'UL': 0.29 },\n        { 'GEO_ST': '02', 'AVG1': 2.97017, 'AVG2': 6.2589, 'ELEC_INTERSECT': 1000, 'LL': 0.03, 'UL': 0.21 },\n    ],\n    MN_ELEC_CUTOFF: {\n        REFPER: '2008A1',\n        CUTOFF1: '50000',\n        CUTOFF2: '10000',\n        FIXED: '684953',\n        BETA: '6.017'\n    }\n}\nconst input = {\n    STFIPS: '',\n    ELECGEN:'',\n    CSTELEC: '',\n    ELECSLD:'',\n    H_ELECGEN: '',\n    H_ELECSLD: '',\n    HISTSTAT: '',\n    EXPS_ELEC_VAL: 0,\n    ELEC_PRCH_KWH_NUM: 0\n}\nconst T_STFIPS = input?.STFIPS;\nlet MISSING_ST_FLIPS_ELECTRIC = 0;\nconst cutoffs = params.MN_ELEC_CUTOFF;\n\nfunction getParameterByGeoSt(geoSt) {\n    if (!geoSt || geoSt === 'NULL') return null;\n    return params.MN_ELECTRIC_STATE.find(item => item.GEO_ST === geoSt);\n}\nfunction electricEnergyModule(input){\n    const { EXPS_ELEC_VAL, ELEC_PRCH_KWH_NUM } = input;\n    if(EXPS_ELEC_VAL === 0 && ELEC_PRCH_KWH_NUM === 0){\n        // Go to A\n    }else if (EXPS_ELEC_VAL === 0 && ELEC_PRCH_KWH_NUM > 0){\n            // ELEC_PRCH_KWH_NUM = 0\n            // ELEC_PRCH_KWH_NUM_F (3,1) = 'J'\n            // go to A \n    }else if(T_STFIPS) {\n        // Go to electricEnergyModuleCont\n    }else{\n        MISSING_ST_FLIPS_ELECTRIC = 1;\n    }\n}\n// function electricEnergyModule(T_STFIPS, REFPER, ELEC_PRCH_KWH_NUM, x_CURR) {\n//     console.log(\"Executing electricEnergyModule...\");\n\n//     if (!T_STFIPS || !REFPER || !ELEC_PRCH_KWH_NUM || !x_CURR ||\n//         [T_STFIPS, REFPER, ELEC_PRCH_KWH_NUM, x_CURR].includes('NULL')) {\n//         console.log('Invalid parameters');\n//         return 'Invalid parameters';\n//     }\n\n//     const parameter = getParameterByGeoSt(T_STFIPS);\n//     if (!parameter) {\n//         console.log('Invalid STFIPS');\n//         return 'Invalid STFIPS';\n//     }\n\n//     // ... rest of the logic\n\n//     return electricEnergyModuleCont(T_STFIPS, REFPER, ELEC_PRCH_KWH_NUM, 0, x_CURR);\n// }\n\n// function electricEnergyModuleCont(T_STFIPS, REFPER, ELEC_PRCH_KWH_NUM, EXPS_ELEC_VAL, x_CURR) {\n//     console.log(\"Executing electricEnergyModuleCont...\");\n//     if (!T_STFIPS || !REFPER || ELEC_PRCH_KWH_NUM === null || EXPS_ELEC_VAL === null || !x_CURR ||\n//         [T_STFIPS, REFPER, ELEC_PRCH_KWH_NUM, EXPS_ELEC_VAL, x_CURR].includes('NULL')) {\n//         console.log('Invalid parameters');\n//         return 'Invalid parameters';\n//     }\n\n//     const parameter = getParameterByGeoSt(T_STFIPS);\n//     let FIXED = 0;\n//     let BETA = 0;\n\n//     if (EXPS_ELEC_VAL / ELEC_PRCH_KWH_NUM > BETA) {\n//         return electricImputeModule(T_STFIPS, REFPER, ELEC_PRCH_KWH_NUM, EXPS_ELEC_VAL, x_CURR);\n//     }\n\n//     console.log('Returning from electricEnergyModuleCont:', EXPS_ELEC_VAL);\n//     return EXPS_ELEC_VAL;\n// }\n\n// function electricImputeModule(T_STFIPS, REFPER, ELEC_PRCH_KWH_NUM, EXPS_ELEC_VAL, x_CURR) {\n//     console.log(\"Executing electricImputeModule...\");\n//     if (!T_STFIPS || !REFPER || ELEC_PRCH_KWH_NUM === null || EXPS_ELEC_VAL === null || !x_CURR ||\n//         [T_STFIPS, REFPER, ELEC_PRCH_KWH_NUM, EXPS_ELEC_VAL, x_CURR].includes('NULL')) {\n//         console.log('Invalid parameters');\n//         return 'Invalid parameters';\n//     }\n\n//     const parameter = getParameterByGeoSt(T_STFIPS);\n//     let NM_STATE_PARAMETER_TABLE = {\n//         AVG1: parameter ? parameter.AVG1 : 0,\n//         AVG2: parameter ? parameter.AVG2 : 0\n//     };\n\n//     // ... rest of the logic\n\n//     console.log('Returning from electricImputeModule:', EXPS_ELEC_VAL);\n//     return EXPS_ELEC_VAL;\n// }\n\n// console.log(electricEnergyModule(T_STFIPS, '2022', 1000, 'M'));\n\n// Test cases\n// console.log(electricEnergyModule('01', '2022', 1000, 'M'));  // Should execute all three functions for GEO_ST '01'\n// console.log(electricEnergyModule(undefined, '2022', 500, 'M'));  // Should return 'Invalid parameters'\n// console.log(electricEnergyModule('02', 'NULL', 500, 'M'));  // Should return 'Invalid parameters'\n// console.log(electricEnergyModule('03', '2022', 500, 'M'));  // Should return 'Invalid STFIPS' because '03' is not in parameterTableData\n\n// function getElecState(REFPER, params) {\n//     let stateParam;\n//     // Choose parameter table based on REFPER\n//     if (REFPER.slice(0, 4) === '2022') {\n//         stateParam = params.MN_ELECTRIC_STATE;\n//     } else if (REFPER === '2023A1') {\n//         stateParam = params.ASM23_ELECTRIC_STATE;\n//     } else if (REFPER === '2024A1') {\n//         stateParam = params.ASM24_ELECTRIC_STATE;\n//     } // ... add other conditions for other years\n\n//     return stateParam;\n// }\n// console.log(getElecState('2022', params));\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 680,
        "wires": [
            [
                "fb0490d46f6dac6d",
                "d9030a8fd1f031b8"
            ]
        ]
    },
    {
        "id": "fb0490d46f6dac6d",
        "type": "debug",
        "z": "6399b853963e761e",
        "name": "debug Main",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 600,
        "wires": []
    },
    {
        "id": "d9030a8fd1f031b8",
        "type": "link out",
        "z": "6399b853963e761e",
        "name": "link out 60",
        "mode": "link",
        "links": [
            "7d91540d69ac16c1",
            "688a39b3e0070fe9",
            "95d077dd39781efe"
        ],
        "x": 595,
        "y": 720,
        "wires": []
    }
]